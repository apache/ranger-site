{
  "swagger": "2.0",
  "info" : {
    "description" : "Apache Ranger is a framework to enable, monitor and manage comprehensive data security across the Hadoop platform. Apache Ranger currently provides a centralized security adminstration, fine grain access control and detailed auditing for user access within Apache Hadoop, Apache Hive, Apache HBase and other Apache components",
    "license" : {
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html",
      "name" : "Apache 2.0 License"
    },
    "version" : "2.2.0",
    "title" : "Ranger REST API"
  },
  "schemes" : [],
  "tags" : [
    {
      "name" : "AssetREST"
    }
    ,
    {
      "name" : "MetricsREST"
    }
    ,
    {
      "name" : "PublicAPIs"
    }
    ,
    {
      "name" : "PublicAPIsv2"
    }
    ,
    {
      "name" : "RoleREST"
    }
    ,
    {
      "name" : "SecurityZoneREST"
    }
    ,
    {
      "name" : "ServiceREST"
    }
    ,
    {
      "name" : "TagREST"
    }
    ,
    {
      "name" : "UserREST"
    }
    ,
    {
      "name" : "XAuditREST"
    }
    ,
    {
      "name" : "XKeyREST"
    }
    ,
    {
      "name" : "XUserREST"
    }
  ],
  "definitions" : {
    "json_AccessResult" : {
      "type" : "string",
      "title" : "AccessResult",
          "enum" : [
            "DENIED",
            "ALLOWED",
            "NOT_DETERMINED"
          ],
      "description" : ""
    }
    ,
    "json_AccessResult_RangerResourceACLs" : {
      "type" : "object",
      "title" : "AccessResult",
          "properties" : {
            "isFinal" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "result" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "policy" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerPolicy"
            }
          },
      "example" : {
  "isFinal" : true,
  "result" : 12345,
  "policy" : {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }
},
      "description" : ""
    }
    ,
    "json_AuditFilter" : {
      "type" : "object",
      "title" : "AuditFilter",
          "properties" : {
            "roles" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "users" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "accessResult" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_AccessResult"
            },
            "isAudited" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "accessTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "resources" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_RangerPolicyResource"
}
            },
            "actions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "groups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "roles" : [ "...", "..." ],
  "users" : [ "...", "..." ],
  "accessResult" : "DENIED",
  "isAudited" : true,
  "accessTypes" : [ "...", "..." ],
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "actions" : [ "...", "..." ],
  "groups" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_DataMaskResult" : {
      "type" : "object",
      "title" : "DataMaskResult",
          "properties" : {
            "maskInfo" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerPolicyItemDataMaskInfo"
            },
            "isConditional" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "users" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "accessTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "roles" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "groups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "maskInfo" : {
    "dataMaskType" : "...",
    "valueExpr" : "...",
    "conditionExpr" : "..."
  },
  "isConditional" : true,
  "users" : [ "...", "..." ],
  "accessTypes" : [ "...", "..." ],
  "roles" : [ "...", "..." ],
  "groups" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_GrantRevokeRequest" : {
      "type" : "object",
      "title" : "GrantRevokeRequest",
          "properties" : {
            "roles" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "delegateAdmin" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "ownerUser" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "zoneName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "replaceExistingPermissions" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "sessionId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "users" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "clientIPAddress" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "grantorGroups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "enableAudit" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "isRecursive" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "remoteIPAddress" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "clusterName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "accessTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "resource" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "grantor" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "requestData" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "clientType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "forwardedAddresses" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "groups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "roles" : [ "...", "..." ],
  "delegateAdmin" : true,
  "ownerUser" : "...",
  "zoneName" : "...",
  "replaceExistingPermissions" : true,
  "sessionId" : "...",
  "users" : [ "...", "..." ],
  "clientIPAddress" : "...",
  "grantorGroups" : [ "...", "..." ],
  "enableAudit" : true,
  "isRecursive" : true,
  "remoteIPAddress" : "...",
  "clusterName" : "...",
  "accessTypes" : [ "...", "..." ],
  "resource" : {
    "property1" : "...",
    "property2" : "..."
  },
  "grantor" : "...",
  "requestData" : "...",
  "clientType" : "...",
  "forwardedAddresses" : [ "...", "..." ],
  "groups" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_GrantRevokeRoleRequest" : {
      "type" : "object",
      "title" : "GrantRevokeRoleRequest",
          "properties" : {
            "users" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "requestData" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "grantorGroups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "clientType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "targetRoles" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "clusterName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "grantOption" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "clientIPAddress" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sessionId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "grantor" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "roles" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "users" : [ "...", "..." ],
  "requestData" : "...",
  "grantorGroups" : [ "...", "..." ],
  "clientType" : "...",
  "targetRoles" : [ "...", "..." ],
  "clusterName" : "...",
  "grantOption" : true,
  "clientIPAddress" : "...",
  "sessionId" : "...",
  "grantor" : "...",
  "groups" : [ "...", "..." ],
  "roles" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_GroupInfo" : {
      "type" : "object",
      "title" : "GroupInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerBaseModelObject"
        },
        {
          "properties" : {
            "otherAttributes" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "otherAttributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "name" : "...",
  "description" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_GroupUserInfo" : {
      "type" : "object",
      "title" : "GroupUserInfo",
          "properties" : {
            "groupName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "delUsers" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "addUsers" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "groupName" : "...",
  "delUsers" : [ "...", "..." ],
  "addUsers" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_HttpEntity" : {
      "type" : "object",
      "title" : "HttpEntity",
          "properties" : {
            "headers" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
"type" : "array",
"items" : {
  "type" : "string"
}
}
            },
            "body" : {
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          },
      "example" : {
  "headers" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  },
  "body" : { }
},
      "description" : ""
    }
    ,
    "json_HttpStatus" : {
      "type" : "string",
      "title" : "HttpStatus",
          "enum" : [
            "CONTINUE",
            "SWITCHING_PROTOCOLS",
            "PROCESSING",
            "CHECKPOINT",
            "OK",
            "CREATED",
            "ACCEPTED",
            "NON_AUTHORITATIVE_INFORMATION",
            "NO_CONTENT",
            "RESET_CONTENT",
            "PARTIAL_CONTENT",
            "MULTI_STATUS",
            "ALREADY_REPORTED",
            "IM_USED",
            "MULTIPLE_CHOICES",
            "MOVED_PERMANENTLY",
            "FOUND",
            "MOVED_TEMPORARILY",
            "SEE_OTHER",
            "NOT_MODIFIED",
            "USE_PROXY",
            "TEMPORARY_REDIRECT",
            "PERMANENT_REDIRECT",
            "BAD_REQUEST",
            "UNAUTHORIZED",
            "PAYMENT_REQUIRED",
            "FORBIDDEN",
            "NOT_FOUND",
            "METHOD_NOT_ALLOWED",
            "NOT_ACCEPTABLE",
            "PROXY_AUTHENTICATION_REQUIRED",
            "REQUEST_TIMEOUT",
            "CONFLICT",
            "GONE",
            "LENGTH_REQUIRED",
            "PRECONDITION_FAILED",
            "PAYLOAD_TOO_LARGE",
            "REQUEST_ENTITY_TOO_LARGE",
            "URI_TOO_LONG",
            "REQUEST_URI_TOO_LONG",
            "UNSUPPORTED_MEDIA_TYPE",
            "REQUESTED_RANGE_NOT_SATISFIABLE",
            "EXPECTATION_FAILED",
            "I_AM_A_TEAPOT",
            "INSUFFICIENT_SPACE_ON_RESOURCE",
            "METHOD_FAILURE",
            "DESTINATION_LOCKED",
            "UNPROCESSABLE_ENTITY",
            "LOCKED",
            "FAILED_DEPENDENCY",
            "TOO_EARLY",
            "UPGRADE_REQUIRED",
            "PRECONDITION_REQUIRED",
            "TOO_MANY_REQUESTS",
            "REQUEST_HEADER_FIELDS_TOO_LARGE",
            "UNAVAILABLE_FOR_LEGAL_REASONS",
            "INTERNAL_SERVER_ERROR",
            "NOT_IMPLEMENTED",
            "BAD_GATEWAY",
            "SERVICE_UNAVAILABLE",
            "GATEWAY_TIMEOUT",
            "HTTP_VERSION_NOT_SUPPORTED",
            "VARIANT_ALSO_NEGOTIATES",
            "INSUFFICIENT_STORAGE",
            "LOOP_DETECTED",
            "BANDWIDTH_LIMIT_EXCEEDED",
            "NOT_EXTENDED",
            "NETWORK_AUTHENTICATION_REQUIRED"
          ],
      "description" : ""
    }
    ,
    "json_MatchType" : {
      "type" : "string",
      "title" : "MatchType",
          "enum" : [
            "NONE",
            "SELF",
            "DESCENDANT",
            "ANCESTOR",
            "SELF_AND_ALL_DESCENDANTS"
          ],
      "description" : ""
    }
    ,
    "json_Message" : {
      "type" : "object",
      "title" : "Message",
          "properties" : {
            "fieldName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "objectId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "rbKey" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "message" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "fieldName" : "...",
  "objectId" : 12345,
  "rbKey" : "...",
  "message" : "...",
  "name" : "..."
},
      "description" : ""
    }
    ,
    "json_RESTResponse" : {
      "type" : "object",
      "title" : "RESTResponse",
          "properties" : {
            "message" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "msgDesc" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "httpStatusCode" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "messageList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_Message"
}
            },
            "statusCode" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          },
      "example" : {
  "message" : "...",
  "msgDesc" : "...",
  "httpStatusCode" : 12345,
  "messageList" : [ {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  }, {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  } ],
  "statusCode" : 12345
},
      "description" : ""
    }
    ,
    "json_RangerAccessResource" : {
      "type" : "object",
      "title" : "RangerAccessResource",
          "properties" : {
            "asMap" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "cacheKey" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "asString" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "readOnlyCopy" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerAccessResource"
            },
            "serviceDef" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "leafName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "keys" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "ownerUser" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "asMap" : {
    "property1" : { },
    "property2" : { }
  },
  "cacheKey" : "...",
  "asString" : "...",
  "readOnlyCopy" : {
    "asMap" : {
      "property1" : { },
      "property2" : { }
    },
    "cacheKey" : "...",
    "asString" : "...",
    "readOnlyCopy" : { },
    "serviceDef" : {
      "accessTypes" : [ { }, { } ],
      "label" : "...",
      "rbKeyLabel" : "...",
      "dataMaskDef" : { },
      "resources" : [ { }, { } ],
      "options" : {
        "property1" : "...",
        "property2" : "..."
      },
      "rowFilterDef" : { },
      "description" : "...",
      "policyConditions" : [ { }, { } ],
      "implClass" : "...",
      "displayName" : "...",
      "name" : "...",
      "contextEnrichers" : [ { }, { } ],
      "enums" : [ { }, { } ],
      "rbKeyDescription" : "...",
      "configs" : [ { }, { } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "leafName" : "...",
    "keys" : [ "...", "..." ],
    "ownerUser" : "..."
  },
  "serviceDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "label" : "...",
    "rbKeyLabel" : "...",
    "dataMaskDef" : {
      "maskTypes" : [ { }, { } ],
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ],
    "options" : {
      "property1" : "...",
      "property2" : "..."
    },
    "rowFilterDef" : {
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "description" : "...",
    "policyConditions" : [ {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    }, {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    } ],
    "implClass" : "...",
    "displayName" : "...",
    "name" : "...",
    "contextEnrichers" : [ {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    }, {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    } ],
    "enums" : [ {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    }, {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    } ],
    "rbKeyDescription" : "...",
    "configs" : [ {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    }, {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  },
  "leafName" : "...",
  "keys" : [ "...", "..." ],
  "ownerUser" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerAccessResourceImpl" : {
      "type" : "object",
      "title" : "RangerAccessResourceImpl",
          "properties" : {
            "leafName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "asMap" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "readOnlyCopy" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerAccessResource"
            },
            "keys" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "serviceDef" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "cacheKey" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "ownerUser" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "asString" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "leafName" : "...",
  "asMap" : {
    "property1" : { },
    "property2" : { }
  },
  "readOnlyCopy" : {
    "asMap" : {
      "property1" : { },
      "property2" : { }
    },
    "cacheKey" : "...",
    "asString" : "...",
    "readOnlyCopy" : { },
    "serviceDef" : {
      "accessTypes" : [ { }, { } ],
      "label" : "...",
      "rbKeyLabel" : "...",
      "dataMaskDef" : { },
      "resources" : [ { }, { } ],
      "options" : {
        "property1" : "...",
        "property2" : "..."
      },
      "rowFilterDef" : { },
      "description" : "...",
      "policyConditions" : [ { }, { } ],
      "implClass" : "...",
      "displayName" : "...",
      "name" : "...",
      "contextEnrichers" : [ { }, { } ],
      "enums" : [ { }, { } ],
      "rbKeyDescription" : "...",
      "configs" : [ { }, { } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "leafName" : "...",
    "keys" : [ "...", "..." ],
    "ownerUser" : "..."
  },
  "keys" : [ "...", "..." ],
  "serviceDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "label" : "...",
    "rbKeyLabel" : "...",
    "dataMaskDef" : {
      "maskTypes" : [ { }, { } ],
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ],
    "options" : {
      "property1" : "...",
      "property2" : "..."
    },
    "rowFilterDef" : {
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "description" : "...",
    "policyConditions" : [ {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    }, {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    } ],
    "implClass" : "...",
    "displayName" : "...",
    "name" : "...",
    "contextEnrichers" : [ {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    }, {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    } ],
    "enums" : [ {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    }, {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    } ],
    "rbKeyDescription" : "...",
    "configs" : [ {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    }, {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  },
  "cacheKey" : "...",
  "ownerUser" : "...",
  "asString" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerAccessResourceReadOnly" : {
      "type" : "object",
      "title" : "RangerAccessResourceReadOnly",
          "properties" : {
            "asMap" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "readOnlyCopy" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerAccessResource"
            },
            "leafName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "ownerUser" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "keys" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "cacheKey" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceDef" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "asString" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "asMap" : {
    "property1" : { },
    "property2" : { }
  },
  "readOnlyCopy" : {
    "asMap" : {
      "property1" : { },
      "property2" : { }
    },
    "cacheKey" : "...",
    "asString" : "...",
    "readOnlyCopy" : { },
    "serviceDef" : {
      "accessTypes" : [ { }, { } ],
      "label" : "...",
      "rbKeyLabel" : "...",
      "dataMaskDef" : { },
      "resources" : [ { }, { } ],
      "options" : {
        "property1" : "...",
        "property2" : "..."
      },
      "rowFilterDef" : { },
      "description" : "...",
      "policyConditions" : [ { }, { } ],
      "implClass" : "...",
      "displayName" : "...",
      "name" : "...",
      "contextEnrichers" : [ { }, { } ],
      "enums" : [ { }, { } ],
      "rbKeyDescription" : "...",
      "configs" : [ { }, { } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "leafName" : "...",
    "keys" : [ "...", "..." ],
    "ownerUser" : "..."
  },
  "leafName" : "...",
  "ownerUser" : "...",
  "keys" : [ "...", "..." ],
  "cacheKey" : "...",
  "serviceDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "label" : "...",
    "rbKeyLabel" : "...",
    "dataMaskDef" : {
      "maskTypes" : [ { }, { } ],
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ],
    "options" : {
      "property1" : "...",
      "property2" : "..."
    },
    "rowFilterDef" : {
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "description" : "...",
    "policyConditions" : [ {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    }, {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    } ],
    "implClass" : "...",
    "displayName" : "...",
    "name" : "...",
    "contextEnrichers" : [ {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    }, {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    } ],
    "enums" : [ {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    }, {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    } ],
    "rbKeyDescription" : "...",
    "configs" : [ {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    }, {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  },
  "asString" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerAccessTypeDef" : {
      "type" : "object",
      "title" : "RangerAccessTypeDef",
          "properties" : {
            "impliedGrants" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "rbKeyLabel" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "impliedGrants" : [ "...", "..." ],
  "name" : "...",
  "label" : "...",
  "itemId" : 12345,
  "rbKeyLabel" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerAuditPolicy" : {
      "type" : "object",
      "title" : "RangerAuditPolicy",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerPolicy"
        },
        {
          "properties" : {
            "auditPolicyItems" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerAuditPolicyItem"
}
            }
          }
        }
      ],
      "example" : {
  "auditPolicyItems" : [ {
    "accessResult" : "NOT_DETERMINED",
    "accessTypes" : [ "...", "..." ],
    "actions" : [ "...", "..." ],
    "isAudited" : true,
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "accessResult" : "NOT_DETERMINED",
    "accessTypes" : [ "...", "..." ],
    "actions" : [ "...", "..." ],
    "isAudited" : true,
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_RangerAuditPolicyItem" : {
      "type" : "object",
      "title" : "RangerAuditPolicyItem",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerPolicyItem"
        },
        {
          "properties" : {
            "accessResult" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_AccessResult"
            },
            "accessTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "actions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "isAudited" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "accessResult" : "ALLOWED",
  "accessTypes" : [ "...", "..." ],
  "actions" : [ "...", "..." ],
  "isAudited" : true,
  "groups" : [ "...", "..." ],
  "accesses" : [ {
    "type" : "...",
    "isAllowed" : true
  }, {
    "type" : "...",
    "isAllowed" : true
  } ],
  "delegateAdmin" : true,
  "users" : [ "...", "..." ],
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "roles" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_RangerBaseModelObject" : {
      "type" : "object",
      "title" : "RangerBaseModelObject",
          "properties" : {
            "createTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "updatedBy" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "createdBy" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "guid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "updateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "isEnabled" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_RangerContextEnricherDef" : {
      "type" : "object",
      "title" : "RangerContextEnricherDef",
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "enricherOptions" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "enricher" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "name" : "...",
  "itemId" : 12345,
  "enricherOptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "enricher" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerDataMaskDef" : {
      "type" : "object",
      "title" : "RangerDataMaskDef",
          "properties" : {
            "maskTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerDataMaskTypeDef"
}
            },
            "accessTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerAccessTypeDef"
}
            },
            "resources" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerResourceDef"
}
            }
          },
      "example" : {
  "maskTypes" : [ {
    "itemId" : 12345,
    "rbKeyDescription" : "...",
    "rbKeyLabel" : "...",
    "dataMaskOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "description" : "...",
    "transformer" : "...",
    "name" : "...",
    "label" : "..."
  }, {
    "itemId" : 12345,
    "rbKeyDescription" : "...",
    "rbKeyLabel" : "...",
    "dataMaskOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "description" : "...",
    "transformer" : "...",
    "name" : "...",
    "label" : "..."
  } ],
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_RangerDataMaskPolicyItem" : {
      "type" : "object",
      "title" : "RangerDataMaskPolicyItem",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerPolicyItem"
        },
        {
          "properties" : {
            "dataMaskInfo" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerPolicyItemDataMaskInfo"
            }
          }
        }
      ],
      "example" : {
  "dataMaskInfo" : {
    "dataMaskType" : "...",
    "valueExpr" : "...",
    "conditionExpr" : "..."
  },
  "groups" : [ "...", "..." ],
  "accesses" : [ {
    "type" : "...",
    "isAllowed" : true
  }, {
    "type" : "...",
    "isAllowed" : true
  } ],
  "delegateAdmin" : true,
  "users" : [ "...", "..." ],
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "roles" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_RangerDataMaskTypeDef" : {
      "type" : "object",
      "title" : "RangerDataMaskTypeDef",
          "properties" : {
            "itemId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "rbKeyDescription" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dataMaskOptions" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "transformer" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "itemId" : 12345,
  "rbKeyDescription" : "...",
  "rbKeyLabel" : "...",
  "dataMaskOptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "description" : "...",
  "transformer" : "...",
  "name" : "...",
  "label" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerEnumDef" : {
      "type" : "object",
      "title" : "RangerEnumDef",
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "defaultIndex" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "elements" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerEnumElementDef"
}
            },
            "itemId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "name" : "...",
  "defaultIndex" : 12345,
  "elements" : [ {
    "itemId" : 12345,
    "label" : "...",
    "rbKeyLabel" : "...",
    "name" : "..."
  }, {
    "itemId" : 12345,
    "label" : "...",
    "rbKeyLabel" : "...",
    "name" : "..."
  } ],
  "itemId" : 12345
},
      "description" : ""
    }
    ,
    "json_RangerEnumElementDef" : {
      "type" : "object",
      "title" : "RangerEnumElementDef",
          "properties" : {
            "itemId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "label" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "itemId" : 12345,
  "label" : "...",
  "rbKeyLabel" : "...",
  "name" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerExportPolicyList" : {
      "type" : "object",
      "title" : "RangerExportPolicyList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerPolicyList"
        },
        {
          "properties" : {
            "metaDataInfo" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "example" : {
  "metaDataInfo" : {
    "property1" : { },
    "property2" : { }
  },
  "policies" : [ {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerMetrics" : {
      "type" : "object",
      "title" : "RangerMetrics",
          "properties" : {
            "data" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            }
          },
      "example" : {
  "data" : {
    "property1" : { },
    "property2" : { }
  }
},
      "description" : ""
    }
    ,
    "json_RangerMutableResource" : {
      "type" : "object",
      "title" : "RangerMutableResource",
      "example" : { },
      "description" : ""
    }
    ,
    "json_RangerPluginInfo" : {
      "type" : "object",
      "title" : "RangerPluginInfo",
          "properties" : {
            "info" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "serviceDisplayName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceTypeDisplayName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "appType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "hostName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "updateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "ipAddress" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "createTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "info" : {
    "property1" : "...",
    "property2" : "..."
  },
  "serviceDisplayName" : "...",
  "id" : 12345,
  "serviceTypeDisplayName" : "...",
  "appType" : "...",
  "hostName" : "...",
  "updateTime" : 12345,
  "serviceName" : "...",
  "ipAddress" : "...",
  "serviceType" : "...",
  "createTime" : 12345
},
      "description" : ""
    }
    ,
    "json_RangerPluginInfoList" : {
      "type" : "object",
      "title" : "RangerPluginInfoList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "pluginInfoList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPluginInfo"
}
            }
          }
        }
      ],
      "example" : {
  "pluginInfoList" : [ {
    "info" : {
      "property1" : "...",
      "property2" : "..."
    },
    "serviceDisplayName" : "...",
    "id" : 12345,
    "serviceTypeDisplayName" : "...",
    "appType" : "...",
    "hostName" : "...",
    "updateTime" : 12345,
    "serviceName" : "...",
    "ipAddress" : "...",
    "serviceType" : "...",
    "createTime" : 12345
  }, {
    "info" : {
      "property1" : "...",
      "property2" : "..."
    },
    "serviceDisplayName" : "...",
    "id" : 12345,
    "serviceTypeDisplayName" : "...",
    "appType" : "...",
    "hostName" : "...",
    "updateTime" : 12345,
    "serviceName" : "...",
    "ipAddress" : "...",
    "serviceType" : "...",
    "createTime" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerPolicy" : {
      "type" : "object",
      "title" : "RangerPolicy",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerBaseModelObject"
        },
        {
          "properties" : {
            "denyExceptions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicyItem"
}
            },
            "allowExceptions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicyItem"
}
            },
            "validitySchedules" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerValiditySchedule"
}
            },
            "policyPriority" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "policyType" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "isAuditEnabled" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "zoneName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "denyPolicyItems" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicyItem"
}
            },
            "service" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resources" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_RangerPolicyResource"
}
            },
            "dataMaskPolicyItems" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerDataMaskPolicyItem"
}
            },
            "rowFilterPolicyItems" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerRowFilterPolicyItem"
}
            },
            "policyItems" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicyItem"
}
            },
            "policyLabels" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "resourceSignature" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "isDenyAllElse" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "conditions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicyItemCondition"
}
            },
            "options" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_RangerPolicyConditionDef" : {
      "type" : "object",
      "title" : "RangerPolicyConditionDef",
          "properties" : {
            "uiHint" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validationRegEx" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "evaluatorOptions" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "validationMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "evaluator" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyValidationMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyDescription" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "uiHint" : "...",
  "description" : "...",
  "itemId" : 12345,
  "name" : "...",
  "validationRegEx" : "...",
  "label" : "...",
  "rbKeyLabel" : "...",
  "evaluatorOptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "validationMessage" : "...",
  "evaluator" : "...",
  "rbKeyValidationMessage" : "...",
  "rbKeyDescription" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerPolicyDelta" : {
      "type" : "object",
      "title" : "RangerPolicyDelta",
          "properties" : {
            "policy" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "changeType" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "policiesVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "policy" : {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  },
  "changeType" : 12345,
  "policiesVersion" : 12345,
  "id" : 12345
},
      "description" : ""
    }
    ,
    "json_RangerPolicyItem" : {
      "type" : "object",
      "title" : "RangerPolicyItem",
          "properties" : {
            "groups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "accesses" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicyItemAccess"
}
            },
            "delegateAdmin" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "users" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "conditions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicyItemCondition"
}
            },
            "roles" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "groups" : [ "...", "..." ],
  "accesses" : [ {
    "type" : "...",
    "isAllowed" : true
  }, {
    "type" : "...",
    "isAllowed" : true
  } ],
  "delegateAdmin" : true,
  "users" : [ "...", "..." ],
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "roles" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_RangerPolicyItemAccess" : {
      "type" : "object",
      "title" : "RangerPolicyItemAccess",
          "properties" : {
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "isAllowed" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "type" : "...",
  "isAllowed" : true
},
      "description" : ""
    }
    ,
    "json_RangerPolicyItemCondition" : {
      "type" : "object",
      "title" : "RangerPolicyItemCondition",
          "properties" : {
            "values" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "values" : [ "...", "..." ],
  "type" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerPolicyItemDataMaskInfo" : {
      "type" : "object",
      "title" : "RangerPolicyItemDataMaskInfo",
          "properties" : {
            "dataMaskType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "valueExpr" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "conditionExpr" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "dataMaskType" : "...",
  "valueExpr" : "...",
  "conditionExpr" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerPolicyItemRowFilterInfo" : {
      "type" : "object",
      "title" : "RangerPolicyItemRowFilterInfo",
          "properties" : {
            "filterExpr" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "filterExpr" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerPolicyList" : {
      "type" : "object",
      "title" : "RangerPolicyList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "policies" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicy"
}
            }
          }
        }
      ],
      "example" : {
  "policies" : [ {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerPolicyResource" : {
      "type" : "object",
      "title" : "RangerPolicyResource",
          "properties" : {
            "values" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "isRecursive" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "isExcludes" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "values" : [ "...", "..." ],
  "isRecursive" : true,
  "isExcludes" : true
},
      "description" : ""
    }
    ,
    "json_RangerRequestedResources" : {
      "type" : "object",
      "title" : "RangerRequestedResources",
          "properties" : {
            "requestedResources" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerAccessResource"
}
            }
          },
      "example" : {
  "requestedResources" : [ {
    "asMap" : {
      "property1" : { },
      "property2" : { }
    },
    "cacheKey" : "...",
    "asString" : "...",
    "readOnlyCopy" : { },
    "serviceDef" : {
      "accessTypes" : [ { }, { } ],
      "label" : "...",
      "rbKeyLabel" : "...",
      "dataMaskDef" : { },
      "resources" : [ { }, { } ],
      "options" : {
        "property1" : "...",
        "property2" : "..."
      },
      "rowFilterDef" : { },
      "description" : "...",
      "policyConditions" : [ { }, { } ],
      "implClass" : "...",
      "displayName" : "...",
      "name" : "...",
      "contextEnrichers" : [ { }, { } ],
      "enums" : [ { }, { } ],
      "rbKeyDescription" : "...",
      "configs" : [ { }, { } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "leafName" : "...",
    "keys" : [ "...", "..." ],
    "ownerUser" : "..."
  }, {
    "asMap" : {
      "property1" : { },
      "property2" : { }
    },
    "cacheKey" : "...",
    "asString" : "...",
    "readOnlyCopy" : { },
    "serviceDef" : {
      "accessTypes" : [ { }, { } ],
      "label" : "...",
      "rbKeyLabel" : "...",
      "dataMaskDef" : { },
      "resources" : [ { }, { } ],
      "options" : {
        "property1" : "...",
        "property2" : "..."
      },
      "rowFilterDef" : { },
      "description" : "...",
      "policyConditions" : [ { }, { } ],
      "implClass" : "...",
      "displayName" : "...",
      "name" : "...",
      "contextEnrichers" : [ { }, { } ],
      "enums" : [ { }, { } ],
      "rbKeyDescription" : "...",
      "configs" : [ { }, { } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "leafName" : "...",
    "keys" : [ "...", "..." ],
    "ownerUser" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_RangerResourceDef" : {
      "type" : "object",
      "title" : "RangerResourceDef",
          "properties" : {
            "recursiveSupported" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "label" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "excludesSupported" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "parent" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "matcher" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "accessTypeRestrictions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "lookupSupported" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "isValidLeaf" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "matcherOptions" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "mandatory" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "validationMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "level" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "uiHint" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyValidationMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validationRegEx" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyDescription" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "recursiveSupported" : true,
  "label" : "...",
  "excludesSupported" : true,
  "parent" : "...",
  "matcher" : "...",
  "type" : "...",
  "accessTypeRestrictions" : [ "...", "..." ],
  "lookupSupported" : true,
  "isValidLeaf" : true,
  "matcherOptions" : {
    "property1" : "...",
    "property2" : "..."
  },
  "name" : "...",
  "rbKeyLabel" : "...",
  "mandatory" : true,
  "validationMessage" : "...",
  "level" : 12345,
  "itemId" : 12345,
  "uiHint" : "...",
  "rbKeyValidationMessage" : "...",
  "description" : "...",
  "validationRegEx" : "...",
  "rbKeyDescription" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerRole" : {
      "type" : "object",
      "title" : "RangerRole",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerBaseModelObject"
        },
        {
          "properties" : {
            "createdByUser" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RoleMember"
}
            },
            "users" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RoleMember"
}
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "options" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "roles" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RoleMember"
}
            }
          }
        }
      ],
      "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_RangerRoleList" : {
      "type" : "object",
      "title" : "RangerRoleList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "roles" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerRole"
}
            }
          }
        }
      ],
      "example" : {
  "roles" : [ {
    "createdByUser" : "...",
    "groups" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "users" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "name" : "...",
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "description" : "...",
    "roles" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "createdByUser" : "...",
    "groups" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "users" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "name" : "...",
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "description" : "...",
    "roles" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerRoles" : {
      "type" : "object",
      "title" : "RangerRoles",
          "properties" : {
            "roleVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "roleUpdateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "rangerRoles" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerRole"
}
            }
          },
      "example" : {
  "roleVersion" : 12345,
  "serviceName" : "...",
  "roleUpdateTime" : 12345,
  "rangerRoles" : [ {
    "createdByUser" : "...",
    "groups" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "users" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "name" : "...",
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "description" : "...",
    "roles" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "createdByUser" : "...",
    "groups" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "users" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "name" : "...",
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "description" : "...",
    "roles" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ]
},
      "description" : ""
    }
    ,
    "json_RangerRowFilterDef" : {
      "type" : "object",
      "title" : "RangerRowFilterDef",
          "properties" : {
            "accessTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerAccessTypeDef"
}
            },
            "resources" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerResourceDef"
}
            }
          },
      "example" : {
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_RangerRowFilterPolicyItem" : {
      "type" : "object",
      "title" : "RangerRowFilterPolicyItem",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerPolicyItem"
        },
        {
          "properties" : {
            "rowFilterInfo" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerPolicyItemRowFilterInfo"
            }
          }
        }
      ],
      "example" : {
  "rowFilterInfo" : {
    "filterExpr" : "..."
  },
  "groups" : [ "...", "..." ],
  "accesses" : [ {
    "type" : "...",
    "isAllowed" : true
  }, {
    "type" : "...",
    "isAllowed" : true
  } ],
  "delegateAdmin" : true,
  "users" : [ "...", "..." ],
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "roles" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_RangerSecurityZone" : {
      "type" : "object",
      "title" : "RangerSecurityZone",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerBaseModelObject"
        },
        {
          "properties" : {
            "tagServices" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "auditUsers" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "adminUserGroups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "adminUsers" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "services" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_RangerSecurityZoneService"
}
            },
            "auditUserGroups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "tagServices" : [ "...", "..." ],
  "description" : "...",
  "auditUsers" : [ "...", "..." ],
  "adminUserGroups" : [ "...", "..." ],
  "adminUsers" : [ "...", "..." ],
  "name" : "...",
  "services" : {
    "property1" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    },
    "property2" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    }
  },
  "auditUserGroups" : [ "...", "..." ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_RangerSecurityZoneList" : {
      "type" : "object",
      "title" : "RangerSecurityZoneList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "securityZones" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerSecurityZone"
}
            }
          }
        }
      ],
      "example" : {
  "securityZones" : [ {
    "tagServices" : [ "...", "..." ],
    "description" : "...",
    "auditUsers" : [ "...", "..." ],
    "adminUserGroups" : [ "...", "..." ],
    "adminUsers" : [ "...", "..." ],
    "name" : "...",
    "services" : {
      "property1" : {
        "resources" : [ {
          "property1" : [ ],
          "property2" : [ ]
        }, {
          "property1" : [ ],
          "property2" : [ ]
        } ]
      },
      "property2" : {
        "resources" : [ {
          "property1" : [ ],
          "property2" : [ ]
        }, {
          "property1" : [ ],
          "property2" : [ ]
        } ]
      }
    },
    "auditUserGroups" : [ "...", "..." ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "tagServices" : [ "...", "..." ],
    "description" : "...",
    "auditUsers" : [ "...", "..." ],
    "adminUserGroups" : [ "...", "..." ],
    "adminUsers" : [ "...", "..." ],
    "name" : "...",
    "services" : {
      "property1" : {
        "resources" : [ {
          "property1" : [ ],
          "property2" : [ ]
        }, {
          "property1" : [ ],
          "property2" : [ ]
        } ]
      },
      "property2" : {
        "resources" : [ {
          "property1" : [ ],
          "property2" : [ ]
        }, {
          "property1" : [ ],
          "property2" : [ ]
        } ]
      }
    },
    "auditUserGroups" : [ "...", "..." ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerSecurityZoneService" : {
      "type" : "object",
      "title" : "RangerSecurityZoneService",
          "properties" : {
            "resources" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
"type" : "object",
"additionalProperties" : {
"type" : "array",
"items" : {
  "type" : "object"
}
}
}
            }
          },
      "example" : {
  "resources" : [ {
    "property1" : [ ],
    "property2" : [ ]
  }, {
    "property1" : [ ],
    "property2" : [ ]
  } ]
},
      "description" : ""
    }
    ,
    "json_RangerService" : {
      "type" : "object",
      "title" : "RangerService",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerBaseModelObject"
        },
        {
          "properties" : {
            "policyUpdateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "configs" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "tagVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "tagUpdateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "displayName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "tagService" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "policyUpdateTime" : 12345,
  "description" : "...",
  "name" : "...",
  "type" : "...",
  "configs" : {
    "property1" : "...",
    "property2" : "..."
  },
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "displayName" : "...",
  "policyVersion" : 12345,
  "tagService" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_RangerServiceConfigDef" : {
      "type" : "object",
      "title" : "RangerServiceConfigDef",
          "properties" : {
            "rbKeyDescription" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "subType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "defaultValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyValidationMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "mandatory" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "validationRegEx" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validationMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "uiHint" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "rbKeyDescription" : "...",
  "subType" : "...",
  "rbKeyLabel" : "...",
  "defaultValue" : "...",
  "rbKeyValidationMessage" : "...",
  "label" : "...",
  "name" : "...",
  "description" : "...",
  "itemId" : 12345,
  "mandatory" : true,
  "validationRegEx" : "...",
  "validationMessage" : "...",
  "type" : "...",
  "uiHint" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerServiceDef" : {
      "type" : "object",
      "title" : "RangerServiceDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerBaseModelObject"
        },
        {
          "properties" : {
            "accessTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerAccessTypeDef"
}
            },
            "label" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dataMaskDef" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerDataMaskDef"
            },
            "resources" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerResourceDef"
}
            },
            "options" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "rowFilterDef" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerRowFilterDef"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyConditions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicyConditionDef"
}
            },
            "implClass" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "displayName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "contextEnrichers" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerContextEnricherDef"
}
            },
            "enums" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerEnumDef"
}
            },
            "rbKeyDescription" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "configs" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerServiceConfigDef"
}
            }
          }
        }
      ],
      "example" : {
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "label" : "...",
  "rbKeyLabel" : "...",
  "dataMaskDef" : {
    "maskTypes" : [ {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    }, {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    } ],
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ],
  "options" : {
    "property1" : "...",
    "property2" : "..."
  },
  "rowFilterDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "description" : "...",
  "policyConditions" : [ {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  }, {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  } ],
  "implClass" : "...",
  "displayName" : "...",
  "name" : "...",
  "contextEnrichers" : [ {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  }, {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  } ],
  "enums" : [ {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  }, {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  } ],
  "rbKeyDescription" : "...",
  "configs" : [ {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  }, {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_RangerServiceDefList" : {
      "type" : "object",
      "title" : "RangerServiceDefList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "serviceDefs" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerServiceDef"
}
            }
          }
        }
      ],
      "example" : {
  "serviceDefs" : [ {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "label" : "...",
    "rbKeyLabel" : "...",
    "dataMaskDef" : {
      "maskTypes" : [ { }, { } ],
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ],
    "options" : {
      "property1" : "...",
      "property2" : "..."
    },
    "rowFilterDef" : {
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "description" : "...",
    "policyConditions" : [ {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    }, {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    } ],
    "implClass" : "...",
    "displayName" : "...",
    "name" : "...",
    "contextEnrichers" : [ {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    }, {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    } ],
    "enums" : [ {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    }, {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    } ],
    "rbKeyDescription" : "...",
    "configs" : [ {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    }, {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "label" : "...",
    "rbKeyLabel" : "...",
    "dataMaskDef" : {
      "maskTypes" : [ { }, { } ],
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ],
    "options" : {
      "property1" : "...",
      "property2" : "..."
    },
    "rowFilterDef" : {
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "description" : "...",
    "policyConditions" : [ {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    }, {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    } ],
    "implClass" : "...",
    "displayName" : "...",
    "name" : "...",
    "contextEnrichers" : [ {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    }, {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    } ],
    "enums" : [ {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    }, {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    } ],
    "rbKeyDescription" : "...",
    "configs" : [ {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    }, {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerServiceList" : {
      "type" : "object",
      "title" : "RangerServiceList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "services" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerService"
}
            }
          }
        }
      ],
      "example" : {
  "services" : [ {
    "policyUpdateTime" : 12345,
    "description" : "...",
    "name" : "...",
    "type" : "...",
    "configs" : {
      "property1" : "...",
      "property2" : "..."
    },
    "tagVersion" : 12345,
    "tagUpdateTime" : 12345,
    "displayName" : "...",
    "policyVersion" : 12345,
    "tagService" : "...",
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "policyUpdateTime" : 12345,
    "description" : "...",
    "name" : "...",
    "type" : "...",
    "configs" : {
      "property1" : "...",
      "property2" : "..."
    },
    "tagVersion" : 12345,
    "tagUpdateTime" : 12345,
    "displayName" : "...",
    "policyVersion" : 12345,
    "tagService" : "...",
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerServiceResource" : {
      "type" : "object",
      "title" : "RangerServiceResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerBaseModelObject"
        },
        {
          "properties" : {
            "resourceElements" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_RangerPolicyResource"
}
            },
            "additionalInfo" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "ownerUser" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resourceSignature" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "resourceElements" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "additionalInfo" : {
    "property1" : "...",
    "property2" : "..."
  },
  "ownerUser" : "...",
  "serviceName" : "...",
  "resourceSignature" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_RangerTag" : {
      "type" : "object",
      "title" : "RangerTag",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerBaseModelObject"
        },
        {
          "properties" : {
            "validityPeriods" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerValiditySchedule"
}
            },
            "options" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "attributes" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "owner" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "validityPeriods" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "type" : "...",
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "owner" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_RangerTagAttributeDef" : {
      "type" : "object",
      "title" : "RangerTagAttributeDef",
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "name" : "...",
  "type" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerTagDef" : {
      "type" : "object",
      "title" : "RangerTagDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerBaseModelObject"
        },
        {
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "source" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "attributeDefs" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerTagAttributeDef"
}
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "source" : "...",
  "attributeDefs" : [ {
    "name" : "...",
    "type" : "..."
  }, {
    "name" : "...",
    "type" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_RangerTagForEval" : {
      "type" : "object",
      "title" : "RangerTagForEval",
          "properties" : {
            "options" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "attributes" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "matchType" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_MatchType"
            },
            "validityPeriods" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerValiditySchedule"
}
            }
          },
      "example" : {
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "type" : "...",
  "matchType" : "DESCENDANT",
  "validityPeriods" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ]
},
      "description" : ""
    }
    ,
    "json_RangerTagResource" : {
      "type" : "object",
      "title" : "RangerTagResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerAccessResourceImpl"
        },
        {
        }
      ],
      "example" : {
  "leafName" : "...",
  "asMap" : {
    "property1" : { },
    "property2" : { }
  },
  "readOnlyCopy" : {
    "asMap" : {
      "property1" : { },
      "property2" : { }
    },
    "cacheKey" : "...",
    "asString" : "...",
    "readOnlyCopy" : { },
    "serviceDef" : {
      "accessTypes" : [ { }, { } ],
      "label" : "...",
      "rbKeyLabel" : "...",
      "dataMaskDef" : { },
      "resources" : [ { }, { } ],
      "options" : {
        "property1" : "...",
        "property2" : "..."
      },
      "rowFilterDef" : { },
      "description" : "...",
      "policyConditions" : [ { }, { } ],
      "implClass" : "...",
      "displayName" : "...",
      "name" : "...",
      "contextEnrichers" : [ { }, { } ],
      "enums" : [ { }, { } ],
      "rbKeyDescription" : "...",
      "configs" : [ { }, { } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "leafName" : "...",
    "keys" : [ "...", "..." ],
    "ownerUser" : "..."
  },
  "keys" : [ "...", "..." ],
  "serviceDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "label" : "...",
    "rbKeyLabel" : "...",
    "dataMaskDef" : {
      "maskTypes" : [ { }, { } ],
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ],
    "options" : {
      "property1" : "...",
      "property2" : "..."
    },
    "rowFilterDef" : {
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "description" : "...",
    "policyConditions" : [ {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    }, {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    } ],
    "implClass" : "...",
    "displayName" : "...",
    "name" : "...",
    "contextEnrichers" : [ {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    }, {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    } ],
    "enums" : [ {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    }, {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    } ],
    "rbKeyDescription" : "...",
    "configs" : [ {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    }, {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  },
  "cacheKey" : "...",
  "ownerUser" : "...",
  "asString" : "..."
},
      "description" : ""
    }
    ,
    "json_RangerTagResourceMap" : {
      "type" : "object",
      "title" : "RangerTagResourceMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerBaseModelObject"
        },
        {
          "properties" : {
            "tagId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "resourceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "tagId" : 12345,
  "resourceId" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_RangerUserStore" : {
      "type" : "object",
      "title" : "RangerUserStore",
          "properties" : {
            "groupCloudIdMapping" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "userAttrMapping" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "userCloudIdMapping" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "userStoreUpdateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "userGroupMapping" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
"type" : "array",
"items" : {
  "type" : "string"
}
}
            },
            "groupAttrMapping" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "userStoreVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "groupCloudIdMapping" : {
    "property1" : "...",
    "property2" : "..."
  },
  "userAttrMapping" : {
    "property1" : { },
    "property2" : { }
  },
  "userCloudIdMapping" : {
    "property1" : "...",
    "property2" : "..."
  },
  "userStoreUpdateTime" : 12345,
  "userGroupMapping" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  },
  "groupAttrMapping" : {
    "property1" : { },
    "property2" : { }
  },
  "userStoreVersion" : 12345
},
      "description" : ""
    }
    ,
    "json_RangerValidityRecurrence" : {
      "type" : "object",
      "title" : "RangerValidityRecurrence",
          "properties" : {
            "interval" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_ValidityInterval"
            },
            "schedule" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RecurrenceSchedule"
            }
          },
      "example" : {
  "interval" : {
    "minutes" : 12345,
    "hours" : 12345,
    "days" : 12345
  },
  "schedule" : {
    "month" : "...",
    "year" : "...",
    "dayOfWeek" : "...",
    "hour" : "...",
    "minute" : "...",
    "dayOfMonth" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_RangerValiditySchedule" : {
      "type" : "object",
      "title" : "RangerValiditySchedule",
          "properties" : {
            "recurrences" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerValidityRecurrence"
}
            },
            "startTime" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "timeZone" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "endTime" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "recurrences" : [ {
    "interval" : {
      "minutes" : 12345,
      "hours" : 12345,
      "days" : 12345
    },
    "schedule" : {
      "month" : "...",
      "year" : "...",
      "dayOfWeek" : "...",
      "hour" : "...",
      "minute" : "...",
      "dayOfMonth" : "..."
    }
  }, {
    "interval" : {
      "minutes" : 12345,
      "hours" : 12345,
      "days" : 12345
    },
    "schedule" : {
      "month" : "...",
      "year" : "...",
      "dayOfWeek" : "...",
      "hour" : "...",
      "minute" : "...",
      "dayOfMonth" : "..."
    }
  } ],
  "startTime" : "...",
  "timeZone" : "...",
  "endTime" : "..."
},
      "description" : ""
    }
    ,
    "json_RecurrenceSchedule" : {
      "type" : "object",
      "title" : "RecurrenceSchedule",
          "properties" : {
            "month" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "year" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dayOfWeek" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "hour" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "minute" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dayOfMonth" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "month" : "...",
  "year" : "...",
  "dayOfWeek" : "...",
  "hour" : "...",
  "minute" : "...",
  "dayOfMonth" : "..."
},
      "description" : ""
    }
    ,
    "json_ResourceLookupContext" : {
      "type" : "object",
      "title" : "ResourceLookupContext",
          "properties" : {
            "userInput" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resources" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
"type" : "array",
"items" : {
  "type" : "string"
}
}
            },
            "resourceName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "userInput" : "...",
  "resources" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  },
  "resourceName" : "..."
},
      "description" : ""
    }
    ,
    "json_ResponseEntityOfList" : {
      "type" : "object",
      "title" : "ResponseEntityOfList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_HttpEntity"
        },
        {
          "properties" : {
            "statusCodeValue" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "statusCode" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_HttpStatus"
            }
          }
        }
      ],
      "example" : {
  "statusCodeValue" : 12345,
  "statusCode" : "LENGTH_REQUIRED",
  "headers" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  },
  "body" : { }
},
      "description" : ""
    }
    ,
    "json_RoleMember" : {
      "type" : "object",
      "title" : "RoleMember",
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "isAdmin" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          },
      "example" : {
  "name" : "...",
  "isAdmin" : true
},
      "description" : ""
    }
    ,
    "json_RowFilterResult" : {
      "type" : "object",
      "title" : "RowFilterResult",
          "properties" : {
            "isConditional" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "filterInfo" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerPolicyItemRowFilterInfo"
            },
            "groups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "roles" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "accessTypes" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "users" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "isConditional" : true,
  "filterInfo" : {
    "filterExpr" : "..."
  },
  "groups" : [ "...", "..." ],
  "roles" : [ "...", "..." ],
  "accessTypes" : [ "...", "..." ],
  "users" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_SecurityZoneInfo" : {
      "type" : "object",
      "title" : "SecurityZoneInfo",
          "properties" : {
            "containsAssociatedTagService" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "policies" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicy"
}
            },
            "resources" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
"type" : "object",
"additionalProperties" : {
"type" : "array",
"items" : {
  "type" : "object"
}
}
}
            },
            "policyDeltas" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicyDelta"
}
            },
            "zoneName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "containsAssociatedTagService" : true,
  "policies" : [ {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "resources" : [ {
    "property1" : [ ],
    "property2" : [ ]
  }, {
    "property1" : [ ],
    "property2" : [ ]
  } ],
  "policyDeltas" : [ {
    "policy" : {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "changeType" : 12345,
    "policiesVersion" : 12345,
    "id" : 12345
  }, {
    "policy" : {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "changeType" : 12345,
    "policiesVersion" : 12345,
    "id" : 12345
  } ],
  "zoneName" : "..."
},
      "description" : ""
    }
    ,
    "json_ServiceDeleteResponse" : {
      "type" : "object",
      "title" : "ServiceDeleteResponse",
          "properties" : {
            "errorMsg" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "isDeleted" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "serviceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "errorMsg" : "...",
  "serviceName" : "...",
  "isDeleted" : true,
  "serviceId" : 12345
},
      "description" : ""
    }
    ,
    "json_ServicePolicies" : {
      "type" : "object",
      "title" : "ServicePolicies",
          "properties" : {
            "serviceDef" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "policyUpdateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "policyDeltas" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicyDelta"
}
            },
            "auditMode" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "tagPolicies" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_TagPolicies"
            },
            "serviceConfig" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "policies" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicy"
}
            },
            "securityZones" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_SecurityZoneInfo"
}
            },
            "serviceName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "serviceDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "label" : "...",
    "rbKeyLabel" : "...",
    "dataMaskDef" : {
      "maskTypes" : [ { }, { } ],
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ],
    "options" : {
      "property1" : "...",
      "property2" : "..."
    },
    "rowFilterDef" : {
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "description" : "...",
    "policyConditions" : [ {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    }, {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    } ],
    "implClass" : "...",
    "displayName" : "...",
    "name" : "...",
    "contextEnrichers" : [ {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    }, {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    } ],
    "enums" : [ {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    }, {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    } ],
    "rbKeyDescription" : "...",
    "configs" : [ {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    }, {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  },
  "policyUpdateTime" : 12345,
  "serviceId" : 12345,
  "policyDeltas" : [ {
    "policy" : {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "changeType" : 12345,
    "policiesVersion" : 12345,
    "id" : 12345
  }, {
    "policy" : {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "changeType" : 12345,
    "policiesVersion" : 12345,
    "id" : 12345
  } ],
  "auditMode" : "...",
  "policyVersion" : 12345,
  "tagPolicies" : {
    "policyUpdateTime" : 12345,
    "serviceConfig" : {
      "property1" : "...",
      "property2" : "..."
    },
    "policyVersion" : 12345,
    "auditMode" : "...",
    "serviceId" : 12345,
    "serviceName" : "...",
    "serviceDef" : {
      "accessTypes" : [ { }, { } ],
      "label" : "...",
      "rbKeyLabel" : "...",
      "dataMaskDef" : { },
      "resources" : [ { }, { } ],
      "options" : {
        "property1" : "...",
        "property2" : "..."
      },
      "rowFilterDef" : { },
      "description" : "...",
      "policyConditions" : [ { }, { } ],
      "implClass" : "...",
      "displayName" : "...",
      "name" : "...",
      "contextEnrichers" : [ { }, { } ],
      "enums" : [ { }, { } ],
      "rbKeyDescription" : "...",
      "configs" : [ { }, { } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "policies" : [ {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    }, {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    } ]
  },
  "serviceConfig" : {
    "property1" : "...",
    "property2" : "..."
  },
  "policies" : [ {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "securityZones" : {
    "property1" : {
      "containsAssociatedTagService" : true,
      "policies" : [ {
        "denyExceptions" : [ { }, { } ],
        "allowExceptions" : [ { }, { } ],
        "validitySchedules" : [ { }, { } ],
        "policyPriority" : 12345,
        "policyType" : 12345,
        "isAuditEnabled" : true,
        "zoneName" : "...",
        "denyPolicyItems" : [ { }, { } ],
        "service" : "...",
        "resources" : {
          "property1" : { },
          "property2" : { }
        },
        "dataMaskPolicyItems" : [ { }, { } ],
        "rowFilterPolicyItems" : [ { }, { } ],
        "policyItems" : [ { }, { } ],
        "policyLabels" : [ "...", "..." ],
        "resourceSignature" : "...",
        "isDenyAllElse" : true,
        "name" : "...",
        "serviceType" : "...",
        "description" : "...",
        "conditions" : [ { }, { } ],
        "options" : {
          "property1" : { },
          "property2" : { }
        },
        "createTime" : 12345,
        "id" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "updateTime" : 12345,
        "isEnabled" : true
      }, {
        "denyExceptions" : [ { }, { } ],
        "allowExceptions" : [ { }, { } ],
        "validitySchedules" : [ { }, { } ],
        "policyPriority" : 12345,
        "policyType" : 12345,
        "isAuditEnabled" : true,
        "zoneName" : "...",
        "denyPolicyItems" : [ { }, { } ],
        "service" : "...",
        "resources" : {
          "property1" : { },
          "property2" : { }
        },
        "dataMaskPolicyItems" : [ { }, { } ],
        "rowFilterPolicyItems" : [ { }, { } ],
        "policyItems" : [ { }, { } ],
        "policyLabels" : [ "...", "..." ],
        "resourceSignature" : "...",
        "isDenyAllElse" : true,
        "name" : "...",
        "serviceType" : "...",
        "description" : "...",
        "conditions" : [ { }, { } ],
        "options" : {
          "property1" : { },
          "property2" : { }
        },
        "createTime" : 12345,
        "id" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "updateTime" : 12345,
        "isEnabled" : true
      } ],
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ],
      "policyDeltas" : [ {
        "policy" : { },
        "changeType" : 12345,
        "policiesVersion" : 12345,
        "id" : 12345
      }, {
        "policy" : { },
        "changeType" : 12345,
        "policiesVersion" : 12345,
        "id" : 12345
      } ],
      "zoneName" : "..."
    },
    "property2" : {
      "containsAssociatedTagService" : true,
      "policies" : [ {
        "denyExceptions" : [ { }, { } ],
        "allowExceptions" : [ { }, { } ],
        "validitySchedules" : [ { }, { } ],
        "policyPriority" : 12345,
        "policyType" : 12345,
        "isAuditEnabled" : true,
        "zoneName" : "...",
        "denyPolicyItems" : [ { }, { } ],
        "service" : "...",
        "resources" : {
          "property1" : { },
          "property2" : { }
        },
        "dataMaskPolicyItems" : [ { }, { } ],
        "rowFilterPolicyItems" : [ { }, { } ],
        "policyItems" : [ { }, { } ],
        "policyLabels" : [ "...", "..." ],
        "resourceSignature" : "...",
        "isDenyAllElse" : true,
        "name" : "...",
        "serviceType" : "...",
        "description" : "...",
        "conditions" : [ { }, { } ],
        "options" : {
          "property1" : { },
          "property2" : { }
        },
        "createTime" : 12345,
        "id" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "updateTime" : 12345,
        "isEnabled" : true
      }, {
        "denyExceptions" : [ { }, { } ],
        "allowExceptions" : [ { }, { } ],
        "validitySchedules" : [ { }, { } ],
        "policyPriority" : 12345,
        "policyType" : 12345,
        "isAuditEnabled" : true,
        "zoneName" : "...",
        "denyPolicyItems" : [ { }, { } ],
        "service" : "...",
        "resources" : {
          "property1" : { },
          "property2" : { }
        },
        "dataMaskPolicyItems" : [ { }, { } ],
        "rowFilterPolicyItems" : [ { }, { } ],
        "policyItems" : [ { }, { } ],
        "policyLabels" : [ "...", "..." ],
        "resourceSignature" : "...",
        "isDenyAllElse" : true,
        "name" : "...",
        "serviceType" : "...",
        "description" : "...",
        "conditions" : [ { }, { } ],
        "options" : {
          "property1" : { },
          "property2" : { }
        },
        "createTime" : 12345,
        "id" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "updateTime" : 12345,
        "isEnabled" : true
      } ],
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ],
      "policyDeltas" : [ {
        "policy" : { },
        "changeType" : 12345,
        "policiesVersion" : 12345,
        "id" : 12345
      }, {
        "policy" : { },
        "changeType" : 12345,
        "policiesVersion" : 12345,
        "id" : 12345
      } ],
      "zoneName" : "..."
    }
  },
  "serviceName" : "..."
},
      "description" : ""
    }
    ,
    "json_ServiceTags" : {
      "type" : "object",
      "title" : "ServiceTags",
          "properties" : {
            "serviceName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tagUpdateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "resourceToTagIds" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
"type" : "array",
"items" : {
  "type" : "number"
}
}
            },
            "tagDefinitions" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_RangerTagDef"
}
            },
            "isDelta" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "tags" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_RangerTag"
}
            },
            "tagsChangeExtent" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_TagsChangeExtent"
            },
            "serviceResources" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerServiceResource"
}
            },
            "op" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tagVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "serviceName" : "...",
  "tagUpdateTime" : 12345,
  "resourceToTagIds" : {
    "property1" : [ 12345, 12345 ],
    "property2" : [ 12345, 12345 ]
  },
  "tagDefinitions" : {
    "property1" : {
      "name" : "...",
      "source" : "...",
      "attributeDefs" : [ {
        "name" : "...",
        "type" : "..."
      }, {
        "name" : "...",
        "type" : "..."
      } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "property2" : {
      "name" : "...",
      "source" : "...",
      "attributeDefs" : [ {
        "name" : "...",
        "type" : "..."
      }, {
        "name" : "...",
        "type" : "..."
      } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    }
  },
  "isDelta" : true,
  "tags" : {
    "property1" : {
      "validityPeriods" : [ {
        "recurrences" : [ { }, { } ],
        "startTime" : "...",
        "timeZone" : "...",
        "endTime" : "..."
      }, {
        "recurrences" : [ { }, { } ],
        "startTime" : "...",
        "timeZone" : "...",
        "endTime" : "..."
      } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "type" : "...",
      "attributes" : {
        "property1" : "...",
        "property2" : "..."
      },
      "owner" : 12345,
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "property2" : {
      "validityPeriods" : [ {
        "recurrences" : [ { }, { } ],
        "startTime" : "...",
        "timeZone" : "...",
        "endTime" : "..."
      }, {
        "recurrences" : [ { }, { } ],
        "startTime" : "...",
        "timeZone" : "...",
        "endTime" : "..."
      } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "type" : "...",
      "attributes" : {
        "property1" : "...",
        "property2" : "..."
      },
      "owner" : 12345,
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    }
  },
  "tagsChangeExtent" : "NONE",
  "serviceResources" : [ {
    "resourceElements" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "additionalInfo" : {
      "property1" : "...",
      "property2" : "..."
    },
    "ownerUser" : "...",
    "serviceName" : "...",
    "resourceSignature" : "...",
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "resourceElements" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "additionalInfo" : {
      "property1" : "...",
      "property2" : "..."
    },
    "ownerUser" : "...",
    "serviceName" : "...",
    "resourceSignature" : "...",
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "op" : "...",
  "tagVersion" : 12345
},
      "description" : ""
    }
    ,
    "json_StoredServiceResource" : {
      "type" : "object",
      "title" : "StoredServiceResource",
          "properties" : {
            "ownerName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resourceElements" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_RangerPolicyResource"
}
            },
            "additionalInfo" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "ownerName" : "...",
  "resourceElements" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "additionalInfo" : {
    "property1" : "...",
    "property2" : "..."
  }
},
      "description" : ""
    }
    ,
    "json_TagPolicies" : {
      "type" : "object",
      "title" : "TagPolicies",
          "properties" : {
            "policyUpdateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceConfig" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "policyVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "auditMode" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceDef" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "policies" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicy"
}
            }
          },
      "example" : {
  "policyUpdateTime" : 12345,
  "serviceConfig" : {
    "property1" : "...",
    "property2" : "..."
  },
  "policyVersion" : 12345,
  "auditMode" : "...",
  "serviceId" : 12345,
  "serviceName" : "...",
  "serviceDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "label" : "...",
    "rbKeyLabel" : "...",
    "dataMaskDef" : {
      "maskTypes" : [ { }, { } ],
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ],
    "options" : {
      "property1" : "...",
      "property2" : "..."
    },
    "rowFilterDef" : {
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "description" : "...",
    "policyConditions" : [ {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    }, {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    } ],
    "implClass" : "...",
    "displayName" : "...",
    "name" : "...",
    "contextEnrichers" : [ {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    }, {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    } ],
    "enums" : [ {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    }, {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    } ],
    "rbKeyDescription" : "...",
    "configs" : [ {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    }, {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  },
  "policies" : [ {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ]
},
      "description" : ""
    }
    ,
    "json_TagsChangeExtent" : {
      "type" : "string",
      "title" : "TagsChangeExtent",
          "enum" : [
            "NONE",
            "TAGS",
            "SERVICE_RESOURCE",
            "ALL"
          ],
      "description" : ""
    }
    ,
    "json_UserInfo" : {
      "type" : "object",
      "title" : "UserInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_RangerBaseModelObject"
        },
        {
          "properties" : {
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "otherAttributes" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "description" : "...",
  "groups" : [ "...", "..." ],
  "name" : "...",
  "otherAttributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
      "description" : ""
    }
    ,
    "json_UsersGroupRoleAssignments" : {
      "type" : "object",
      "title" : "UsersGroupRoleAssignments",
          "properties" : {
            "userRoleAssignments" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "groupRoleAssignments" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "users" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          },
      "example" : {
  "userRoleAssignments" : {
    "property1" : "...",
    "property2" : "..."
  },
  "groupRoleAssignments" : {
    "property1" : "...",
    "property2" : "..."
  },
  "users" : [ "...", "..." ]
},
      "description" : ""
    }
    ,
    "json_VEnum" : {
      "type" : "object",
      "title" : "VEnum",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ViewBaseBean"
        },
        {
          "properties" : {
            "enumName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>enumName<\/b>",
"type" : "string"
            },
            "elementList" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>elementList<\/b>",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VEnumElement"
}
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "enumName" : "...",
  "elementList" : [ {
    "elementName" : "...",
    "enumName" : "...",
    "rbKey" : "...",
    "elementValue" : 12345,
    "elementLabel" : "...",
    "myClassType" : 12345
  }, {
    "elementName" : "...",
    "enumName" : "...",
    "rbKey" : "...",
    "elementValue" : 12345,
    "elementLabel" : "...",
    "myClassType" : 12345
  } ],
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VEnumElement" : {
      "type" : "object",
      "title" : "VEnumElement",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ViewBaseBean"
        },
        {
          "properties" : {
            "elementName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "enumName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKey" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "elementValue" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>elementValue<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "elementLabel" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>elementLabel<\/b>",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "elementName" : "...",
  "enumName" : "...",
  "rbKey" : "...",
  "elementValue" : 12345,
  "elementLabel" : "...",
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VList" : {
      "type" : "object",
      "title" : "VList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ViewBaseBean"
        },
        {
          "properties" : {
            "listSize" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "list" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "startIndex" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "pageSize" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "totalCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "resultSize" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resultSize<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "sortType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sortBy" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VTrxLogAttr" : {
      "type" : "object",
      "title" : "VTrxLogAttr",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ViewBaseBean"
        },
        {
          "properties" : {
            "attribUserFriendlyName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "enum" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "attribUserFriendlyName" : "...",
  "enum" : true,
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXAccessAudit" : {
      "type" : "object",
      "title" : "VXAccessAudit",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "auditType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>auditType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "accessResult" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>accessResult<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "accessType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>accessType<\/b>",
"type" : "string"
            },
            "aclEnforcer" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>aclEnforcer<\/b>",
"type" : "string"
            },
            "agentId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>agentId<\/b>",
"type" : "string"
            },
            "clientIP" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clientIP<\/b>",
"type" : "string"
            },
            "clientType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clientType<\/b>",
"type" : "string"
            },
            "policyId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "repoName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repoName<\/b>",
"type" : "string"
            },
            "repoDisplayName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repoDisplayName<\/b>",
"type" : "string"
            },
            "repoType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repoType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "serviceType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceTypeDisplayName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resultReason" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resultReason<\/b>",
"type" : "string"
            },
            "sessionId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionId<\/b>",
"type" : "string"
            },
            "eventTime" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>eventTime<\/b>",
"type" : "number"
            },
            "requestUser" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestUser<\/b>",
"type" : "string"
            },
            "action" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "requestData" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestData<\/b>",
"type" : "string"
            },
            "resourcePath" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourcePath<\/b>",
"type" : "string"
            },
            "resourceType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceType<\/b>",
"type" : "string"
            },
            "sequenceNumber" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "eventCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "eventDuration" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "tags" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "clusterName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "zoneName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "agentHost" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "eventId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "auditType" : 12345,
  "accessResult" : 12345,
  "accessType" : "...",
  "aclEnforcer" : "...",
  "agentId" : "...",
  "clientIP" : "...",
  "clientType" : "...",
  "policyId" : 12345,
  "repoName" : "...",
  "repoDisplayName" : "...",
  "repoType" : 12345,
  "serviceType" : "...",
  "serviceTypeDisplayName" : "...",
  "resultReason" : "...",
  "sessionId" : "...",
  "eventTime" : 12345,
  "requestUser" : "...",
  "action" : "...",
  "requestData" : "...",
  "resourcePath" : "...",
  "resourceType" : "...",
  "sequenceNumber" : 12345,
  "eventCount" : 12345,
  "eventDuration" : 12345,
  "tags" : "...",
  "clusterName" : "...",
  "myClassType" : 12345,
  "zoneName" : "...",
  "agentHost" : "...",
  "policyVersion" : 12345,
  "eventId" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXAccessAuditList" : {
      "type" : "object",
      "title" : "VXAccessAuditList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXAccessAudits" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXAccessAudit"
}
            }
          }
        }
      ],
      "example" : {
  "vXAccessAudits" : [ {
    "auditType" : 12345,
    "accessResult" : 12345,
    "accessType" : "...",
    "aclEnforcer" : "...",
    "agentId" : "...",
    "clientIP" : "...",
    "clientType" : "...",
    "policyId" : 12345,
    "repoName" : "...",
    "repoDisplayName" : "...",
    "repoType" : 12345,
    "serviceType" : "...",
    "serviceTypeDisplayName" : "...",
    "resultReason" : "...",
    "sessionId" : "...",
    "eventTime" : 12345,
    "requestUser" : "...",
    "action" : "...",
    "requestData" : "...",
    "resourcePath" : "...",
    "resourceType" : "...",
    "sequenceNumber" : 12345,
    "eventCount" : 12345,
    "eventDuration" : 12345,
    "tags" : "...",
    "clusterName" : "...",
    "myClassType" : 12345,
    "zoneName" : "...",
    "agentHost" : "...",
    "policyVersion" : 12345,
    "eventId" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "auditType" : 12345,
    "accessResult" : 12345,
    "accessType" : "...",
    "aclEnforcer" : "...",
    "agentId" : "...",
    "clientIP" : "...",
    "clientType" : "...",
    "policyId" : 12345,
    "repoName" : "...",
    "repoDisplayName" : "...",
    "repoType" : 12345,
    "serviceType" : "...",
    "serviceTypeDisplayName" : "...",
    "resultReason" : "...",
    "sessionId" : "...",
    "eventTime" : 12345,
    "requestUser" : "...",
    "action" : "...",
    "requestData" : "...",
    "resourcePath" : "...",
    "resourceType" : "...",
    "sequenceNumber" : 12345,
    "eventCount" : 12345,
    "eventDuration" : 12345,
    "tags" : "...",
    "clusterName" : "...",
    "myClassType" : 12345,
    "zoneName" : "...",
    "agentHost" : "...",
    "policyVersion" : 12345,
    "eventId" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXAsset" : {
      "type" : "object",
      "title" : "VXAsset",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "activeStatus" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>activeStatus<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "assetType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "config" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>config<\/b>",
"type" : "string"
            },
            "supportNative" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>supportNative<\/b>",
"type" : "boolean"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "description" : "...",
  "activeStatus" : 12345,
  "assetType" : 12345,
  "config" : "...",
  "supportNative" : true,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXAssetList" : {
      "type" : "object",
      "title" : "VXAssetList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXAssets" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXAsset"
}
            }
          }
        }
      ],
      "example" : {
  "vXAssets" : [ {
    "name" : "...",
    "description" : "...",
    "activeStatus" : 12345,
    "assetType" : 12345,
    "config" : "...",
    "supportNative" : true,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "activeStatus" : 12345,
    "assetType" : 12345,
    "config" : "...",
    "supportNative" : true,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXAuditMap" : {
      "type" : "object",
      "title" : "VXAuditMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "resourceId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceId<\/b>",
"type" : "number"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "number"
            },
            "userId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            },
            "auditType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>auditType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "resourceId" : 12345,
  "groupId" : 12345,
  "userId" : 12345,
  "auditType" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXAuditMapList" : {
      "type" : "object",
      "title" : "VXAuditMapList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXAuditMaps" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXAuditMap"
}
            }
          }
        }
      ],
      "example" : {
  "vXAuditMaps" : [ {
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "auditType" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "auditType" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXAuditRecord" : {
      "type" : "object",
      "title" : "VXAuditRecord",
          "properties" : {
            "date" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>date<\/b>",
"type" : "number"
            },
            "resource" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resource<\/b>",
"type" : "string"
            },
            "action" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "result" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>result<\/b>",
"type" : "string"
            },
            "user" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>user<\/b>",
"type" : "string"
            },
            "enforcer" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resourceType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "assetType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetType<\/b>",
"type" : "integer",
"format" : "int32"
            }
          },
      "example" : {
  "date" : 12345,
  "resource" : "...",
  "action" : "...",
  "result" : "...",
  "user" : "...",
  "enforcer" : "...",
  "resourceType" : 12345,
  "assetType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXAuditRecordList" : {
      "type" : "object",
      "title" : "VXAuditRecordList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXAuditRecords" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXAuditRecord"
}
            }
          }
        }
      ],
      "example" : {
  "vXAuditRecords" : [ {
    "date" : 12345,
    "resource" : "...",
    "action" : "...",
    "result" : "...",
    "user" : "...",
    "enforcer" : "...",
    "resourceType" : 12345,
    "assetType" : 12345
  }, {
    "date" : 12345,
    "resource" : "...",
    "action" : "...",
    "result" : "...",
    "user" : "...",
    "enforcer" : "...",
    "resourceType" : 12345,
    "assetType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXAuthSession" : {
      "type" : "object",
      "title" : "VXAuthSession",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "loginId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>loginId<\/b>",
"type" : "string"
            },
            "userId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            },
            "emailAddress" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>emailAddress<\/b>",
"type" : "string"
            },
            "isTestUser" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isTestUser<\/b>",
"type" : "boolean"
            },
            "firstName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>firstName<\/b>",
"type" : "string"
            },
            "lastName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lastName<\/b>",
"type" : "string"
            },
            "publicScreenName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>publicScreenName<\/b>",
"type" : "string"
            },
            "familyScreenName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>familyScreenName<\/b>",
"type" : "string"
            },
            "authTime" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authTime<\/b>",
"type" : "number"
            },
            "authStatus" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authStatus<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "authType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "authProvider" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authProvider<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "deviceType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>deviceType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "requestIP" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestIP<\/b>",
"type" : "string"
            },
            "cityName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>cityName<\/b>",
"type" : "string"
            },
            "stateName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>stateName<\/b>",
"type" : "string"
            },
            "countryName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>countryName<\/b>",
"type" : "string"
            },
            "requestUserAgent" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestUserAgent<\/b>",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "loginId" : "...",
  "userId" : 12345,
  "emailAddress" : "...",
  "isTestUser" : true,
  "firstName" : "...",
  "lastName" : "...",
  "publicScreenName" : "...",
  "familyScreenName" : "...",
  "authTime" : 12345,
  "authStatus" : 12345,
  "authType" : 12345,
  "authProvider" : 12345,
  "deviceType" : 12345,
  "requestIP" : "...",
  "cityName" : "...",
  "stateName" : "...",
  "countryName" : "...",
  "requestUserAgent" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXAuthSessionList" : {
      "type" : "object",
      "title" : "VXAuthSessionList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXAuthSessions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXAuthSession"
}
            }
          }
        }
      ],
      "example" : {
  "vXAuthSessions" : [ {
    "loginId" : "...",
    "userId" : 12345,
    "emailAddress" : "...",
    "isTestUser" : true,
    "firstName" : "...",
    "lastName" : "...",
    "publicScreenName" : "...",
    "familyScreenName" : "...",
    "authTime" : 12345,
    "authStatus" : 12345,
    "authType" : 12345,
    "authProvider" : 12345,
    "deviceType" : 12345,
    "requestIP" : "...",
    "cityName" : "...",
    "stateName" : "...",
    "countryName" : "...",
    "requestUserAgent" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "loginId" : "...",
    "userId" : 12345,
    "emailAddress" : "...",
    "isTestUser" : true,
    "firstName" : "...",
    "lastName" : "...",
    "publicScreenName" : "...",
    "familyScreenName" : "...",
    "authTime" : 12345,
    "authStatus" : 12345,
    "authType" : 12345,
    "authProvider" : 12345,
    "deviceType" : 12345,
    "requestIP" : "...",
    "cityName" : "...",
    "stateName" : "...",
    "countryName" : "...",
    "requestUserAgent" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXCredentialStore" : {
      "type" : "object",
      "title" : "VXCredentialStore",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "description" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXCredentialStoreList" : {
      "type" : "object",
      "title" : "VXCredentialStoreList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXCredentialStores" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXCredentialStore"
}
            }
          }
        }
      ],
      "example" : {
  "vXCredentialStores" : [ {
    "name" : "...",
    "description" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXDataObject" : {
      "type" : "object",
      "title" : "VXDataObject",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ViewBaseBean"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "createDate" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>createDate<\/b>",
"type" : "number"
            },
            "updateDate" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>updateDate<\/b>",
"type" : "number"
            },
            "owner" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>owner<\/b>",
"type" : "string"
            },
            "updatedBy" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>updatedBy<\/b>",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXFileSyncSourceInfo" : {
      "type" : "object",
      "title" : "VXFileSyncSourceInfo",
          "properties" : {
            "fileName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncTime" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "lastModified" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalUsersSynced" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalGroupsSynced" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalUsersDeleted" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalGroupsDeleted" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          },
      "example" : {
  "fileName" : "...",
  "syncTime" : "...",
  "lastModified" : "...",
  "totalUsersSynced" : 12345,
  "totalGroupsSynced" : 12345,
  "totalUsersDeleted" : 12345,
  "totalGroupsDeleted" : 12345
},
      "description" : ""
    }
    ,
    "json_VXGroup" : {
      "type" : "object",
      "title" : "VXGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "groupType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "credStoreId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>credStoreId<\/b>",
"type" : "number"
            },
            "isVisible" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "groupSource" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "otherAttributes" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncSource" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "description" : "...",
  "groupType" : 12345,
  "credStoreId" : 12345,
  "isVisible" : 12345,
  "myClassType" : 12345,
  "groupSource" : 12345,
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXGroupGroup" : {
      "type" : "object",
      "title" : "VXGroupGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "parentGroupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentGroupId<\/b>",
"type" : "number"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "parentGroupId" : 12345,
  "groupId" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXGroupGroupList" : {
      "type" : "object",
      "title" : "VXGroupGroupList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXGroupGroups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXGroupGroup"
}
            }
          }
        }
      ],
      "example" : {
  "vXGroupGroups" : [ {
    "name" : "...",
    "parentGroupId" : 12345,
    "groupId" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "parentGroupId" : 12345,
    "groupId" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXGroupList" : {
      "type" : "object",
      "title" : "VXGroupList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXGroups" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXGroup"
}
            }
          }
        }
      ],
      "example" : {
  "vXGroups" : [ {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXGroupPermission" : {
      "type" : "object",
      "title" : "VXGroupPermission",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "groupName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "moduleId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "isAllowed" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "moduleName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "groupId" : 12345,
  "groupName" : "...",
  "moduleId" : 12345,
  "isAllowed" : 12345,
  "moduleName" : "...",
  "myClassType" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXGroupPermissionList" : {
      "type" : "object",
      "title" : "VXGroupPermissionList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXGroupPermission" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXGroupPermission"
}
            }
          }
        }
      ],
      "example" : {
  "vXGroupPermission" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXGroupUser" : {
      "type" : "object",
      "title" : "VXGroupUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "parentGroupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentGroupId<\/b>",
"type" : "number"
            },
            "userId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "parentGroupId" : 12345,
  "userId" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXGroupUserInfo" : {
      "type" : "object",
      "title" : "VXGroupUserInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "xgroupInfo" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_VXGroup"
            },
            "xuserInfo" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXUser"
}
            }
          }
        }
      ],
      "example" : {
  "xgroupInfo" : {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  },
  "xuserInfo" : [ {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXGroupUserList" : {
      "type" : "object",
      "title" : "VXGroupUserList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXGroupUsers" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXGroupUser"
}
            }
          }
        }
      ],
      "example" : {
  "vXGroupUsers" : [ {
    "name" : "...",
    "parentGroupId" : 12345,
    "userId" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "parentGroupId" : 12345,
    "userId" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXKmsKey" : {
      "type" : "object",
      "title" : "VXKmsKey",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "cipher" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "length" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "versions" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "material" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "versionName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "created" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "attributes" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "cipher" : "...",
  "length" : 12345,
  "description" : "...",
  "versions" : 12345,
  "material" : "...",
  "versionName" : "...",
  "created" : 12345,
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXKmsKeyList" : {
      "type" : "object",
      "title" : "VXKmsKeyList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXKeys" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXKmsKey"
}
            }
          }
        }
      ],
      "example" : {
  "vXKeys" : [ {
    "name" : "...",
    "cipher" : "...",
    "length" : 12345,
    "description" : "...",
    "versions" : 12345,
    "material" : "...",
    "versionName" : "...",
    "created" : 12345,
    "attributes" : {
      "property1" : "...",
      "property2" : "..."
    },
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "cipher" : "...",
    "length" : 12345,
    "description" : "...",
    "versions" : 12345,
    "material" : "...",
    "versionName" : "...",
    "created" : 12345,
    "attributes" : {
      "property1" : "...",
      "property2" : "..."
    },
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXLdapSyncSourceInfo" : {
      "type" : "object",
      "title" : "VXLdapSyncSourceInfo",
          "properties" : {
            "ldapUrl" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "userSearchFilter" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupSearchFilter" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupHierarchyLevel" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalUsersSynced" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalGroupsSynced" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "groupSearchFirstEnabled" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupSearchEnabled" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "userSearchEnabled" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalUsersDeleted" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalGroupsDeleted" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          },
      "example" : {
  "ldapUrl" : "...",
  "userSearchFilter" : "...",
  "groupSearchFilter" : "...",
  "groupHierarchyLevel" : "...",
  "totalUsersSynced" : 12345,
  "totalGroupsSynced" : 12345,
  "groupSearchFirstEnabled" : "...",
  "groupSearchEnabled" : "...",
  "userSearchEnabled" : "...",
  "totalUsersDeleted" : 12345,
  "totalGroupsDeleted" : 12345
},
      "description" : ""
    }
    ,
    "json_VXLong" : {
      "type" : "object",
      "title" : "VXLong",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ViewBaseBean"
        },
        {
          "properties" : {
            "value" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>value<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXMessage" : {
      "type" : "object",
      "title" : "VXMessage",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ViewBaseBean"
        },
        {
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "rbKey" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKey<\/b>",
"type" : "string"
            },
            "message" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>message<\/b>",
"type" : "string"
            },
            "objectId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectId<\/b>",
"type" : "number"
            },
            "fieldName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>fieldName<\/b>",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "rbKey" : "...",
  "message" : "...",
  "objectId" : 12345,
  "fieldName" : "...",
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXMetricAuditDetailsCount" : {
      "type" : "object",
      "title" : "VXMetricAuditDetailsCount",
          "properties" : {
            "solrIndexCountTwoDays" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "accessEventsCountTwoDays" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_VXMetricServiceCount"
            },
            "denialEventsCountTwoDays" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_VXMetricServiceCount"
            },
            "solrIndexCountWeek" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "accessEventsCountWeek" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_VXMetricServiceCount"
            },
            "denialEventsCountWeek" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_VXMetricServiceCount"
            }
          },
      "example" : {
  "solrIndexCountTwoDays" : 12345,
  "accessEventsCountTwoDays" : {
    "serviceBasedCountList" : {
      "property1" : 12345,
      "property2" : 12345
    },
    "totalCount" : 12345
  },
  "denialEventsCountTwoDays" : {
    "serviceBasedCountList" : {
      "property1" : 12345,
      "property2" : 12345
    },
    "totalCount" : 12345
  },
  "solrIndexCountWeek" : 12345,
  "accessEventsCountWeek" : {
    "serviceBasedCountList" : {
      "property1" : 12345,
      "property2" : 12345
    },
    "totalCount" : 12345
  },
  "denialEventsCountWeek" : {
    "serviceBasedCountList" : {
      "property1" : 12345,
      "property2" : 12345
    },
    "totalCount" : 12345
  }
},
      "description" : ""
    }
    ,
    "json_VXMetricPolicyCount" : {
      "type" : "object",
      "title" : "VXMetricPolicyCount",
          "properties" : {
            "policyCountList" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_VXMetricServiceCount"
}
            },
            "totalCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          },
      "example" : {
  "policyCountList" : {
    "property1" : {
      "serviceBasedCountList" : {
        "property1" : 12345,
        "property2" : 12345
      },
      "totalCount" : 12345
    },
    "property2" : {
      "serviceBasedCountList" : {
        "property1" : 12345,
        "property2" : 12345
      },
      "totalCount" : 12345
    }
  },
  "totalCount" : 12345
},
      "description" : ""
    }
    ,
    "json_VXMetricPolicyWithServiceNameCount" : {
      "type" : "object",
      "title" : "VXMetricPolicyWithServiceNameCount",
          "properties" : {
            "policyCountList" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "$ref" : "#/definitions/json_VXMetricServiceNameCount"
}
            },
            "totalCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          },
      "example" : {
  "policyCountList" : {
    "property1" : {
      "serviceBasedCountList" : {
        "property1" : { },
        "property2" : { }
      },
      "totalCount" : 12345
    },
    "property2" : {
      "serviceBasedCountList" : {
        "property1" : { },
        "property2" : { }
      },
      "totalCount" : 12345
    }
  },
  "totalCount" : 12345
},
      "description" : ""
    }
    ,
    "json_VXMetricServiceCount" : {
      "type" : "object",
      "title" : "VXMetricServiceCount",
          "properties" : {
            "serviceBasedCountList" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "number"
}
            },
            "totalCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "serviceBasedCountList" : {
    "property1" : 12345,
    "property2" : 12345
  },
  "totalCount" : 12345
},
      "description" : ""
    }
    ,
    "json_VXMetricServiceNameCount" : {
      "type" : "object",
      "title" : "VXMetricServiceNameCount",
          "properties" : {
            "serviceBasedCountList" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "totalCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "serviceBasedCountList" : {
    "property1" : { },
    "property2" : { }
  },
  "totalCount" : 12345
},
      "description" : ""
    }
    ,
    "json_VXMetricUserGroupCount" : {
      "type" : "object",
      "title" : "VXMetricUserGroupCount",
          "properties" : {
            "groupCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "userCountOfUserRole" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "userCountOfKeyAdminRole" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "userCountOfSysAdminRole" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "userCountOfKeyadminAuditorRole" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "userCountOfSysAdminAuditorRole" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "userTotalCount" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "groupCount" : 12345,
  "userCountOfUserRole" : 12345,
  "userCountOfKeyAdminRole" : 12345,
  "userCountOfSysAdminRole" : 12345,
  "userCountOfKeyadminAuditorRole" : 12345,
  "userCountOfSysAdminAuditorRole" : 12345,
  "userTotalCount" : 12345
},
      "description" : ""
    }
    ,
    "json_VXModuleDef" : {
      "type" : "object",
      "title" : "VXModuleDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "userPermList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXUserPermission"
}
            },
            "groupPermList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXGroupPermission"
}
            },
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "createTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "updateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "addedById" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "updatedById" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "module" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "userPermList" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "groupPermList" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedById" : 12345,
  "updatedById" : 12345,
  "module" : "...",
  "url" : "...",
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXModuleDefList" : {
      "type" : "object",
      "title" : "VXModuleDefList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXModuleDef" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXModuleDef"
}
            }
          }
        }
      ],
      "example" : {
  "vXModuleDef" : [ {
    "userPermList" : [ {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "groupPermList" : [ {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "id" : 12345,
    "createTime" : 12345,
    "updateTime" : 12345,
    "addedById" : 12345,
    "updatedById" : 12345,
    "module" : "...",
    "url" : "...",
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  }, {
    "userPermList" : [ {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "groupPermList" : [ {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "id" : 12345,
    "createTime" : 12345,
    "updateTime" : 12345,
    "addedById" : 12345,
    "updatedById" : 12345,
    "module" : "...",
    "url" : "...",
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXPasswordChange" : {
      "type" : "object",
      "title" : "VXPasswordChange",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ViewBaseBean"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "loginId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>loginId<\/b>",
"type" : "string"
            },
            "emailAddress" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>emailAddress<\/b>",
"type" : "string"
            },
            "resetCode" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resetCode<\/b>",
"type" : "string"
            },
            "oldPassword" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>oldPassword<\/b>",
"type" : "string"
            },
            "updPassword" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>updPassword<\/b>",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "loginId" : "...",
  "emailAddress" : "...",
  "resetCode" : "...",
  "oldPassword" : "...",
  "updPassword" : "...",
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXPermMap" : {
      "type" : "object",
      "title" : "VXPermMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "permGroup" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permGroup<\/b>",
"type" : "string"
            },
            "resourceId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceId<\/b>",
"type" : "number"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "number"
            },
            "userId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            },
            "permFor" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permFor<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "permType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "grantOrRevoke" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>grantOrRevoke<\/b>",
"type" : "boolean"
            },
            "groupName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupName<\/b>",
"type" : "string"
            },
            "userName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userName<\/b>",
"type" : "string"
            },
            "isRecursive" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isRecursive<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "isWildCard" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isWildCard<\/b>",
"type" : "boolean"
            },
            "ipAddress" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "permGroup" : "...",
  "resourceId" : 12345,
  "groupId" : 12345,
  "userId" : 12345,
  "permFor" : 12345,
  "permType" : 12345,
  "grantOrRevoke" : true,
  "groupName" : "...",
  "userName" : "...",
  "isRecursive" : 12345,
  "isWildCard" : true,
  "ipAddress" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXPermMapList" : {
      "type" : "object",
      "title" : "VXPermMapList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXPermMaps" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXPermMap"
}
            }
          }
        }
      ],
      "example" : {
  "vXPermMaps" : [ {
    "permGroup" : "...",
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "permFor" : 12345,
    "permType" : 12345,
    "grantOrRevoke" : true,
    "groupName" : "...",
    "userName" : "...",
    "isRecursive" : 12345,
    "isWildCard" : true,
    "ipAddress" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "permGroup" : "...",
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "permFor" : 12345,
    "permType" : 12345,
    "grantOrRevoke" : true,
    "groupName" : "...",
    "userName" : "...",
    "isRecursive" : 12345,
    "isWildCard" : true,
    "ipAddress" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXPermObj" : {
      "type" : "object",
      "title" : "VXPermObj",
          "properties" : {
            "userList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "groupList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "permList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "ipAddress" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "userList" : [ "...", "..." ],
  "groupList" : [ "...", "..." ],
  "permList" : [ "...", "..." ],
  "ipAddress" : "..."
},
      "description" : ""
    }
    ,
    "json_VXPermObjList" : {
      "type" : "object",
      "title" : "VXPermObjList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXPermObjs" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXPermObj"
}
            }
          }
        }
      ],
      "example" : {
  "vXPermObjs" : [ {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  }, {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXPolicy" : {
      "type" : "object",
      "title" : "VXPolicy",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "policyName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyName<\/b>",
"type" : "string"
            },
            "resourceName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceName<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "repositoryName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repositoryName<\/b>",
"type" : "string"
            },
            "repositoryType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repositoryType<\/b>",
"type" : "string"
            },
            "permMapList" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userPermList<\/b>",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXPermObj"
}
            },
            "tables" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tables<\/b>",
"type" : "string"
            },
            "columnFamilies" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columnFamilies<\/b>",
"type" : "string"
            },
            "columns" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columns<\/b>",
"type" : "string"
            },
            "databases" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>databases<\/b>",
"type" : "string"
            },
            "udfs" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>udfs<\/b>",
"type" : "string"
            },
            "tableType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tableType<\/b>",
"type" : "string"
            },
            "columnType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columnType<\/b>",
"type" : "string"
            },
            "topologies" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>topologies<\/b>",
"type" : "string"
            },
            "services" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>services<\/b>",
"type" : "string"
            },
            "hiveServices" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>hiveservices<\/b>",
"type" : "string"
            },
            "isEnabled" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEnable<\/b>",
"type" : "boolean"
            },
            "isRecursive" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isRecursive<\/b>",
"type" : "boolean"
            },
            "isAuditEnabled" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isAuditEnabled<\/b>",
"type" : "boolean"
            },
            "version" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>version<\/b>",
"type" : "string"
            },
            "grantor" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "replacePerm" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "policyLabel" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "policyName" : "...",
  "resourceName" : "...",
  "description" : "...",
  "repositoryName" : "...",
  "repositoryType" : "...",
  "permMapList" : [ {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  }, {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  } ],
  "tables" : "...",
  "columnFamilies" : "...",
  "columns" : "...",
  "databases" : "...",
  "udfs" : "...",
  "tableType" : "...",
  "columnType" : "...",
  "topologies" : "...",
  "services" : "...",
  "hiveServices" : "...",
  "isEnabled" : true,
  "isRecursive" : true,
  "isAuditEnabled" : true,
  "version" : "...",
  "grantor" : "...",
  "replacePerm" : true,
  "policyLabel" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXPolicyExportAudit" : {
      "type" : "object",
      "title" : "VXPolicyExportAudit",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "clientIP" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clientIP<\/b>",
"type" : "string"
            },
            "agentId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>agentId<\/b>",
"type" : "string"
            },
            "requestedEpoch" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestedEpoch<\/b>",
"type" : "number"
            },
            "lastUpdated" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lastUpdated<\/b>",
"type" : "number"
            },
            "repositoryName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repositoryName<\/b>",
"type" : "string"
            },
            "repositoryDisplayName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repositoryDisplayName<\/b>",
"type" : "string"
            },
            "exportedJson" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>exportedJson<\/b>",
"type" : "string"
            },
            "httpRetCode" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>httpRetCode<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "syncStatus" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "clusterName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "zoneName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "clientIP" : "...",
  "agentId" : "...",
  "requestedEpoch" : 12345,
  "lastUpdated" : 12345,
  "repositoryName" : "...",
  "repositoryDisplayName" : "...",
  "exportedJson" : "...",
  "httpRetCode" : 12345,
  "syncStatus" : "...",
  "clusterName" : "...",
  "zoneName" : "...",
  "policyVersion" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXPolicyExportAuditList" : {
      "type" : "object",
      "title" : "VXPolicyExportAuditList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXPolicyExportAudits" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXPolicyExportAudit"
}
            }
          }
        }
      ],
      "example" : {
  "vXPolicyExportAudits" : [ {
    "clientIP" : "...",
    "agentId" : "...",
    "requestedEpoch" : 12345,
    "lastUpdated" : 12345,
    "repositoryName" : "...",
    "repositoryDisplayName" : "...",
    "exportedJson" : "...",
    "httpRetCode" : 12345,
    "syncStatus" : "...",
    "clusterName" : "...",
    "zoneName" : "...",
    "policyVersion" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "clientIP" : "...",
    "agentId" : "...",
    "requestedEpoch" : 12345,
    "lastUpdated" : 12345,
    "repositoryName" : "...",
    "repositoryDisplayName" : "...",
    "exportedJson" : "...",
    "httpRetCode" : 12345,
    "syncStatus" : "...",
    "clusterName" : "...",
    "zoneName" : "...",
    "policyVersion" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXPolicyLabel" : {
      "type" : "object",
      "title" : "VXPolicyLabel",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "policyLabel" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "policyLabel" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXPolicyLabelList" : {
      "type" : "object",
      "title" : "VXPolicyLabelList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vxPolicyLabels" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXPolicyLabel"
}
            }
          }
        }
      ],
      "example" : {
  "vxPolicyLabels" : [ {
    "policyLabel" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  }, {
    "policyLabel" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXPolicyList" : {
      "type" : "object",
      "title" : "VXPolicyList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXPolicies" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXPolicy"
}
            }
          }
        }
      ],
      "example" : {
  "vXPolicies" : [ {
    "policyName" : "...",
    "resourceName" : "...",
    "description" : "...",
    "repositoryName" : "...",
    "repositoryType" : "...",
    "permMapList" : [ {
      "userList" : [ "...", "..." ],
      "groupList" : [ "...", "..." ],
      "permList" : [ "...", "..." ],
      "ipAddress" : "..."
    }, {
      "userList" : [ "...", "..." ],
      "groupList" : [ "...", "..." ],
      "permList" : [ "...", "..." ],
      "ipAddress" : "..."
    } ],
    "tables" : "...",
    "columnFamilies" : "...",
    "columns" : "...",
    "databases" : "...",
    "udfs" : "...",
    "tableType" : "...",
    "columnType" : "...",
    "topologies" : "...",
    "services" : "...",
    "hiveServices" : "...",
    "isEnabled" : true,
    "isRecursive" : true,
    "isAuditEnabled" : true,
    "version" : "...",
    "grantor" : "...",
    "replacePerm" : true,
    "policyLabel" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "policyName" : "...",
    "resourceName" : "...",
    "description" : "...",
    "repositoryName" : "...",
    "repositoryType" : "...",
    "permMapList" : [ {
      "userList" : [ "...", "..." ],
      "groupList" : [ "...", "..." ],
      "permList" : [ "...", "..." ],
      "ipAddress" : "..."
    }, {
      "userList" : [ "...", "..." ],
      "groupList" : [ "...", "..." ],
      "permList" : [ "...", "..." ],
      "ipAddress" : "..."
    } ],
    "tables" : "...",
    "columnFamilies" : "...",
    "columns" : "...",
    "databases" : "...",
    "udfs" : "...",
    "tableType" : "...",
    "columnType" : "...",
    "topologies" : "...",
    "services" : "...",
    "hiveServices" : "...",
    "isEnabled" : true,
    "isRecursive" : true,
    "isAuditEnabled" : true,
    "version" : "...",
    "grantor" : "...",
    "replacePerm" : true,
    "policyLabel" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXPortalUser" : {
      "type" : "object",
      "title" : "VXPortalUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "loginId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>loginId<\/b>",
"type" : "string"
            },
            "password" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>password<\/b>",
"type" : "string"
            },
            "status" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>status<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "emailAddress" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>emailAddress<\/b>",
"type" : "string"
            },
            "firstName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>firstName<\/b>",
"type" : "string"
            },
            "lastName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lastName<\/b>",
"type" : "string"
            },
            "publicScreenName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>publicScreenName<\/b>",
"type" : "string"
            },
            "userSource" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userSource<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "notes" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>notes<\/b>",
"type" : "string"
            },
            "userRoleList" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userRoleList<\/b>",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "groupIdList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "number"
}
            },
            "userPermList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXUserPermission"
}
            },
            "groupPermissions" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXGroupPermission"
}
            },
            "otherAttributes" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "configProperties" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            },
            "syncSource" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "loginId" : "...",
  "password" : "...",
  "status" : 12345,
  "emailAddress" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "publicScreenName" : "...",
  "userSource" : 12345,
  "notes" : "...",
  "userRoleList" : [ "...", "..." ],
  "myClassType" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "userPermList" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "groupPermissions" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "otherAttributes" : "...",
  "configProperties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXPortalUserList" : {
      "type" : "object",
      "title" : "VXPortalUserList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXPortalUsers" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXPortalUser"
}
            }
          }
        }
      ],
      "example" : {
  "vXPortalUsers" : [ {
    "loginId" : "...",
    "password" : "...",
    "status" : 12345,
    "emailAddress" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "publicScreenName" : "...",
    "userSource" : 12345,
    "notes" : "...",
    "userRoleList" : [ "...", "..." ],
    "myClassType" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "userPermList" : [ {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "groupPermissions" : [ {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "otherAttributes" : "...",
    "configProperties" : {
      "property1" : "...",
      "property2" : "..."
    },
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "loginId" : "...",
    "password" : "...",
    "status" : 12345,
    "emailAddress" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "publicScreenName" : "...",
    "userSource" : 12345,
    "notes" : "...",
    "userRoleList" : [ "...", "..." ],
    "myClassType" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "userPermList" : [ {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "groupPermissions" : [ {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "otherAttributes" : "...",
    "configProperties" : {
      "property1" : "...",
      "property2" : "..."
    },
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXRepository" : {
      "type" : "object",
      "title" : "VXRepository",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "repositoryType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repositoryType<\/b>",
"type" : "string"
            },
            "config" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>config<\/b>",
"type" : "string"
            },
            "isActive" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isActive<\/b>",
"type" : "boolean"
            },
            "version" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>version<\/b>",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "description" : "...",
  "repositoryType" : "...",
  "config" : "...",
  "isActive" : true,
  "version" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXRepositoryList" : {
      "type" : "object",
      "title" : "VXRepositoryList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXRepositories" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXRepository"
}
            }
          }
        }
      ],
      "example" : {
  "vXRepositories" : [ {
    "name" : "...",
    "description" : "...",
    "repositoryType" : "...",
    "config" : "...",
    "isActive" : true,
    "version" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "repositoryType" : "...",
    "config" : "...",
    "isActive" : true,
    "version" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXResource" : {
      "type" : "object",
      "title" : "VXResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "policyName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "resourceType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "assetId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetId<\/b>",
"type" : "number"
            },
            "parentId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentId<\/b>",
"type" : "number"
            },
            "parentPath" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentPath<\/b>",
"type" : "string"
            },
            "isEncrypt" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEncrypt<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "permMapList" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permMapList<\/b>",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXPermMap"
}
            },
            "auditList" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>auditList<\/b>",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXAuditMap"
}
            },
            "isRecursive" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isRecursive<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "resourceGroup" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceGroup<\/b>",
"type" : "string"
            },
            "databases" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>databases<\/b>",
"type" : "string"
            },
            "tables" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tables<\/b>",
"type" : "string"
            },
            "columnFamilies" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columnFamilies<\/b>",
"type" : "string"
            },
            "columns" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columns<\/b>",
"type" : "string"
            },
            "udfs" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>udfs<\/b>",
"type" : "string"
            },
            "assetName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetName<\/b>",
"type" : "string"
            },
            "assetType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "resourceStatus" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceStatus<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "tableType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tableType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "columnType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columnType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "topologies" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>topologies<\/b>",
"type" : "string"
            },
            "services" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>services<\/b>",
"type" : "string"
            },
            "hiveServices" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>hiveservices<\/b>",
"type" : "string"
            },
            "checkParentPermission" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>checkParentPermission<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "guid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>guid<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "policyName" : "...",
  "description" : "...",
  "resourceType" : 12345,
  "assetId" : 12345,
  "parentId" : 12345,
  "parentPath" : "...",
  "isEncrypt" : 12345,
  "permMapList" : [ {
    "permGroup" : "...",
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "permFor" : 12345,
    "permType" : 12345,
    "grantOrRevoke" : true,
    "groupName" : "...",
    "userName" : "...",
    "isRecursive" : 12345,
    "isWildCard" : true,
    "ipAddress" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "permGroup" : "...",
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "permFor" : 12345,
    "permType" : 12345,
    "grantOrRevoke" : true,
    "groupName" : "...",
    "userName" : "...",
    "isRecursive" : 12345,
    "isWildCard" : true,
    "ipAddress" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "auditList" : [ {
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "auditType" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "auditType" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "isRecursive" : 12345,
  "resourceGroup" : "...",
  "databases" : "...",
  "tables" : "...",
  "columnFamilies" : "...",
  "columns" : "...",
  "udfs" : "...",
  "assetName" : "...",
  "assetType" : 12345,
  "resourceStatus" : 12345,
  "tableType" : 12345,
  "columnType" : 12345,
  "topologies" : "...",
  "services" : "...",
  "hiveServices" : "...",
  "checkParentPermission" : 12345,
  "myClassType" : 12345,
  "guid" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXResourceList" : {
      "type" : "object",
      "title" : "VXResourceList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXResources" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXResource"
}
            }
          }
        }
      ],
      "example" : {
  "vXResources" : [ {
    "name" : "...",
    "policyName" : "...",
    "description" : "...",
    "resourceType" : 12345,
    "assetId" : 12345,
    "parentId" : 12345,
    "parentPath" : "...",
    "isEncrypt" : 12345,
    "permMapList" : [ {
      "permGroup" : "...",
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "permFor" : 12345,
      "permType" : 12345,
      "grantOrRevoke" : true,
      "groupName" : "...",
      "userName" : "...",
      "isRecursive" : 12345,
      "isWildCard" : true,
      "ipAddress" : "...",
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "permGroup" : "...",
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "permFor" : 12345,
      "permType" : 12345,
      "grantOrRevoke" : true,
      "groupName" : "...",
      "userName" : "...",
      "isRecursive" : 12345,
      "isWildCard" : true,
      "ipAddress" : "...",
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "auditList" : [ {
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "auditType" : 12345,
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "auditType" : 12345,
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "isRecursive" : 12345,
    "resourceGroup" : "...",
    "databases" : "...",
    "tables" : "...",
    "columnFamilies" : "...",
    "columns" : "...",
    "udfs" : "...",
    "assetName" : "...",
    "assetType" : 12345,
    "resourceStatus" : 12345,
    "tableType" : 12345,
    "columnType" : 12345,
    "topologies" : "...",
    "services" : "...",
    "hiveServices" : "...",
    "checkParentPermission" : 12345,
    "myClassType" : 12345,
    "guid" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "policyName" : "...",
    "description" : "...",
    "resourceType" : 12345,
    "assetId" : 12345,
    "parentId" : 12345,
    "parentPath" : "...",
    "isEncrypt" : 12345,
    "permMapList" : [ {
      "permGroup" : "...",
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "permFor" : 12345,
      "permType" : 12345,
      "grantOrRevoke" : true,
      "groupName" : "...",
      "userName" : "...",
      "isRecursive" : 12345,
      "isWildCard" : true,
      "ipAddress" : "...",
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "permGroup" : "...",
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "permFor" : 12345,
      "permType" : 12345,
      "grantOrRevoke" : true,
      "groupName" : "...",
      "userName" : "...",
      "isRecursive" : 12345,
      "isWildCard" : true,
      "ipAddress" : "...",
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "auditList" : [ {
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "auditType" : 12345,
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "auditType" : 12345,
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "isRecursive" : 12345,
    "resourceGroup" : "...",
    "databases" : "...",
    "tables" : "...",
    "columnFamilies" : "...",
    "columns" : "...",
    "udfs" : "...",
    "assetName" : "...",
    "assetType" : 12345,
    "resourceStatus" : 12345,
    "tableType" : 12345,
    "columnType" : 12345,
    "topologies" : "...",
    "services" : "...",
    "hiveServices" : "...",
    "checkParentPermission" : 12345,
    "myClassType" : 12345,
    "guid" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXResponse" : {
      "type" : "object",
      "title" : "VXResponse",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ViewBaseBean"
        },
        {
          "properties" : {
            "statusCode" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>statusCode<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "msgDesc" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>msgDesc<\/b>",
"type" : "string"
            },
            "messageList" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>messageList<\/b>",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXMessage"
}
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "statusCode" : 12345,
  "msgDesc" : "...",
  "messageList" : [ {
    "name" : "...",
    "rbKey" : "...",
    "message" : "...",
    "objectId" : 12345,
    "fieldName" : "...",
    "myClassType" : 12345
  }, {
    "name" : "...",
    "rbKey" : "...",
    "message" : "...",
    "objectId" : 12345,
    "fieldName" : "...",
    "myClassType" : 12345
  } ],
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXString" : {
      "type" : "object",
      "title" : "VXString",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_ViewBaseBean"
        },
        {
          "properties" : {
            "value" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>value<\/b>",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "value" : "...",
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXStringList" : {
      "type" : "object",
      "title" : "VXStringList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXStrings" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXString"
}
            }
          }
        }
      ],
      "example" : {
  "vXStrings" : [ {
    "value" : "...",
    "myClassType" : 12345
  }, {
    "value" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXTrxLog" : {
      "type" : "object",
      "title" : "VXTrxLog",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "objectClassType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectClassType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "objectId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectId<\/b>",
"type" : "number"
            },
            "parentObjectId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectId<\/b>",
"type" : "number"
            },
            "parentObjectClassType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectClassType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "parentObjectName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectName<\/b>",
"type" : "string"
            },
            "objectName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectName<\/b>",
"type" : "string"
            },
            "attributeName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>attributeName<\/b>",
"type" : "string"
            },
            "previousValue" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>previousValue<\/b>",
"type" : "string"
            },
            "newValue" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>newValue<\/b>",
"type" : "string"
            },
            "transactionId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>transactionId<\/b>",
"type" : "string"
            },
            "action" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "sessionId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionId<\/b>",
"type" : "string"
            },
            "requestId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestId<\/b>",
"type" : "string"
            },
            "sessionType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionType<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "objectClassType" : 12345,
  "objectId" : 12345,
  "parentObjectId" : 12345,
  "parentObjectClassType" : 12345,
  "parentObjectName" : "...",
  "objectName" : "...",
  "attributeName" : "...",
  "previousValue" : "...",
  "newValue" : "...",
  "transactionId" : "...",
  "action" : "...",
  "sessionId" : "...",
  "requestId" : "...",
  "sessionType" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXTrxLogList" : {
      "type" : "object",
      "title" : "VXTrxLogList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXTrxLogs" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXTrxLog"
}
            }
          }
        }
      ],
      "example" : {
  "vXTrxLogs" : [ {
    "objectClassType" : 12345,
    "objectId" : 12345,
    "parentObjectId" : 12345,
    "parentObjectClassType" : 12345,
    "parentObjectName" : "...",
    "objectName" : "...",
    "attributeName" : "...",
    "previousValue" : "...",
    "newValue" : "...",
    "transactionId" : "...",
    "action" : "...",
    "sessionId" : "...",
    "requestId" : "...",
    "sessionType" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  }, {
    "objectClassType" : 12345,
    "objectId" : 12345,
    "parentObjectId" : 12345,
    "parentObjectClassType" : 12345,
    "parentObjectName" : "...",
    "objectName" : "...",
    "attributeName" : "...",
    "previousValue" : "...",
    "newValue" : "...",
    "transactionId" : "...",
    "action" : "...",
    "sessionId" : "...",
    "requestId" : "...",
    "sessionType" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXUgsyncAuditInfo" : {
      "type" : "object",
      "title" : "VXUgsyncAuditInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "eventTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "userName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "noOfNewUsers" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "noOfModifiedUsers" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "noOfNewGroups" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "noOfModifiedGroups" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "syncSource" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "ldapSyncSourceInfo" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_VXLdapSyncSourceInfo"
            },
            "fileSyncSourceInfo" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_VXFileSyncSourceInfo"
            },
            "unixSyncSourceInfo" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_VXUnixSyncSourceInfo"
            },
            "sessionId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncSourceInfo" : {
            "readOnly" : false,
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "example" : {
  "eventTime" : 12345,
  "userName" : "...",
  "noOfNewUsers" : 12345,
  "noOfModifiedUsers" : 12345,
  "noOfNewGroups" : 12345,
  "noOfModifiedGroups" : 12345,
  "syncSource" : "...",
  "ldapSyncSourceInfo" : {
    "ldapUrl" : "...",
    "userSearchFilter" : "...",
    "groupSearchFilter" : "...",
    "groupHierarchyLevel" : "...",
    "totalUsersSynced" : 12345,
    "totalGroupsSynced" : 12345,
    "groupSearchFirstEnabled" : "...",
    "groupSearchEnabled" : "...",
    "userSearchEnabled" : "...",
    "totalUsersDeleted" : 12345,
    "totalGroupsDeleted" : 12345
  },
  "fileSyncSourceInfo" : {
    "fileName" : "...",
    "syncTime" : "...",
    "lastModified" : "...",
    "totalUsersSynced" : 12345,
    "totalGroupsSynced" : 12345,
    "totalUsersDeleted" : 12345,
    "totalGroupsDeleted" : 12345
  },
  "unixSyncSourceInfo" : {
    "fileName" : "...",
    "syncTime" : "...",
    "lastModified" : "...",
    "unixBackend" : "...",
    "minUserId" : "...",
    "minGroupId" : "...",
    "totalUsersSynced" : 12345,
    "totalGroupsSynced" : 12345,
    "totalUsersDeleted" : 12345,
    "totalGroupsDeleted" : 12345
  },
  "sessionId" : "...",
  "syncSourceInfo" : {
    "property1" : "...",
    "property2" : "..."
  },
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXUgsyncAuditInfoList" : {
      "type" : "object",
      "title" : "VXUgsyncAuditInfoList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vxUgsyncAuditInfoList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXUgsyncAuditInfo"
}
            }
          }
        }
      ],
      "example" : {
  "vxUgsyncAuditInfoList" : [ {
    "eventTime" : 12345,
    "userName" : "...",
    "noOfNewUsers" : 12345,
    "noOfModifiedUsers" : 12345,
    "noOfNewGroups" : 12345,
    "noOfModifiedGroups" : 12345,
    "syncSource" : "...",
    "ldapSyncSourceInfo" : {
      "ldapUrl" : "...",
      "userSearchFilter" : "...",
      "groupSearchFilter" : "...",
      "groupHierarchyLevel" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "groupSearchFirstEnabled" : "...",
      "groupSearchEnabled" : "...",
      "userSearchEnabled" : "...",
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "fileSyncSourceInfo" : {
      "fileName" : "...",
      "syncTime" : "...",
      "lastModified" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "unixSyncSourceInfo" : {
      "fileName" : "...",
      "syncTime" : "...",
      "lastModified" : "...",
      "unixBackend" : "...",
      "minUserId" : "...",
      "minGroupId" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "sessionId" : "...",
    "syncSourceInfo" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  }, {
    "eventTime" : 12345,
    "userName" : "...",
    "noOfNewUsers" : 12345,
    "noOfModifiedUsers" : 12345,
    "noOfNewGroups" : 12345,
    "noOfModifiedGroups" : 12345,
    "syncSource" : "...",
    "ldapSyncSourceInfo" : {
      "ldapUrl" : "...",
      "userSearchFilter" : "...",
      "groupSearchFilter" : "...",
      "groupHierarchyLevel" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "groupSearchFirstEnabled" : "...",
      "groupSearchEnabled" : "...",
      "userSearchEnabled" : "...",
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "fileSyncSourceInfo" : {
      "fileName" : "...",
      "syncTime" : "...",
      "lastModified" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "unixSyncSourceInfo" : {
      "fileName" : "...",
      "syncTime" : "...",
      "lastModified" : "...",
      "unixBackend" : "...",
      "minUserId" : "...",
      "minGroupId" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "sessionId" : "...",
    "syncSourceInfo" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXUnixSyncSourceInfo" : {
      "type" : "object",
      "title" : "VXUnixSyncSourceInfo",
          "properties" : {
            "fileName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncTime" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "lastModified" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "unixBackend" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "minUserId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "minGroupId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalUsersSynced" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalGroupsSynced" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalUsersDeleted" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalGroupsDeleted" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          },
      "example" : {
  "fileName" : "...",
  "syncTime" : "...",
  "lastModified" : "...",
  "unixBackend" : "...",
  "minUserId" : "...",
  "minGroupId" : "...",
  "totalUsersSynced" : 12345,
  "totalGroupsSynced" : 12345,
  "totalUsersDeleted" : 12345,
  "totalGroupsDeleted" : 12345
},
      "description" : ""
    }
    ,
    "json_VXUser" : {
      "type" : "object",
      "title" : "VXUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "firstName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>firstName<\/b>",
"type" : "string"
            },
            "lastName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lastName<\/b>",
"type" : "string"
            },
            "emailAddress" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>emailAddress<\/b>",
"type" : "string"
            },
            "password" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>password<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "credStoreId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>credStoreId<\/b>",
"type" : "number"
            },
            "groupIdList" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupIdList<\/b>",
"type" : "array",
"items" : {
  "type" : "number"
}
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "status" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "isVisible" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "userSource" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "userRoleList" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userRoleList<\/b>",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "groupNameList" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "otherAttributes" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncSource" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "name" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "emailAddress" : "...",
  "password" : "...",
  "description" : "...",
  "credStoreId" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "myClassType" : 12345,
  "status" : 12345,
  "isVisible" : 12345,
  "userSource" : 12345,
  "userRoleList" : [ "...", "..." ],
  "groupNameList" : [ "...", "..." ],
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXUserGroupInfo" : {
      "type" : "object",
      "title" : "VXUserGroupInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "xuserInfo" : {
            "readOnly" : false,
"$ref" : "#/definitions/json_VXUser"
            },
            "xgroupInfo" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXGroup"
}
            }
          }
        }
      ],
      "example" : {
  "xuserInfo" : {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  },
  "xgroupInfo" : [ {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_VXUserList" : {
      "type" : "object",
      "title" : "VXUserList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXUsers" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXUser"
}
            }
          }
        }
      ],
      "example" : {
  "vXUsers" : [ {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXUserPermission" : {
      "type" : "object",
      "title" : "VXUserPermission",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VXDataObject"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "userId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "moduleId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "isAllowed" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "userName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "moduleName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "loginId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "userId" : 12345,
  "moduleId" : 12345,
  "isAllowed" : 12345,
  "userName" : "...",
  "moduleName" : "...",
  "loginId" : "...",
  "myClassType" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXUserPermissionList" : {
      "type" : "object",
      "title" : "VXUserPermissionList",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_VList"
        },
        {
          "properties" : {
            "vXUserPermission" : {
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_VXUserPermission"
}
            }
          }
        }
      ],
      "example" : {
  "vXUserPermission" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
      "description" : ""
    }
    ,
    "json_VXXTrxLog" : {
      "type" : "object",
      "title" : "VXXTrxLog",
          "properties" : {
            "parentObjectId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectId<\/b>",
"type" : "number"
            },
            "parentObjectClassType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectClassType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "attributeName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>attributeName<\/b>",
"type" : "string"
            },
            "previousValue" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>previousValue<\/b>",
"type" : "string"
            },
            "newValue" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>newValue<\/b>",
"type" : "string"
            },
            "transactionId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>transactionId<\/b>",
"type" : "string"
            },
            "action" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "sessionId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionId<\/b>",
"type" : "string"
            },
            "requestId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestId<\/b>",
"type" : "string"
            },
            "sessionType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionType<\/b>",
"type" : "string"
            },
            "parentObjectName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "objectName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "createTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "updateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "addedByUserId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "updatedByUserId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "objectClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "objectId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "parentObjectId" : 12345,
  "parentObjectClassType" : 12345,
  "attributeName" : "...",
  "previousValue" : "...",
  "newValue" : "...",
  "transactionId" : "...",
  "action" : "...",
  "sessionId" : "...",
  "requestId" : "...",
  "sessionType" : "...",
  "parentObjectName" : "...",
  "objectName" : "...",
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345,
  "objectClassType" : 12345,
  "objectId" : 12345
},
      "description" : ""
    }
    ,
    "json_ValidityInterval" : {
      "type" : "object",
      "title" : "ValidityInterval",
          "properties" : {
            "minutes" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "hours" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "days" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          },
      "example" : {
  "minutes" : 12345,
  "hours" : 12345,
  "days" : 12345
},
      "description" : ""
    }
    ,
    "json_ViewBaseBean" : {
      "type" : "object",
      "title" : "ViewBaseBean",
      "example" : { },
      "description" : ""
    }
    ,
    "json_XXAccessAudit" : {
      "type" : "object",
      "title" : "XXAccessAudit",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXAccessAuditBase"
        },
        {
          "properties" : {
            "sequenceNumber" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "eventCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "eventDuration" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "tags" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "sequenceNumber" : 12345,
  "eventCount" : 12345,
  "eventDuration" : 12345,
  "tags" : "...",
  "id" : 12345,
  "myClassType" : 12345,
  "auditType" : 12345,
  "accessResult" : 12345,
  "accessType" : "...",
  "aclEnforcer" : "...",
  "agentId" : "...",
  "clientIP" : "...",
  "clientType" : "...",
  "policyId" : 12345,
  "repoName" : "...",
  "repoType" : 12345,
  "resultReason" : "...",
  "sessionId" : "...",
  "eventTime" : 12345,
  "requestUser" : "...",
  "action" : "...",
  "requestData" : "...",
  "resourcePath" : "...",
  "resourceType" : "...",
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXAccessAuditBase" : {
      "type" : "object",
      "title" : "XXAccessAuditBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "auditType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>auditType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "accessResult" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>accessResult<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "accessType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>accessType<\/b>",
"type" : "string"
            },
            "aclEnforcer" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>aclEnforcer<\/b>",
"type" : "string"
            },
            "agentId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>agentId<\/b>",
"type" : "string"
            },
            "clientIP" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clientIP<\/b>",
"type" : "string"
            },
            "clientType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clientType<\/b>",
"type" : "string"
            },
            "policyId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "repoName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repoName<\/b>",
"type" : "string"
            },
            "repoType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repoType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "resultReason" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resultReason<\/b>",
"type" : "string"
            },
            "sessionId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionId<\/b>",
"type" : "string"
            },
            "eventTime" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>eventTime<\/b>",
"type" : "number"
            },
            "requestUser" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestUser<\/b>",
"type" : "string"
            },
            "action" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "requestData" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestData<\/b>",
"type" : "string"
            },
            "resourcePath" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourcePath<\/b>",
"type" : "string"
            },
            "resourceType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceType<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "auditType" : 12345,
  "accessResult" : 12345,
  "accessType" : "...",
  "aclEnforcer" : "...",
  "agentId" : "...",
  "clientIP" : "...",
  "clientType" : "...",
  "policyId" : 12345,
  "repoName" : "...",
  "repoType" : 12345,
  "resultReason" : "...",
  "sessionId" : "...",
  "eventTime" : 12345,
  "requestUser" : "...",
  "action" : "...",
  "requestData" : "...",
  "resourcePath" : "...",
  "resourceType" : "...",
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXAccessAuditV4" : {
      "type" : "object",
      "title" : "XXAccessAuditV4",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXAccessAuditBase"
        },
        {
          "properties" : {
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "myClassType" : 12345,
  "id" : 12345,
  "auditType" : 12345,
  "accessResult" : 12345,
  "accessType" : "...",
  "aclEnforcer" : "...",
  "agentId" : "...",
  "clientIP" : "...",
  "clientType" : "...",
  "policyId" : 12345,
  "repoName" : "...",
  "repoType" : 12345,
  "resultReason" : "...",
  "sessionId" : "...",
  "eventTime" : 12345,
  "requestUser" : "...",
  "action" : "...",
  "requestData" : "...",
  "resourcePath" : "...",
  "resourceType" : "...",
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXAccessAuditV5" : {
      "type" : "object",
      "title" : "XXAccessAuditV5",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXAccessAuditBase"
        },
        {
          "properties" : {
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "sequenceNumber" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "eventCount" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "eventDuration" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "example" : {
  "myClassType" : 12345,
  "sequenceNumber" : 12345,
  "eventCount" : 12345,
  "eventDuration" : 12345,
  "id" : 12345,
  "auditType" : 12345,
  "accessResult" : 12345,
  "accessType" : "...",
  "aclEnforcer" : "...",
  "agentId" : "...",
  "clientIP" : "...",
  "clientType" : "...",
  "policyId" : 12345,
  "repoName" : "...",
  "repoType" : 12345,
  "resultReason" : "...",
  "sessionId" : "...",
  "eventTime" : 12345,
  "requestUser" : "...",
  "action" : "...",
  "requestData" : "...",
  "resourcePath" : "...",
  "resourceType" : "...",
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXAccessTypeDef" : {
      "type" : "object",
      "title" : "XXAccessTypeDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "defid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "number"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "rbkeylabel" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            },
            "dataMaskOptions" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rowFilterOptions" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "defid" : 12345,
  "itemId" : 12345,
  "name" : "...",
  "label" : "...",
  "rbkeylabel" : "...",
  "order" : 12345,
  "dataMaskOptions" : "...",
  "rowFilterOptions" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXAccessTypeDefGrants" : {
      "type" : "object",
      "title" : "XXAccessTypeDefGrants",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "atdId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>atdId<\/b>",
"type" : "number"
            },
            "impliedGrant" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>impliedGrant<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "atdId" : 12345,
  "impliedGrant" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXAsset" : {
      "type" : "object",
      "title" : "XXAsset",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "activeStatus" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>activeStatus<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "assetType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "config" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>config<\/b>",
"type" : "string"
            },
            "supportNative" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>supportNative<\/b>",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "name" : "...",
  "description" : "...",
  "activeStatus" : 12345,
  "assetType" : 12345,
  "config" : "...",
  "supportNative" : true,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXAuditMap" : {
      "type" : "object",
      "title" : "XXAuditMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "resourceId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceId<\/b>",
"type" : "number"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "number"
            },
            "userId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            },
            "auditType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>auditType<\/b>",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "resourceId" : 12345,
  "groupId" : 12345,
  "userId" : 12345,
  "auditType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXAuthSession" : {
      "type" : "object",
      "title" : "XXAuthSession",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "loginId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>loginId<\/b>",
"type" : "string"
            },
            "userId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            },
            "extSessionId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>extSessionId<\/b>",
"type" : "string"
            },
            "authTime" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authTime<\/b>",
"type" : "number"
            },
            "authStatus" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authStatus<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "authType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "authProvider" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authProvider<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "deviceType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>deviceType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "requestIP" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestIP<\/b>",
"type" : "string"
            },
            "requestUserAgent" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestUserAgent<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "loginId" : "...",
  "userId" : 12345,
  "extSessionId" : "...",
  "authTime" : 12345,
  "authStatus" : 12345,
  "authType" : 12345,
  "authProvider" : 12345,
  "deviceType" : 12345,
  "requestIP" : "...",
  "requestUserAgent" : "...",
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXContextEnricherDef" : {
      "type" : "object",
      "title" : "XXContextEnricherDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "number"
            },
            "defid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "enricher" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>enricher<\/b>",
"type" : "string"
            },
            "enricherOptions" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>evaluatorOptions<\/b>",
"type" : "string"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "itemId" : 12345,
  "defid" : 12345,
  "name" : "...",
  "enricher" : "...",
  "enricherOptions" : "...",
  "order" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXCredentialStore" : {
      "type" : "object",
      "title" : "XXCredentialStore",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "name" : "...",
  "description" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXDBBase" : {
      "type" : "object",
      "title" : "XXDBBase",
          "properties" : {
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "createTime" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>createTime<\/b>",
"type" : "number"
            },
            "updateTime" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>updateTime<\/b>",
"type" : "number"
            },
            "addedByUserId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>addedByUserId<\/b>",
"type" : "number"
            },
            "updatedByUserId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>updatedByUserId<\/b>",
"type" : "number"
            }
          },
      "example" : {
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXDataHist" : {
      "type" : "object",
      "title" : "XXDataHist",
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "createTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "updateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "version" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>version<\/b>",
"type" : "number"
            },
            "objectGuid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "objectId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "objectClassType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "number"
            },
            "objectName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "action" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "fromTime" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>fromTime<\/b>",
"type" : "number"
            },
            "toTime" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>toTime<\/b>",
"type" : "number"
            },
            "content" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>content<\/b>",
"type" : "string"
            }
          },
      "example" : {
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "version" : 12345,
  "objectGuid" : "...",
  "objectId" : 12345,
  "objectClassType" : 12345,
  "objectName" : "...",
  "action" : "...",
  "fromTime" : 12345,
  "toTime" : 12345,
  "content" : "..."
},
      "description" : ""
    }
    ,
    "json_XXDataMaskTypeDef" : {
      "type" : "object",
      "title" : "XXDataMaskTypeDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "defid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "number"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "transformer" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>transformer<\/b>",
"type" : "string"
            },
            "dataMaskOptions" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>dataMaskOptions<\/b>",
"type" : "string"
            },
            "rbkeylabel" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "rbKeyDescription" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyDescription<\/b>",
"type" : "string"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "defid" : 12345,
  "itemId" : 12345,
  "name" : "...",
  "label" : "...",
  "description" : "...",
  "transformer" : "...",
  "dataMaskOptions" : "...",
  "rbkeylabel" : "...",
  "rbKeyDescription" : "...",
  "order" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXEnumDef" : {
      "type" : "object",
      "title" : "XXEnumDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "defid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "number"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "defaultindex" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defaultIndex<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "defid" : 12345,
  "itemId" : 12345,
  "name" : "...",
  "defaultindex" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXEnumElementDef" : {
      "type" : "object",
      "title" : "XXEnumElementDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "enumdefid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>enumDefId<\/b>",
"type" : "number"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "rbkeylabel" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "enumdefid" : 12345,
  "itemId" : 12345,
  "name" : "...",
  "label" : "...",
  "rbkeylabel" : "...",
  "order" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXGlobalState" : {
      "type" : "object",
      "title" : "XXGlobalState",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXGlobalStateBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "version" : 12345,
  "stateName" : "...",
  "appData" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXGlobalStateBase" : {
      "type" : "object",
      "title" : "XXGlobalStateBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "stateName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "appData" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "version" : 12345,
  "stateName" : "...",
  "appData" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXGroup" : {
      "type" : "object",
      "title" : "XXGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "status" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>status<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "isVisible" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "groupType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "credStoreId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>credStoreId<\/b>",
"type" : "number"
            },
            "otherAttributes" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncSource" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupSource" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "name" : "...",
  "description" : "...",
  "status" : 12345,
  "isVisible" : 12345,
  "groupType" : 12345,
  "credStoreId" : 12345,
  "otherAttributes" : "...",
  "syncSource" : "...",
  "groupSource" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXGroupGroup" : {
      "type" : "object",
      "title" : "XXGroupGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "parentGroupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentGroupId<\/b>",
"type" : "number"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "name" : "...",
  "parentGroupId" : 12345,
  "groupId" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXGroupPermission" : {
      "type" : "object",
      "title" : "XXGroupPermission",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "moduleId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "isAllowed" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "groupId" : 12345,
  "moduleId" : 12345,
  "isAllowed" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXGroupUser" : {
      "type" : "object",
      "title" : "XXGroupUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "parentGroupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentGroupId<\/b>",
"type" : "number"
            },
            "userId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "name" : "...",
  "parentGroupId" : 12345,
  "userId" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXModuleDef" : {
      "type" : "object",
      "title" : "XXModuleDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "module" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "url" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "module" : "...",
  "url" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPermMap" : {
      "type" : "object",
      "title" : "XXPermMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "permGroup" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permGroup<\/b>",
"type" : "string"
            },
            "resourceId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceId<\/b>",
"type" : "number"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "number"
            },
            "userId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            },
            "permFor" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permFor<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "permType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "isRecursive" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isRecursive<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "isWildCard" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isWildCard<\/b>",
"type" : "boolean"
            },
            "grantOrRevoke" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>grantOrRevoke<\/b>",
"type" : "boolean"
            },
            "ipAddress" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "permGroup" : "...",
  "resourceId" : 12345,
  "groupId" : 12345,
  "userId" : 12345,
  "permFor" : 12345,
  "permType" : 12345,
  "isRecursive" : 12345,
  "isWildCard" : true,
  "grantOrRevoke" : true,
  "ipAddress" : "...",
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPluginInfo" : {
      "type" : "object",
      "title" : "XXPluginInfo",
          "properties" : {
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "createTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "updateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "appType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "hostName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "ipAddress" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "info" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "serviceName" : "...",
  "appType" : "...",
  "hostName" : "...",
  "ipAddress" : "...",
  "info" : "..."
},
      "description" : ""
    }
    ,
    "json_XXPolicy" : {
      "type" : "object",
      "title" : "XXPolicy",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXPolicyBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "guid" : "...",
  "version" : 12345,
  "service" : 12345,
  "name" : "...",
  "description" : "...",
  "resourceSignature" : "...",
  "isEnabled" : true,
  "isAuditEnabled" : true,
  "policyType" : 12345,
  "policyPriority" : 12345,
  "options" : "...",
  "policyText" : "...",
  "zoneId" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyBase" : {
      "type" : "object",
      "title" : "XXPolicyBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "guid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>version<\/b>",
"type" : "number"
            },
            "service" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>service<\/b>",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "resourceSignature" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "isEnabled" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEnabled<\/b>",
"type" : "boolean"
            },
            "isAuditEnabled" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isAuditEnabled<\/b>",
"type" : "boolean"
            },
            "policyType" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "policyPriority" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "options" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>options<\/b>",
"type" : "string"
            },
            "policyText" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "zoneId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "guid" : "...",
  "version" : 12345,
  "service" : 12345,
  "name" : "...",
  "description" : "...",
  "resourceSignature" : "...",
  "isEnabled" : true,
  "isAuditEnabled" : true,
  "policyType" : 12345,
  "policyPriority" : 12345,
  "options" : "...",
  "policyText" : "...",
  "zoneId" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyChangeLog" : {
      "type" : "object",
      "title" : "XXPolicyChangeLog",
          "properties" : {
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "createTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "policyVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "changeType" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyType" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "zoneName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "policyGuid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          },
      "example" : {
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "id" : 12345,
  "createTime" : 12345,
  "serviceId" : 12345,
  "policyVersion" : 12345,
  "changeType" : 12345,
  "serviceType" : "...",
  "policyType" : 12345,
  "zoneName" : "...",
  "policyId" : 12345,
  "policyGuid" : "..."
},
      "description" : ""
    }
    ,
    "json_XXPolicyConditionDef" : {
      "type" : "object",
      "title" : "XXPolicyConditionDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "number"
            },
            "defid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "evaluator" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>evaluator<\/b>",
"type" : "string"
            },
            "evaluatoroptions" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>evaluatorOptions<\/b>",
"type" : "string"
            },
            "validationRegEx" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validationMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "uiHint" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "rbkeylabel" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "rbkeydescription" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyDescription<\/b>",
"type" : "string"
            },
            "rbKeyValidationMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "itemId" : 12345,
  "defid" : 12345,
  "name" : "...",
  "evaluator" : "...",
  "evaluatoroptions" : "...",
  "validationRegEx" : "...",
  "validationMessage" : "...",
  "uiHint" : "...",
  "label" : "...",
  "description" : "...",
  "rbkeylabel" : "...",
  "rbkeydescription" : "...",
  "rbKeyValidationMessage" : "...",
  "order" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyExportAudit" : {
      "type" : "object",
      "title" : "XXPolicyExportAudit",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "clientIP" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clientIP<\/b>",
"type" : "string"
            },
            "agentId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>agentId<\/b>",
"type" : "string"
            },
            "requestedEpoch" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestedEpoch<\/b>",
"type" : "number"
            },
            "lastUpdated" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lastUpdated<\/b>",
"type" : "number"
            },
            "repositoryName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repositoryName<\/b>",
"type" : "string"
            },
            "exportedJson" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>exportedJson<\/b>",
"type" : "string"
            },
            "httpRetCode" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>httpRetCode<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "clusterName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clusterName<\/b>",
"type" : "string"
            },
            "zoneName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>zoneName<\/b>",
"type" : "string"
            },
            "policyVersion" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyVersion<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "clientIP" : "...",
  "agentId" : "...",
  "requestedEpoch" : 12345,
  "lastUpdated" : 12345,
  "repositoryName" : "...",
  "exportedJson" : "...",
  "httpRetCode" : 12345,
  "clusterName" : "...",
  "zoneName" : "...",
  "policyVersion" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyItem" : {
      "type" : "object",
      "title" : "XXPolicyItem",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "GUID" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "number"
            },
            "delegateAdmin" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>delegateAdmin<\/b>",
"type" : "boolean"
            },
            "itemType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemType<\/b>",
"type" : "number"
            },
            "isEnabled" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEnabled<\/b>",
"type" : "boolean"
            },
            "comments" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>comments<\/b>",
"type" : "string"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "GUID" : "...",
  "policyid" : 12345,
  "delegateAdmin" : true,
  "itemType" : 12345,
  "isEnabled" : true,
  "comments" : "...",
  "order" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyItemAccess" : {
      "type" : "object",
      "title" : "XXPolicyItemAccess",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "GUID" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyitemid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyItemId<\/b>",
"type" : "number"
            },
            "type" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "number"
            },
            "isallowed" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isAllowed<\/b>",
"type" : "boolean"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "GUID" : "...",
  "policyitemid" : 12345,
  "type" : 12345,
  "isallowed" : true,
  "order" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyItemCondition" : {
      "type" : "object",
      "title" : "XXPolicyItemCondition",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyitemid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyItemId<\/b>",
"type" : "number"
            },
            "type" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "number"
            },
            "value" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>value<\/b>",
"type" : "string"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            },
            "GUID" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyitemid" : 12345,
  "type" : 12345,
  "value" : "...",
  "order" : 12345,
  "GUID" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyItemDataMaskInfo" : {
      "type" : "object",
      "title" : "XXPolicyItemDataMaskInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyItemId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyItemId<\/b>",
"type" : "number"
            },
            "type" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "number"
            },
            "conditionExpr" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>valueExpr<\/b>",
"type" : "string"
            },
            "valueExpr" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>valueExpr<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyItemId" : 12345,
  "type" : 12345,
  "conditionExpr" : "...",
  "valueExpr" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyItemGroupPerm" : {
      "type" : "object",
      "title" : "XXPolicyItemGroupPerm",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyitemid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyItemId<\/b>",
"type" : "number"
            },
            "groupid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "number"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyitemid" : 12345,
  "groupid" : 12345,
  "order" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyItemRowFilterInfo" : {
      "type" : "object",
      "title" : "XXPolicyItemRowFilterInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyItemId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyItemId<\/b>",
"type" : "number"
            },
            "filterExpr" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>filterExpr<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyItemId" : 12345,
  "filterExpr" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyItemUserPerm" : {
      "type" : "object",
      "title" : "XXPolicyItemUserPerm",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyitemid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyItemId<\/b>",
"type" : "number"
            },
            "userid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyitemid" : 12345,
  "userid" : 12345,
  "order" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyLabel" : {
      "type" : "object",
      "title" : "XXPolicyLabel",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "guid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyLabel" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "guid" : "...",
  "policyLabel" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyLabelMap" : {
      "type" : "object",
      "title" : "XXPolicyLabelMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "guid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "policyLabelId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "guid" : "...",
  "policyId" : 12345,
  "policyLabelId" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyRefAccessType" : {
      "type" : "object",
      "title" : "XXPolicyRefAccessType",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "number"
            },
            "accessDefId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>accessDefId<\/b>",
"type" : "number"
            },
            "accessTypeName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>accessTypeName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyId" : 12345,
  "accessDefId" : 12345,
  "accessTypeName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyRefCondition" : {
      "type" : "object",
      "title" : "XXPolicyRefCondition",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "number"
            },
            "conditionDefId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>conditionDefId<\/b>",
"type" : "number"
            },
            "conditionName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>conditionName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyId" : 12345,
  "conditionDefId" : 12345,
  "conditionName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyRefDataMaskType" : {
      "type" : "object",
      "title" : "XXPolicyRefDataMaskType",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "number"
            },
            "dataMaskDefId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>dataMaskDefId<\/b>",
"type" : "number"
            },
            "dataMaskTypeName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>dataMaskTypeName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyId" : 12345,
  "dataMaskDefId" : 12345,
  "dataMaskTypeName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyRefGroup" : {
      "type" : "object",
      "title" : "XXPolicyRefGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "number"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "number"
            },
            "groupName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyId" : 12345,
  "groupId" : 12345,
  "groupName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : "The persistent class for the x_policy_ref_group database table."
    }
    ,
    "json_XXPolicyRefResource" : {
      "type" : "object",
      "title" : "XXPolicyRefResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "number"
            },
            "resourceDefId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceDefId<\/b>",
"type" : "number"
            },
            "resourceName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyId" : 12345,
  "resourceDefId" : 12345,
  "resourceName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyRefRole" : {
      "type" : "object",
      "title" : "XXPolicyRefRole",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "number"
            },
            "roleId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>roleId<\/b>",
"type" : "number"
            },
            "roleName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>roleName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyId" : 12345,
  "roleId" : 12345,
  "roleName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : "The persistent class for the x_policy_ref_role database table."
    }
    ,
    "json_XXPolicyRefUser" : {
      "type" : "object",
      "title" : "XXPolicyRefUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "number"
            },
            "userId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            },
            "userName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyId" : 12345,
  "userId" : 12345,
  "userName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyResource" : {
      "type" : "object",
      "title" : "XXPolicyResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "policyid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "number"
            },
            "resdefid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resDefId<\/b>",
"type" : "number"
            },
            "isexcludes" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isExcludes<\/b>",
"type" : "boolean"
            },
            "isrecursive" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isRecursive<\/b>",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "policyid" : 12345,
  "resdefid" : 12345,
  "isexcludes" : true,
  "isrecursive" : true,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyResourceMap" : {
      "type" : "object",
      "title" : "XXPolicyResourceMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "resourceid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceId<\/b>",
"type" : "number"
            },
            "value" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>value<\/b>",
"type" : "string"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "resourceid" : 12345,
  "value" : "...",
  "order" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPolicyWithAssignedId" : {
      "type" : "object",
      "title" : "XXPolicyWithAssignedId",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXPolicyBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "guid" : "...",
  "version" : 12345,
  "service" : 12345,
  "name" : "...",
  "description" : "...",
  "resourceSignature" : "...",
  "isEnabled" : true,
  "isAuditEnabled" : true,
  "policyType" : 12345,
  "policyPriority" : 12345,
  "options" : "...",
  "policyText" : "...",
  "zoneId" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPortalUser" : {
      "type" : "object",
      "title" : "XXPortalUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "firstName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>firstName<\/b>",
"type" : "string"
            },
            "lastName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lastName<\/b>",
"type" : "string"
            },
            "publicScreenName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>publicScreenName<\/b>",
"type" : "string"
            },
            "loginId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>loginId<\/b>",
"type" : "string"
            },
            "password" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>password<\/b>",
"type" : "string"
            },
            "emailAddress" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>emailAddress<\/b>",
"type" : "string"
            },
            "status" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>status<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "userSource" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userSource<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "notes" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>notes<\/b>",
"type" : "string"
            },
            "otherAttributes" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncSource" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "firstName" : "...",
  "lastName" : "...",
  "publicScreenName" : "...",
  "loginId" : "...",
  "password" : "...",
  "emailAddress" : "...",
  "status" : 12345,
  "userSource" : 12345,
  "notes" : "...",
  "otherAttributes" : "...",
  "syncSource" : "...",
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXPortalUserRole" : {
      "type" : "object",
      "title" : "XXPortalUserRole",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "userId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            },
            "userRole" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userRole<\/b>",
"type" : "string"
            },
            "status" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>status<\/b>",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "userId" : 12345,
  "userRole" : "...",
  "status" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXRMSMappingProvider" : {
      "type" : "object",
      "title" : "XXRMSMappingProvider",
          "properties" : {
            "changeTimestamp" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "lastKnownVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          },
      "example" : {
  "changeTimestamp" : 12345,
  "id" : 12345,
  "name" : "...",
  "lastKnownVersion" : 12345,
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_XXRMSNotification" : {
      "type" : "object",
      "title" : "XXRMSNotification",
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "hmsName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "notificationId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "changeTimestamp" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "changeType" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "hlResourceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "hlServiceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "llResourceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "llServiceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          },
      "example" : {
  "id" : 12345,
  "hmsName" : "...",
  "notificationId" : 12345,
  "changeTimestamp" : 12345,
  "changeType" : "...",
  "hlResourceId" : 12345,
  "hlServiceId" : 12345,
  "llResourceId" : 12345,
  "llServiceId" : 12345,
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_XXRMSResourceMapping" : {
      "type" : "object",
      "title" : "XXRMSResourceMapping",
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "changeTimestamp" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "hlResourceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "llResourceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          },
      "example" : {
  "id" : 12345,
  "changeTimestamp" : 12345,
  "hlResourceId" : 12345,
  "llResourceId" : 12345,
  "myClassType" : 12345
},
      "description" : ""
    }
    ,
    "json_XXRMSServiceResource" : {
      "type" : "object",
      "title" : "XXRMSServiceResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "guid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "resourceSignature" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "isEnabled" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "serviceResourceElements" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "guid" : "...",
  "serviceId" : 12345,
  "resourceSignature" : "...",
  "version" : 12345,
  "isEnabled" : true,
  "serviceResourceElements" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXResource" : {
      "type" : "object",
      "title" : "XXResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "resourceType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "assetId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetId<\/b>",
"type" : "number"
            },
            "parentId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentId<\/b>",
"type" : "number"
            },
            "parentPath" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentPath<\/b>",
"type" : "string"
            },
            "isEncrypt" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEncrypt<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "isRecursive" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isRecursive<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "resourceGroup" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceGroup<\/b>",
"type" : "string"
            },
            "databases" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>databases<\/b>",
"type" : "string"
            },
            "tables" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tables<\/b>",
"type" : "string"
            },
            "columnFamilies" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columnFamilies<\/b>",
"type" : "string"
            },
            "columns" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columns<\/b>",
"type" : "string"
            },
            "udfs" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>udfs<\/b>",
"type" : "string"
            },
            "resourceStatus" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceStatus<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "tableType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tableType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "columnType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columnType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "topologies" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>topologies<\/b>",
"type" : "string"
            },
            "services" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>services<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "policyName" : "...",
  "name" : "...",
  "description" : "...",
  "resourceType" : 12345,
  "assetId" : 12345,
  "parentId" : 12345,
  "parentPath" : "...",
  "isEncrypt" : 12345,
  "isRecursive" : 12345,
  "resourceGroup" : "...",
  "databases" : "...",
  "tables" : "...",
  "columnFamilies" : "...",
  "columns" : "...",
  "udfs" : "...",
  "resourceStatus" : 12345,
  "tableType" : 12345,
  "columnType" : 12345,
  "topologies" : "...",
  "services" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXResourceDef" : {
      "type" : "object",
      "title" : "XXResourceDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "number"
            },
            "defid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "string"
            },
            "level" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>level<\/b>",
"type" : "number"
            },
            "parent" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parent<\/b>",
"type" : "number"
            },
            "mandatory" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>mandatory<\/b>",
"type" : "boolean"
            },
            "lookupsupported" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lookUpSupported<\/b>",
"type" : "boolean"
            },
            "recursivesupported" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>recursiveSupported<\/b>",
"type" : "boolean"
            },
            "excludessupported" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>excludesSupported<\/b>",
"type" : "boolean"
            },
            "matcher" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>matcher<\/b>",
"type" : "string"
            },
            "matcheroptions" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>matcherOptions<\/b>",
"type" : "string"
            },
            "validationRegEx" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validationMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "uiHint" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "rbkeylabel" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "rbkeydescription" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyDescription<\/b>",
"type" : "string"
            },
            "rbKeyValidationMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            },
            "dataMaskOptions" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rowFilterOptions" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "itemId" : 12345,
  "defid" : 12345,
  "name" : "...",
  "type" : "...",
  "level" : 12345,
  "parent" : 12345,
  "mandatory" : true,
  "lookupsupported" : true,
  "recursivesupported" : true,
  "excludessupported" : true,
  "matcher" : "...",
  "matcheroptions" : "...",
  "validationRegEx" : "...",
  "validationMessage" : "...",
  "uiHint" : "...",
  "label" : "...",
  "description" : "...",
  "rbkeylabel" : "...",
  "rbkeydescription" : "...",
  "rbKeyValidationMessage" : "...",
  "order" : 12345,
  "dataMaskOptions" : "...",
  "rowFilterOptions" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXRole" : {
      "type" : "object",
      "title" : "XXRole",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXRoleBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "version" : 12345,
  "name" : "...",
  "description" : "...",
  "options" : "...",
  "roleText" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXRoleBase" : {
      "type" : "object",
      "title" : "XXRoleBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "options" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "roleText" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "version" : 12345,
  "name" : "...",
  "description" : "...",
  "options" : "...",
  "roleText" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXRoleRefGroup" : {
      "type" : "object",
      "title" : "XXRoleRefGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "roleId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>roleId<\/b>",
"type" : "number"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "number"
            },
            "groupName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupName<\/b>",
"type" : "string"
            },
            "groupType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupType<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "roleId" : 12345,
  "groupId" : 12345,
  "groupName" : "...",
  "groupType" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : "The persistent class for the x_role_ref_group database table."
    }
    ,
    "json_XXRoleRefRole" : {
      "type" : "object",
      "title" : "XXRoleRefRole",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "roleId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>roleId<\/b>",
"type" : "number"
            },
            "subRoleId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>subRoleId<\/b>",
"type" : "number"
            },
            "subRoleName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>subRoleName<\/b>",
"type" : "string"
            },
            "subRoleType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>subRoleType<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "roleId" : 12345,
  "subRoleId" : 12345,
  "subRoleName" : "...",
  "subRoleType" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : "The persistent class for the x_role_ref_role database table."
    }
    ,
    "json_XXRoleRefUser" : {
      "type" : "object",
      "title" : "XXRoleRefUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "roleId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>roleId<\/b>",
"type" : "number"
            },
            "userId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            },
            "userName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userName<\/b>",
"type" : "string"
            },
            "userType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userType<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "roleId" : 12345,
  "userId" : 12345,
  "userName" : "...",
  "userType" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : "The persistent class for the x_role_ref_user database table."
    }
    ,
    "json_XXSecurityZone" : {
      "type" : "object",
      "title" : "XXSecurityZone",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXSecurityZoneBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "version" : 12345,
  "name" : "...",
  "jsonData" : "...",
  "description" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXSecurityZoneBase" : {
      "type" : "object",
      "title" : "XXSecurityZoneBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "jsonData" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "version" : 12345,
  "name" : "...",
  "jsonData" : "...",
  "description" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXSecurityZoneRefGroup" : {
      "type" : "object",
      "title" : "XXSecurityZoneRefGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "zoneId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>zoneId<\/b>",
"type" : "number"
            },
            "groupId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "number"
            },
            "groupName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupName<\/b>",
"type" : "string"
            },
            "userType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupType<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "zoneId" : 12345,
  "groupId" : 12345,
  "groupName" : "...",
  "userType" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXSecurityZoneRefResource" : {
      "type" : "object",
      "title" : "XXSecurityZoneRefResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "zoneId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>zoneId<\/b>",
"type" : "number"
            },
            "resourceDefId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceDefId<\/b>",
"type" : "number"
            },
            "resourceName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "zoneId" : 12345,
  "resourceDefId" : 12345,
  "resourceName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXSecurityZoneRefService" : {
      "type" : "object",
      "title" : "XXSecurityZoneRefService",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "zoneId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>zoneId<\/b>",
"type" : "number"
            },
            "serviceId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>serviceId<\/b>",
"type" : "number"
            },
            "serviceName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>serviceName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "zoneId" : 12345,
  "serviceId" : 12345,
  "serviceName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXSecurityZoneRefTagService" : {
      "type" : "object",
      "title" : "XXSecurityZoneRefTagService",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "zoneId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "tagServiceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "tagServiceName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "zoneId" : 12345,
  "tagServiceId" : 12345,
  "tagServiceName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXSecurityZoneRefUser" : {
      "type" : "object",
      "title" : "XXSecurityZoneRefUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "zoneId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>zoneId<\/b>",
"type" : "number"
            },
            "userId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "number"
            },
            "userName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userName<\/b>",
"type" : "string"
            },
            "userType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userType<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "zoneId" : 12345,
  "userId" : 12345,
  "userName" : "...",
  "userType" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXService" : {
      "type" : "object",
      "title" : "XXService",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXServiceBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "guid" : "...",
  "version" : 12345,
  "type" : 12345,
  "name" : "...",
  "displayName" : "...",
  "tagService" : 12345,
  "policyVersion" : 12345,
  "policyUpdateTime" : 12345,
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "description" : "...",
  "isenabled" : true,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXServiceBase" : {
      "type" : "object",
      "title" : "XXServiceBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "guid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>version<\/b>",
"type" : "number"
            },
            "type" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "displayName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tagService" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tagService<\/b>",
"type" : "number"
            },
            "policyVersion" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyVersion<\/b>",
"type" : "number"
            },
            "policyUpdateTime" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyUpdateTime<\/b>",
"type" : "number"
            },
            "tagVersion" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tagVersion<\/b>",
"type" : "number"
            },
            "tagUpdateTime" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tagUpdateTime<\/b>",
"type" : "number"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "isenabled" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEnabled<\/b>",
"type" : "boolean"
            }
          }
        }
      ],
      "example" : {
  "guid" : "...",
  "version" : 12345,
  "type" : 12345,
  "name" : "...",
  "displayName" : "...",
  "tagService" : 12345,
  "policyVersion" : 12345,
  "policyUpdateTime" : 12345,
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "description" : "...",
  "isenabled" : true,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXServiceConfigDef" : {
      "type" : "object",
      "title" : "XXServiceConfigDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "defid" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "number"
            },
            "itemId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "string"
            },
            "subtype" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>subType<\/b>",
"type" : "string"
            },
            "isMandatory" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isMandatory<\/b>",
"type" : "boolean"
            },
            "defaultvalue" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defaultValue<\/b>",
"type" : "string"
            },
            "validationRegEx" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validationMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "uiHint" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "rbkeylabel" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "rbkeydescription" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyDecription<\/b>",
"type" : "string"
            },
            "rbKeyValidationMessage" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "order" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "defid" : 12345,
  "itemId" : 12345,
  "name" : "...",
  "type" : "...",
  "subtype" : "...",
  "isMandatory" : true,
  "defaultvalue" : "...",
  "validationRegEx" : "...",
  "validationMessage" : "...",
  "uiHint" : "...",
  "label" : "...",
  "description" : "...",
  "rbkeylabel" : "...",
  "rbkeydescription" : "...",
  "rbKeyValidationMessage" : "...",
  "order" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXServiceConfigMap" : {
      "type" : "object",
      "title" : "XXServiceConfigMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "serviceId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>service<\/b>",
"type" : "number"
            },
            "configkey" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>configKey<\/b>",
"type" : "string"
            },
            "configvalue" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>configValue<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "serviceId" : 12345,
  "configkey" : "...",
  "configvalue" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXServiceDef" : {
      "type" : "object",
      "title" : "XXServiceDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXServiceDefBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "guid" : "...",
  "version" : 12345,
  "name" : "...",
  "implclassname" : "...",
  "label" : "...",
  "description" : "...",
  "defOptions" : "...",
  "rbkeylabel" : "...",
  "rbkeydescription" : "...",
  "isEnabled" : true,
  "displayName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXServiceDefBase" : {
      "type" : "object",
      "title" : "XXServiceDefBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "guid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>version<\/b>",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "implclassname" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>implClassName<\/b>",
"type" : "string"
            },
            "label" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "defOptions" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defOptions<\/b>",
"type" : "string"
            },
            "rbkeylabel" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "rbkeydescription" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyDescription<\/b>",
"type" : "string"
            },
            "isEnabled" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEnabled<\/b>",
"type" : "boolean"
            },
            "displayName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>displayName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "guid" : "...",
  "version" : 12345,
  "name" : "...",
  "implclassname" : "...",
  "label" : "...",
  "description" : "...",
  "defOptions" : "...",
  "rbkeylabel" : "...",
  "rbkeydescription" : "...",
  "isEnabled" : true,
  "displayName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXServiceDefWithAssignedId" : {
      "type" : "object",
      "title" : "XXServiceDefWithAssignedId",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXServiceDefBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "guid" : "...",
  "version" : 12345,
  "name" : "...",
  "implclassname" : "...",
  "label" : "...",
  "description" : "...",
  "defOptions" : "...",
  "rbkeylabel" : "...",
  "rbkeydescription" : "...",
  "isEnabled" : true,
  "displayName" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXServiceResource" : {
      "type" : "object",
      "title" : "XXServiceResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "guid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "resourceSignature" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "isEnabled" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "serviceResourceElements" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tags" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "guid" : "...",
  "serviceId" : 12345,
  "resourceSignature" : "...",
  "version" : 12345,
  "isEnabled" : true,
  "serviceResourceElements" : "...",
  "tags" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXServiceResourceElement" : {
      "type" : "object",
      "title" : "XXServiceResourceElement",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "resDefId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "isExcludes" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "isRecursive" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "resourceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "resDefId" : 12345,
  "isExcludes" : true,
  "isRecursive" : true,
  "resourceId" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXServiceResourceElementValue" : {
      "type" : "object",
      "title" : "XXServiceResourceElementValue",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "resElementId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "value" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sortOrder" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "resElementId" : 12345,
  "value" : "...",
  "sortOrder" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXServiceVersionInfo" : {
      "type" : "object",
      "title" : "XXServiceVersionInfo",
          "properties" : {
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "policyVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "policyUpdateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "tagVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "tagUpdateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "roleVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "roleUpdateTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "id" : 12345,
  "version" : 12345,
  "serviceId" : 12345,
  "policyVersion" : 12345,
  "policyUpdateTime" : 12345,
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "roleVersion" : 12345,
  "roleUpdateTime" : 12345
},
      "description" : ""
    }
    ,
    "json_XXServiceWithAssignedId" : {
      "type" : "object",
      "title" : "XXServiceWithAssignedId",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXServiceBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "guid" : "...",
  "version" : 12345,
  "type" : 12345,
  "name" : "...",
  "displayName" : "...",
  "tagService" : 12345,
  "policyVersion" : 12345,
  "policyUpdateTime" : 12345,
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "description" : "...",
  "isenabled" : true,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXTag" : {
      "type" : "object",
      "title" : "XXTag",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "guid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "owner" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "options" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tagAttrs" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "guid" : "...",
  "version" : 12345,
  "type" : 12345,
  "owner" : 12345,
  "options" : "...",
  "tagAttrs" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXTagAttribute" : {
      "type" : "object",
      "title" : "XXTagAttribute",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "tagId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "value" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "tagId" : 12345,
  "name" : "...",
  "value" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXTagAttributeDef" : {
      "type" : "object",
      "title" : "XXTagAttributeDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "tagDefId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "tagDefId" : 12345,
  "name" : "...",
  "type" : "...",
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXTagChangeLog" : {
      "type" : "object",
      "title" : "XXTagChangeLog",
          "properties" : {
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "createTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "changeType" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceTagsVersion" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "serviceResourceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "tagId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            }
          },
      "example" : {
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "id" : 12345,
  "createTime" : 12345,
  "serviceId" : 12345,
  "changeType" : 12345,
  "serviceTagsVersion" : 12345,
  "serviceResourceId" : 12345,
  "tagId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXTagDef" : {
      "type" : "object",
      "title" : "XXTagDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "guid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "isEnabled" : {
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "name" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "source" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tagAttrDefs" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "guid" : "...",
  "version" : 12345,
  "isEnabled" : true,
  "name" : "...",
  "source" : "...",
  "tagAttrDefs" : "...",
  "id" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXTagResourceMap" : {
      "type" : "object",
      "title" : "XXTagResourceMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "guid" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tagId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "resourceId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "guid" : "...",
  "tagId" : 12345,
  "resourceId" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXTrxLog" : {
      "type" : "object",
      "title" : "XXTrxLog",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "objectClassType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectClassType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "objectId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectId<\/b>",
"type" : "number"
            },
            "parentObjectId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectId<\/b>",
"type" : "number"
            },
            "parentObjectClassType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectClassType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "parentObjectName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectName<\/b>",
"type" : "string"
            },
            "objectName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectName<\/b>",
"type" : "string"
            },
            "attributeName" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>attributeName<\/b>",
"type" : "string"
            },
            "previousValue" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>previousValue<\/b>",
"type" : "string"
            },
            "newValue" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>newValue<\/b>",
"type" : "string"
            },
            "transactionId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>transactionId<\/b>",
"type" : "string"
            },
            "action" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "sessionId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionId<\/b>",
"type" : "string"
            },
            "requestId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestId<\/b>",
"type" : "string"
            },
            "sessionType" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionType<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "objectClassType" : 12345,
  "objectId" : 12345,
  "parentObjectId" : 12345,
  "parentObjectClassType" : 12345,
  "parentObjectName" : "...",
  "objectName" : "...",
  "attributeName" : "...",
  "previousValue" : "...",
  "newValue" : "...",
  "transactionId" : "...",
  "action" : "...",
  "sessionId" : "...",
  "requestId" : "...",
  "sessionType" : "...",
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXUgsyncAuditInfo" : {
      "type" : "object",
      "title" : "XXUgsyncAuditInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "eventTime" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "userName" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncSource" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "noOfNewUsers" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "noOfModifiedUsers" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "noOfNewGroups" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "noOfModifiedGroups" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "syncSourceInfo" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sessionId" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "id" : 12345,
  "eventTime" : 12345,
  "userName" : "...",
  "syncSource" : "...",
  "noOfNewUsers" : 12345,
  "noOfModifiedUsers" : 12345,
  "noOfNewGroups" : 12345,
  "noOfModifiedGroups" : 12345,
  "syncSourceInfo" : "...",
  "sessionId" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXUser" : {
      "type" : "object",
      "title" : "XXUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "myDisplayValue" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "description" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "status" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>status<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "isVisible" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isVisible<\/b>",
"type" : "number"
            },
            "credStoreId" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>credStoreId<\/b>",
"type" : "number"
            },
            "otherAttributes" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncSource" : {
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "name" : "...",
  "description" : "...",
  "status" : 12345,
  "isVisible" : 12345,
  "credStoreId" : 12345,
  "otherAttributes" : "...",
  "syncSource" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "json_XXUserPermission" : {
      "type" : "object",
      "title" : "XXUserPermission",
      "allOf" : [
        {
          "$ref" : "#/definitions/json_XXDBBase"
        },
        {
          "properties" : {
            "id" : {
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "number"
            },
            "userId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "moduleId" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "isAllowed" : {
            "readOnly" : false,
"description" : "",
"type" : "number"
            },
            "myClassType" : {
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "example" : {
  "id" : 12345,
  "userId" : 12345,
  "moduleId" : 12345,
  "isAllowed" : 12345,
  "myClassType" : 12345,
  "myDisplayValue" : "...",
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedByUserId" : 12345,
  "updatedByUserId" : 12345
},
      "description" : ""
    }
    ,
    "xml_ns0_RESTResponse" : {
      "type" : "object",
      "title" : "RESTResponse",
      "allOf" : [
        {
          "properties" : {
            "httpStatusCode" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "messageList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_message"
}
            },
            "msgDesc" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "statusCode" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_message" : {
      "type" : "object",
      "title" : "message",
      "allOf" : [
        {
          "properties" : {
            "fieldName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "message" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "objectId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "rbKey" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VEnum" : {
      "type" : "object",
      "xml" : {
        "name" : "VEnum",
        "namespace" : ""
      },
      "title" : "VEnum",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_viewBaseBean"
        },
        {
          "properties" : {
            "elementList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>elementList<\/b>",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VEnumElement"
}
            },
            "enumName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>enumName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VEnumElement" : {
      "type" : "object",
      "xml" : {
        "name" : "VEnumElement",
        "namespace" : ""
      },
      "title" : "VEnumElement",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_viewBaseBean"
        },
        {
          "properties" : {
            "elementLabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>elementLabel<\/b>",
"type" : "string"
            },
            "elementName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the elementName",
"type" : "string"
            },
            "elementValue" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>elementValue<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "enumName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the enumName",
"type" : "string"
            },
            "rbKey" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the rbKey",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VList" : {
      "type" : "object",
      "xml" : {
        "name" : "VList",
        "namespace" : ""
      },
      "title" : "VList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_viewBaseBean"
        },
        {
          "properties" : {
            "pageSize" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "resultSize" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resultSize<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "sortBy" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "sortType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "startIndex" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "totalCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VTrxLogAttr" : {
      "type" : "object",
      "xml" : {
        "name" : "VTrxLogAttr",
        "namespace" : ""
      },
      "title" : "VTrxLogAttr",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_viewBaseBean"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_viewBaseBean" : {
      "type" : "object",
      "title" : "viewBaseBean",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXAccessAudit" : {
      "type" : "object",
      "xml" : {
        "name" : "XXAccessAudit",
        "namespace" : ""
      },
      "title" : "XXAccessAudit",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXAccessAuditBase"
        },
        {
          "properties" : {
            "eventCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "eventDuration" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "sequenceNumber" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "tags" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the tags",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXAccessAuditBase" : {
      "type" : "object",
      "xml" : {
        "name" : "XXAccessAuditBase",
        "namespace" : ""
      },
      "title" : "XXAccessAuditBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "accessResult" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>accessResult<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "accessType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>accessType<\/b>",
"type" : "string"
            },
            "aclEnforcer" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>aclEnforcer<\/b>",
"type" : "string"
            },
            "action" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "agentId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>agentId<\/b>",
"type" : "string"
            },
            "auditType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>auditType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "clientIP" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clientIP<\/b>",
"type" : "string"
            },
            "clientType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clientType<\/b>",
"type" : "string"
            },
            "eventTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>eventTime<\/b>",
"type" : "string"
            },
            "policyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "repoName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repoName<\/b>",
"type" : "string"
            },
            "repoType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repoType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "requestData" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestData<\/b>",
"type" : "string"
            },
            "requestUser" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestUser<\/b>",
"type" : "string"
            },
            "resourcePath" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourcePath<\/b>",
"type" : "string"
            },
            "resourceType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceType<\/b>",
"type" : "string"
            },
            "resultReason" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resultReason<\/b>",
"type" : "string"
            },
            "sessionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionId<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXAccessAuditV4" : {
      "type" : "object",
      "xml" : {
        "name" : "XXAccessAuditV4",
        "namespace" : ""
      },
      "title" : "XXAccessAuditV4",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXAccessAuditBase"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXAccessAuditV5" : {
      "type" : "object",
      "xml" : {
        "name" : "XXAccessAuditV5",
        "namespace" : ""
      },
      "title" : "XXAccessAuditV5",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXAccessAuditBase"
        },
        {
          "properties" : {
            "eventCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "eventDuration" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "sequenceNumber" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXAccessTypeDef" : {
      "type" : "object",
      "xml" : {
        "name" : "XXAccessTypeDef",
        "namespace" : ""
      },
      "title" : "XXAccessTypeDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "dataMaskOptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "defid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "rbkeylabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "rowFilterOptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXAccessTypeDefGrants" : {
      "type" : "object",
      "xml" : {
        "name" : "XXAccessTypeDefGrants",
        "namespace" : ""
      },
      "title" : "XXAccessTypeDefGrants",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "atdId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>atdId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "impliedGrant" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>impliedGrant<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXAsset" : {
      "type" : "object",
      "xml" : {
        "name" : "XXAsset",
        "namespace" : ""
      },
      "title" : "XXAsset",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "activeStatus" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>activeStatus<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "assetType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "config" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>config<\/b>",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "supportNative" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>supportNative<\/b>",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXAuditMap" : {
      "type" : "object",
      "xml" : {
        "name" : "XXAuditMap",
        "namespace" : ""
      },
      "title" : "XXAuditMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "auditType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>auditType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "resourceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXAuthSession" : {
      "type" : "object",
      "xml" : {
        "name" : "XXAuthSession",
        "namespace" : ""
      },
      "title" : "XXAuthSession",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "authProvider" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authProvider<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "authStatus" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authStatus<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "authTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authTime<\/b>",
"type" : "string"
            },
            "authType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "deviceType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>deviceType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "extSessionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>extSessionId<\/b>",
"type" : "string"
            },
            "loginId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>loginId<\/b>",
"type" : "string"
            },
            "requestIP" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestIP<\/b>",
"type" : "string"
            },
            "requestUserAgent" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestUserAgent<\/b>",
"type" : "string"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXContextEnricherDef" : {
      "type" : "object",
      "xml" : {
        "name" : "XXContextEnricherDef",
        "namespace" : ""
      },
      "title" : "XXContextEnricherDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "defid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "enricher" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>enricher<\/b>",
"type" : "string"
            },
            "enricherOptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>evaluatorOptions<\/b>",
"type" : "string"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXCredentialStore" : {
      "type" : "object",
      "xml" : {
        "name" : "XXCredentialStore",
        "namespace" : ""
      },
      "title" : "XXCredentialStore",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXDBBase" : {
      "type" : "object",
      "xml" : {
        "name" : "XXDBBase",
        "namespace" : ""
      },
      "title" : "XXDBBase",
      "allOf" : [
        {
          "properties" : {
            "addedByUserId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>addedByUserId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "createTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>createTime<\/b>",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "updateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>updateTime<\/b>",
"type" : "string"
            },
            "updatedByUserId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>updatedByUserId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXDataHist" : {
      "type" : "object",
      "xml" : {
        "name" : "XXDataHist",
        "namespace" : ""
      },
      "title" : "XXDataHist",
      "allOf" : [
        {
          "properties" : {
            "action" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "content" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>content<\/b>",
"type" : "string"
            },
            "createTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the createTime",
"type" : "string"
            },
            "fromTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>fromTime<\/b>",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "objectClassType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "objectGuid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the objectGuid",
"type" : "string"
            },
            "objectId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the objectId",
"type" : "integer",
"format" : "int64"
            },
            "objectName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "toTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>toTime<\/b>",
"type" : "string"
            },
            "updateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the updateTime",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>version<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXDataMaskTypeDef" : {
      "type" : "object",
      "xml" : {
        "name" : "XXDataMaskTypeDef",
        "namespace" : ""
      },
      "title" : "XXDataMaskTypeDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "dataMaskOptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>dataMaskOptions<\/b>",
"type" : "string"
            },
            "defid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "rbKeyDescription" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyDescription<\/b>",
"type" : "string"
            },
            "rbkeylabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "transformer" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>transformer<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXEnumDef" : {
      "type" : "object",
      "xml" : {
        "name" : "XXEnumDef",
        "namespace" : ""
      },
      "title" : "XXEnumDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "defaultindex" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defaultIndex<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "defid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXEnumElementDef" : {
      "type" : "object",
      "xml" : {
        "name" : "XXEnumElementDef",
        "namespace" : ""
      },
      "title" : "XXEnumElementDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "enumdefid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>enumDefId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "rbkeylabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXGlobalState" : {
      "type" : "object",
      "xml" : {
        "name" : "XXGlobalState",
        "namespace" : ""
      },
      "title" : "XXGlobalState",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXGlobalStateBase"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXGlobalStateBase" : {
      "type" : "object",
      "xml" : {
        "name" : "XXGlobalStateBase",
        "namespace" : ""
      },
      "title" : "XXGlobalStateBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "appData" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "stateName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXGroup" : {
      "type" : "object",
      "xml" : {
        "name" : "XXGroup",
        "namespace" : ""
      },
      "title" : "XXGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "credStoreId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>credStoreId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "groupSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "groupType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "isVisible" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the isVisible",
"type" : "integer",
"format" : "int32"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "otherAttributes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "JSON String representation of additional store attributes if available,\n<code>null<\/code> otherwise.",
"type" : "string"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>status<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "syncSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "JSON String representation of sync source attribute if available,\n<code>null<\/code> otherwise.",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXGroupGroup" : {
      "type" : "object",
      "xml" : {
        "name" : "XXGroupGroup",
        "namespace" : ""
      },
      "title" : "XXGroupGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "parentGroupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentGroupId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXGroupPermission" : {
      "type" : "object",
      "xml" : {
        "name" : "XXGroupPermission",
        "namespace" : ""
      },
      "title" : "XXGroupPermission",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the groupId",
"type" : "integer",
"format" : "int64"
            },
            "isAllowed" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the isAllowed",
"type" : "integer",
"format" : "int32"
            },
            "moduleId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the moduleId",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXGroupUser" : {
      "type" : "object",
      "xml" : {
        "name" : "XXGroupUser",
        "namespace" : ""
      },
      "title" : "XXGroupUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "parentGroupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentGroupId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXModuleDef" : {
      "type" : "object",
      "xml" : {
        "name" : "XXModuleDef",
        "namespace" : ""
      },
      "title" : "XXModuleDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "module" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the module",
"type" : "string"
            },
            "url" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the url",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPermMap" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPermMap",
        "namespace" : ""
      },
      "title" : "XXPermMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "grantOrRevoke" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>grantOrRevoke<\/b>",
"type" : "boolean"
            },
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "ipAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "isRecursive" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isRecursive<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "isWildCard" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isWildCard<\/b>",
"type" : "boolean"
            },
            "permFor" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permFor<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "permGroup" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permGroup<\/b>",
"type" : "string"
            },
            "permType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "resourceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPluginInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPluginInfo",
        "namespace" : ""
      },
      "title" : "XXPluginInfo",
      "allOf" : [
        {
          "properties" : {
            "appType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "createTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "hostName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "info" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "ipAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "updateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicy" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicy",
        "namespace" : ""
      },
      "title" : "XXPolicy",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXPolicyBase"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyBase" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyBase",
        "namespace" : ""
      },
      "title" : "XXPolicyBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the gUID",
"type" : "string"
            },
            "isAuditEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isAuditEnabled<\/b>",
"type" : "boolean"
            },
            "isEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEnabled<\/b>",
"type" : "boolean"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "options" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>options<\/b>",
"type" : "string"
            },
            "policyPriority" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "policyText" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "resourceSignature" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the resourceSignature",
"type" : "string"
            },
            "service" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>service<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>version<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "zoneId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyChangeLog" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyChangeLog",
        "namespace" : ""
      },
      "title" : "XXPolicyChangeLog",
      "allOf" : [
        {
          "properties" : {
            "changeType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "createTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "policyGuid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "policyType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "policyVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "serviceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "serviceType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "zoneName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyConditionDef" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyConditionDef",
        "namespace" : ""
      },
      "title" : "XXPolicyConditionDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "defid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "evaluator" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>evaluator<\/b>",
"type" : "string"
            },
            "evaluatoroptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>evaluatorOptions<\/b>",
"type" : "string"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "rbKeyValidationMessage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the rbKeyValidationMessage",
"type" : "string"
            },
            "rbkeydescription" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyDescription<\/b>",
"type" : "string"
            },
            "rbkeylabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "uiHint" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the uiHint",
"type" : "string"
            },
            "validationMessage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the validationMessage",
"type" : "string"
            },
            "validationRegEx" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the validationRegEx",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyExportAudit" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyExportAudit",
        "namespace" : ""
      },
      "title" : "XXPolicyExportAudit",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "agentId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>agentId<\/b>",
"type" : "string"
            },
            "clientIP" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clientIP<\/b>",
"type" : "string"
            },
            "clusterName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clusterName<\/b>",
"type" : "string"
            },
            "exportedJson" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>exportedJson<\/b>",
"type" : "string"
            },
            "httpRetCode" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>httpRetCode<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "lastUpdated" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lastUpdated<\/b>",
"type" : "string"
            },
            "policyVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyVersion<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "repositoryName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repositoryName<\/b>",
"type" : "string"
            },
            "requestedEpoch" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestedEpoch<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "zoneName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>zoneName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyItem" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyItem",
        "namespace" : ""
      },
      "title" : "XXPolicyItem",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "GUID" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the gUID",
"type" : "string"
            },
            "comments" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>comments<\/b>",
"type" : "string"
            },
            "delegateAdmin" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>delegateAdmin<\/b>",
"type" : "boolean"
            },
            "isEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEnabled<\/b>",
"type" : "boolean"
            },
            "itemType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyItemAccess" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyItemAccess",
        "namespace" : ""
      },
      "title" : "XXPolicyItemAccess",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "GUID" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the gUID",
"type" : "string"
            },
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "policyitemid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyItemId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyItemCondition" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyItemCondition",
        "namespace" : ""
      },
      "title" : "XXPolicyItemCondition",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "GUID" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the gUID",
"type" : "string"
            },
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>value<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyItemDataMaskInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyItemDataMaskInfo",
        "namespace" : ""
      },
      "title" : "XXPolicyItemDataMaskInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "conditionExpr" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>valueExpr<\/b>",
"type" : "string"
            },
            "policyItemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyItemId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "valueExpr" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>valueExpr<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyItemGroupPerm" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyItemGroupPerm",
        "namespace" : ""
      },
      "title" : "XXPolicyItemGroupPerm",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyItemRowFilterInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyItemRowFilterInfo",
        "namespace" : ""
      },
      "title" : "XXPolicyItemRowFilterInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "filterExpr" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>filterExpr<\/b>",
"type" : "string"
            },
            "policyItemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyItemId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyItemUserPerm" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyItemUserPerm",
        "namespace" : ""
      },
      "title" : "XXPolicyItemUserPerm",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyLabel" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyLabel",
        "namespace" : ""
      },
      "title" : "XXPolicyLabel",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the gUID",
"type" : "string"
            },
            "policyLabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the policyLabel",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyLabelMap" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyLabelMap",
        "namespace" : ""
      },
      "title" : "XXPolicyLabelMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the gUID",
"type" : "string"
            },
            "policyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the policyId",
"type" : "integer",
"format" : "int64"
            },
            "policyLabelId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the policyLabelId",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyRefAccessType" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyRefAccessType",
        "namespace" : ""
      },
      "title" : "XXPolicyRefAccessType",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "accessDefId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>accessDefId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "accessTypeName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>accessTypeName<\/b>",
"type" : "string"
            },
            "policyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyRefCondition" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyRefCondition",
        "namespace" : ""
      },
      "title" : "XXPolicyRefCondition",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "conditionDefId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>conditionDefId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "conditionName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>conditionName<\/b>",
"type" : "string"
            },
            "policyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyRefDataMaskType" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyRefDataMaskType",
        "namespace" : ""
      },
      "title" : "XXPolicyRefDataMaskType",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "dataMaskDefId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>dataMaskDefId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "dataMaskTypeName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>dataMaskTypeName<\/b>",
"type" : "string"
            },
            "policyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyRefGroup" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyRefGroup",
        "namespace" : ""
      },
      "title" : "XXPolicyRefGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "groupName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupName<\/b>",
"type" : "string"
            },
            "policyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : "The persistent class for the x_policy_ref_group database table."
    }
    ,
    "xml_ns0_XXPolicyRefResource" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyRefResource",
        "namespace" : ""
      },
      "title" : "XXPolicyRefResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "policyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "resourceDefId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceDefId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "resourceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyRefRole" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyRefRole",
        "namespace" : ""
      },
      "title" : "XXPolicyRefRole",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "policyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "roleId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>roleId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "roleName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>roleName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : "The persistent class for the x_policy_ref_role database table."
    }
    ,
    "xml_ns0_XXPolicyRefUser" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyRefUser",
        "namespace" : ""
      },
      "title" : "XXPolicyRefUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "policyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyResource" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyResource",
        "namespace" : ""
      },
      "title" : "XXPolicyResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyResourceMap" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyResourceMap",
        "namespace" : ""
      },
      "title" : "XXPolicyResourceMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>value<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPolicyWithAssignedId" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPolicyWithAssignedId",
        "namespace" : ""
      },
      "title" : "XXPolicyWithAssignedId",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXPolicyBase"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPortalUser" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPortalUser",
        "namespace" : ""
      },
      "title" : "XXPortalUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "emailAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>emailAddress<\/b>",
"type" : "string"
            },
            "firstName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>firstName<\/b>",
"type" : "string"
            },
            "lastName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lastName<\/b>",
"type" : "string"
            },
            "loginId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>loginId<\/b>",
"type" : "string"
            },
            "notes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>notes<\/b>",
"type" : "string"
            },
            "otherAttributes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "JSON String representation of additional store attributes if available,\n<code>null<\/code> otherwise.",
"type" : "string"
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>password<\/b>",
"type" : "string"
            },
            "publicScreenName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>publicScreenName<\/b>",
"type" : "string"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>status<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "syncSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "JSON String representation of sync source attribute if available,\n<code>null<\/code> otherwise.",
"type" : "string"
            },
            "userSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userSource<\/b>",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXPortalUserRole" : {
      "type" : "object",
      "xml" : {
        "name" : "XXPortalUserRole",
        "namespace" : ""
      },
      "title" : "XXPortalUserRole",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "status" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>status<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userRole" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userRole<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXRMSMappingProvider" : {
      "type" : "object",
      "xml" : {
        "name" : "XXRMSMappingProvider",
        "namespace" : ""
      },
      "title" : "XXRMSMappingProvider",
      "allOf" : [
        {
          "properties" : {
            "changeTimestamp" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "lastKnownVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the resourceSignature",
"type" : "integer",
"format" : "int64"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "name",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXRMSNotification" : {
      "type" : "object",
      "xml" : {
        "name" : "XXRMSNotification",
        "namespace" : ""
      },
      "title" : "XXRMSNotification",
      "allOf" : [
        {
          "properties" : {
            "changeTimestamp" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "changeType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "hlResourceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "hlServiceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "hmsName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "llResourceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "llServiceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "notificationId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXRMSResourceMapping" : {
      "type" : "object",
      "xml" : {
        "name" : "XXRMSResourceMapping",
        "namespace" : ""
      },
      "title" : "XXRMSResourceMapping",
      "allOf" : [
        {
          "properties" : {
            "changeTimestamp" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "hlResourceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "llResourceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXRMSServiceResource" : {
      "type" : "object",
      "xml" : {
        "name" : "XXRMSServiceResource",
        "namespace" : ""
      },
      "title" : "XXRMSServiceResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the guid",
"type" : "string"
            },
            "isEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the isEnabled",
"type" : "boolean"
            },
            "resourceSignature" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the resourceSignature",
"type" : "string"
            },
            "serviceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the serviceId",
"type" : "integer",
"format" : "int64"
            },
            "serviceResourceElements" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the version",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXResource" : {
      "type" : "object",
      "xml" : {
        "name" : "XXResource",
        "namespace" : ""
      },
      "title" : "XXResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "assetId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "columnFamilies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columnFamilies<\/b>",
"type" : "string"
            },
            "columnType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columnType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "columns" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columns<\/b>",
"type" : "string"
            },
            "databases" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>databases<\/b>",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "isEncrypt" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEncrypt<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "isRecursive" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isRecursive<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "parentId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "parentPath" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentPath<\/b>",
"type" : "string"
            },
            "policyName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resourceGroup" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceGroup<\/b>",
"type" : "string"
            },
            "resourceStatus" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceStatus<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "resourceType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "services" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>services<\/b>",
"type" : "string"
            },
            "tableType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tableType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "tables" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tables<\/b>",
"type" : "string"
            },
            "topologies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>topologies<\/b>",
"type" : "string"
            },
            "udfs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>udfs<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXResourceDef" : {
      "type" : "object",
      "xml" : {
        "name" : "XXResourceDef",
        "namespace" : ""
      },
      "title" : "XXResourceDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "dataMaskOptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "defid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "excludessupported" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>excludesSupported<\/b>",
"type" : "boolean"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "level" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>level<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "lookupsupported" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lookUpSupported<\/b>",
"type" : "boolean"
            },
            "mandatory" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>mandatory<\/b>",
"type" : "boolean"
            },
            "matcher" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>matcher<\/b>",
"type" : "string"
            },
            "matcheroptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>matcherOptions<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "parent" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parent<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "rbKeyValidationMessage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the rbKeyValidationMessage",
"type" : "string"
            },
            "rbkeydescription" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyDescription<\/b>",
"type" : "string"
            },
            "rbkeylabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "recursivesupported" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>recursiveSupported<\/b>",
"type" : "boolean"
            },
            "rowFilterOptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "string"
            },
            "uiHint" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the uiHint",
"type" : "string"
            },
            "validationMessage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the validationMessage",
"type" : "string"
            },
            "validationRegEx" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the validationRegEx",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXRole" : {
      "type" : "object",
      "xml" : {
        "name" : "XXRole",
        "namespace" : ""
      },
      "title" : "XXRole",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXRoleBase"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXRoleBase" : {
      "type" : "object",
      "xml" : {
        "name" : "XXRoleBase",
        "namespace" : ""
      },
      "title" : "XXRoleBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "options" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "roleText" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXRoleRefGroup" : {
      "type" : "object",
      "xml" : {
        "name" : "XXRoleRefGroup",
        "namespace" : ""
      },
      "title" : "XXRoleRefGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "groupName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupName<\/b>",
"type" : "string"
            },
            "groupType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "roleId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>roleId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : "The persistent class for the x_role_ref_group database table."
    }
    ,
    "xml_ns0_XXRoleRefRole" : {
      "type" : "object",
      "xml" : {
        "name" : "XXRoleRefRole",
        "namespace" : ""
      },
      "title" : "XXRoleRefRole",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "roleId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>roleId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "subRoleId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>subRoleId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "subRoleName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>subRoleName<\/b>",
"type" : "string"
            },
            "subRoleType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>subRoleType<\/b>",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : "The persistent class for the x_role_ref_role database table."
    }
    ,
    "xml_ns0_XXRoleRefUser" : {
      "type" : "object",
      "xml" : {
        "name" : "XXRoleRefUser",
        "namespace" : ""
      },
      "title" : "XXRoleRefUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "roleId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>roleId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userName<\/b>",
"type" : "string"
            },
            "userType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userType<\/b>",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : "The persistent class for the x_role_ref_user database table."
    }
    ,
    "xml_ns0_XXSecurityZone" : {
      "type" : "object",
      "xml" : {
        "name" : "XXSecurityZone",
        "namespace" : ""
      },
      "title" : "XXSecurityZone",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXSecurityZoneBase"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXSecurityZoneBase" : {
      "type" : "object",
      "xml" : {
        "name" : "XXSecurityZoneBase",
        "namespace" : ""
      },
      "title" : "XXSecurityZoneBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "jsonData" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXSecurityZoneRefGroup" : {
      "type" : "object",
      "xml" : {
        "name" : "XXSecurityZoneRefGroup",
        "namespace" : ""
      },
      "title" : "XXSecurityZoneRefGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "groupName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupName<\/b>",
"type" : "string"
            },
            "zoneId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>zoneId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXSecurityZoneRefResource" : {
      "type" : "object",
      "xml" : {
        "name" : "XXSecurityZoneRefResource",
        "namespace" : ""
      },
      "title" : "XXSecurityZoneRefResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "resourceDefId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceDefId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "resourceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceName<\/b>",
"type" : "string"
            },
            "zoneId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>zoneId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXSecurityZoneRefService" : {
      "type" : "object",
      "xml" : {
        "name" : "XXSecurityZoneRefService",
        "namespace" : ""
      },
      "title" : "XXSecurityZoneRefService",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "serviceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>serviceId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "serviceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>serviceName<\/b>",
"type" : "string"
            },
            "zoneId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>zoneId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXSecurityZoneRefTagService" : {
      "type" : "object",
      "xml" : {
        "name" : "XXSecurityZoneRefTagService",
        "namespace" : ""
      },
      "title" : "XXSecurityZoneRefTagService",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "tagServiceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "tagServiceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "zoneId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXSecurityZoneRefUser" : {
      "type" : "object",
      "xml" : {
        "name" : "XXSecurityZoneRefUser",
        "namespace" : ""
      },
      "title" : "XXSecurityZoneRefUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userName<\/b>",
"type" : "string"
            },
            "zoneId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>zoneId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXService" : {
      "type" : "object",
      "xml" : {
        "name" : "XXService",
        "namespace" : ""
      },
      "title" : "XXService",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXServiceBase"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXServiceBase" : {
      "type" : "object",
      "xml" : {
        "name" : "XXServiceBase",
        "namespace" : ""
      },
      "title" : "XXServiceBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "displayName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the gUID",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "policyUpdateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyUpdateTime<\/b>",
"type" : "string"
            },
            "policyVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyVersion<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "tagService" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tagService<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "tagUpdateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tagUpdateTime<\/b>",
"type" : "string"
            },
            "tagVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tagVersion<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>version<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXServiceConfigDef" : {
      "type" : "object",
      "xml" : {
        "name" : "XXServiceConfigDef",
        "namespace" : ""
      },
      "title" : "XXServiceConfigDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "defaultvalue" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defaultValue<\/b>",
"type" : "string"
            },
            "defid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "isMandatory" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isMandatory<\/b>",
"type" : "boolean"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>itemId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "order" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>order<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "rbKeyValidationMessage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the rbKeyValidationMessage",
"type" : "string"
            },
            "rbkeydescription" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyDecription<\/b>",
"type" : "string"
            },
            "rbkeylabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "subtype" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>subType<\/b>",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>type<\/b>",
"type" : "string"
            },
            "uiHint" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the uiHint",
"type" : "string"
            },
            "validationMessage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the validationMessage",
"type" : "string"
            },
            "validationRegEx" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the validationRegEx",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXServiceConfigMap" : {
      "type" : "object",
      "xml" : {
        "name" : "XXServiceConfigMap",
        "namespace" : ""
      },
      "title" : "XXServiceConfigMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "configkey" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>configKey<\/b>",
"type" : "string"
            },
            "configvalue" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>configValue<\/b>",
"type" : "string"
            },
            "serviceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>service<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXServiceDef" : {
      "type" : "object",
      "xml" : {
        "name" : "XXServiceDef",
        "namespace" : ""
      },
      "title" : "XXServiceDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXServiceDefBase"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXServiceDefBase" : {
      "type" : "object",
      "xml" : {
        "name" : "XXServiceDefBase",
        "namespace" : ""
      },
      "title" : "XXServiceDefBase",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "defOptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>defOptions<\/b>",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "displayName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>displayName<\/b>",
"type" : "string"
            },
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the gUID",
"type" : "string"
            },
            "implclassname" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>implClassName<\/b>",
"type" : "string"
            },
            "isEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEnabled<\/b>",
"type" : "boolean"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>label<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "rbkeydescription" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyDescription<\/b>",
"type" : "string"
            },
            "rbkeylabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKeyLabel<\/b>",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>version<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXServiceDefWithAssignedId" : {
      "type" : "object",
      "xml" : {
        "name" : "XXServiceDefWithAssignedId",
        "namespace" : ""
      },
      "title" : "XXServiceDefWithAssignedId",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXServiceDefBase"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXServiceResource" : {
      "type" : "object",
      "xml" : {
        "name" : "XXServiceResource",
        "namespace" : ""
      },
      "title" : "XXServiceResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the guid",
"type" : "string"
            },
            "isEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the isEnabled",
"type" : "boolean"
            },
            "resourceSignature" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the resourceSignature",
"type" : "string"
            },
            "serviceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the serviceId",
"type" : "integer",
"format" : "int64"
            },
            "serviceResourceElements" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tags" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the version",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXServiceResourceElement" : {
      "type" : "object",
      "xml" : {
        "name" : "XXServiceResourceElement",
        "namespace" : ""
      },
      "title" : "XXServiceResourceElement",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "isExcludes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the isExcludes",
"type" : "boolean"
            },
            "isRecursive" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the isRecursive",
"type" : "boolean"
            },
            "resDefId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the resDefId",
"type" : "integer",
"format" : "int64"
            },
            "resourceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the resourceId",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXServiceResourceElementValue" : {
      "type" : "object",
      "xml" : {
        "name" : "XXServiceResourceElementValue",
        "namespace" : ""
      },
      "title" : "XXServiceResourceElementValue",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "resElementId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the resElementId",
"type" : "integer",
"format" : "int64"
            },
            "sortOrder" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the sortOrder",
"type" : "integer",
"format" : "int32"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the value",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXServiceVersionInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "XXServiceVersionInfo",
        "namespace" : ""
      },
      "title" : "XXServiceVersionInfo",
      "allOf" : [
        {
          "properties" : {
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "policyUpdateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "roleUpdateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "roleVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "serviceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "tagUpdateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tagVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXServiceWithAssignedId" : {
      "type" : "object",
      "xml" : {
        "name" : "XXServiceWithAssignedId",
        "namespace" : ""
      },
      "title" : "XXServiceWithAssignedId",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXServiceBase"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXTag" : {
      "type" : "object",
      "xml" : {
        "name" : "XXTag",
        "namespace" : ""
      },
      "title" : "XXTag",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the guid",
"type" : "string"
            },
            "options" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "owner" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "tagAttrs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the type",
"type" : "integer",
"format" : "int64"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the version",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXTagAttribute" : {
      "type" : "object",
      "xml" : {
        "name" : "XXTagAttribute",
        "namespace" : ""
      },
      "title" : "XXTagAttribute",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the name",
"type" : "string"
            },
            "tagId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the tagId",
"type" : "integer",
"format" : "int64"
            },
            "value" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the value",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXTagAttributeDef" : {
      "type" : "object",
      "xml" : {
        "name" : "XXTagAttributeDef",
        "namespace" : ""
      },
      "title" : "XXTagAttributeDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the name",
"type" : "string"
            },
            "tagDefId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the tagDefId",
"type" : "integer",
"format" : "int64"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the type",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXTagChangeLog" : {
      "type" : "object",
      "xml" : {
        "name" : "XXTagChangeLog",
        "namespace" : ""
      },
      "title" : "XXTagChangeLog",
      "allOf" : [
        {
          "properties" : {
            "changeType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "createTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "serviceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "serviceResourceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "serviceTagsVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "tagId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXTagDef" : {
      "type" : "object",
      "xml" : {
        "name" : "XXTagDef",
        "namespace" : ""
      },
      "title" : "XXTagDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the guid",
"type" : "string"
            },
            "isEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the isEnabled",
"type" : "boolean"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the name",
"type" : "string"
            },
            "source" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the source",
"type" : "string"
            },
            "tagAttrDefs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the version",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXTagResourceMap" : {
      "type" : "object",
      "xml" : {
        "name" : "XXTagResourceMap",
        "namespace" : ""
      },
      "title" : "XXTagResourceMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the guid",
"type" : "string"
            },
            "resourceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the resourceId",
"type" : "integer",
"format" : "int64"
            },
            "tagId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the tagId",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXTrxLog" : {
      "type" : "object",
      "xml" : {
        "name" : "XXTrxLog",
        "namespace" : ""
      },
      "title" : "XXTrxLog",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "action" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "attributeName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>attributeName<\/b>",
"type" : "string"
            },
            "newValue" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>newValue<\/b>",
"type" : "string"
            },
            "objectClassType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectClassType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "objectId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "objectName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectName<\/b>",
"type" : "string"
            },
            "parentObjectClassType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectClassType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "parentObjectId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "parentObjectName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectName<\/b>",
"type" : "string"
            },
            "previousValue" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>previousValue<\/b>",
"type" : "string"
            },
            "requestId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestId<\/b>",
"type" : "string"
            },
            "sessionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionId<\/b>",
"type" : "string"
            },
            "sessionType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionType<\/b>",
"type" : "string"
            },
            "transactionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>transactionId<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXUgsyncAuditInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "XXUgsyncAuditInfo",
        "namespace" : ""
      },
      "title" : "XXUgsyncAuditInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "eventTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "noOfModifiedGroups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "noOfModifiedUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "noOfNewGroups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "noOfNewUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "sessionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncSourceInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "userName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXUser" : {
      "type" : "object",
      "xml" : {
        "name" : "XXUser",
        "namespace" : ""
      },
      "title" : "XXUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "credStoreId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>credStoreId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "isVisible" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isVisible<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "otherAttributes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "JSON String representation of additional store attributes if available,\n<code>null<\/code> otherwise.",
"type" : "string"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>status<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "syncSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "JSON String representation of sync source attribute if available,\n<code>null<\/code> otherwise.",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_XXUserPermission" : {
      "type" : "object",
      "xml" : {
        "name" : "XXUserPermission",
        "namespace" : ""
      },
      "title" : "XXUserPermission",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_XXDBBase"
        },
        {
          "properties" : {
            "isAllowed" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the isAllowed",
"type" : "integer",
"format" : "int32"
            },
            "moduleId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the moduleId",
"type" : "integer",
"format" : "int64"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the userId",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXXTrxLog" : {
      "type" : "object",
      "xml" : {
        "name" : "VXXTrxLog",
        "namespace" : ""
      },
      "title" : "VXXTrxLog",
      "allOf" : [
        {
          "properties" : {
            "action" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "addedByUserId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the addedByUserId",
"type" : "integer",
"format" : "int64"
            },
            "attributeName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>attributeName<\/b>",
"type" : "string"
            },
            "createTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the createTime",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the id",
"type" : "integer",
"format" : "int64"
            },
            "newValue" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>newValue<\/b>",
"type" : "string"
            },
            "objectClassType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the objectClassType",
"type" : "integer",
"format" : "int32"
            },
            "objectId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the objectId",
"type" : "integer",
"format" : "int64"
            },
            "objectName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the objectName",
"type" : "string"
            },
            "parentObjectClassType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectClassType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "parentObjectId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "parentObjectName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the parentObjectName",
"type" : "string"
            },
            "previousValue" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>previousValue<\/b>",
"type" : "string"
            },
            "requestId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestId<\/b>",
"type" : "string"
            },
            "sessionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionId<\/b>",
"type" : "string"
            },
            "sessionType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionType<\/b>",
"type" : "string"
            },
            "transactionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>transactionId<\/b>",
"type" : "string"
            },
            "updateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the updateTime",
"type" : "string"
            },
            "updatedByUserId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the updatedByUserId",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerTagForEval" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerTagForEval",
        "namespace" : ""
      },
      "title" : "rangerTagForEval",
      "allOf" : [
        {
          "properties" : {
            "attributes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "matchType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_matchType"
            },
            "options" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validityPeriods" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerValiditySchedule"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_auditFilter" : {
      "type" : "object",
      "xml" : {
        "name" : "auditFilter",
        "namespace" : ""
      },
      "title" : "auditFilter",
      "allOf" : [
        {
          "properties" : {
            "accessResult" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "accessTypes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "actions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "groups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "isAudited" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "resources" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "roles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "users" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_groupInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "groupInfo",
        "namespace" : ""
      },
      "title" : "groupInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerBaseModelObject"
        },
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "otherAttributes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerBaseModelObject" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerBaseModelObject",
        "namespace" : ""
      },
      "title" : "rangerBaseModelObject",
      "allOf" : [
        {
          "properties" : {
            "createTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "createdBy" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "isEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "updateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "updatedBy" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerMetrics" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerMetrics",
        "namespace" : ""
      },
      "title" : "rangerMetrics",
      "allOf" : [
        {
          "properties" : {
            "data" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerPluginInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerPluginInfo",
        "namespace" : ""
      },
      "title" : "rangerPluginInfo",
      "allOf" : [
        {
          "properties" : {
            "appType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "createTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "hostName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "info" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "ipAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceDisplayName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceTypeDisplayName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "updateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerPolicy" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerPolicy",
        "namespace" : ""
      },
      "title" : "rangerPolicy",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerBaseModelObject"
        },
        {
          "properties" : {
            "allowExceptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicyItem"
}
            },
            "conditions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicyItemCondition"
}
            },
            "dataMaskPolicyItems" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerDataMaskPolicyItem"
}
            },
            "denyExceptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicyItem"
}
            },
            "denyPolicyItems" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicyItem"
}
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "isAuditEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "isDenyAllElse" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "options" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "policyItems" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicyItem"
}
            },
            "policyLabels" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "policyPriority" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "policyType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "resourceSignature" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resources" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "rowFilterPolicyItems" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerRowFilterPolicyItem"
}
            },
            "service" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validitySchedules" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerValiditySchedule"
}
            },
            "zoneName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerDataMaskPolicyItem" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerDataMaskPolicyItem",
        "namespace" : ""
      },
      "title" : "rangerDataMaskPolicyItem",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerPolicyItem"
        },
        {
          "properties" : {
            "dataMaskInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_rangerPolicyItemDataMaskInfo"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerPolicyItem" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerPolicyItem",
        "namespace" : ""
      },
      "title" : "rangerPolicyItem",
      "allOf" : [
        {
          "properties" : {
            "accesses" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicyItemAccess"
}
            },
            "conditions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicyItemCondition"
}
            },
            "delegateAdmin" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "groups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "roles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "users" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerPolicyItemAccess" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerPolicyItemAccess",
        "namespace" : ""
      },
      "title" : "rangerPolicyItemAccess",
      "allOf" : [
        {
          "properties" : {
            "isAllowed" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerPolicyItemCondition" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerPolicyItemCondition",
        "namespace" : ""
      },
      "title" : "rangerPolicyItemCondition",
      "allOf" : [
        {
          "properties" : {
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "values" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerPolicyItemDataMaskInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerPolicyItemDataMaskInfo",
        "namespace" : ""
      },
      "title" : "rangerPolicyItemDataMaskInfo",
      "allOf" : [
        {
          "properties" : {
            "conditionExpr" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dataMaskType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "valueExpr" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerPolicyItemRowFilterInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerPolicyItemRowFilterInfo",
        "namespace" : ""
      },
      "title" : "rangerPolicyItemRowFilterInfo",
      "allOf" : [
        {
          "properties" : {
            "filterExpr" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerPolicyResource" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerPolicyResource",
        "namespace" : ""
      },
      "title" : "rangerPolicyResource",
      "allOf" : [
        {
          "properties" : {
            "isExcludes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "isRecursive" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "values" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerRowFilterPolicyItem" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerRowFilterPolicyItem",
        "namespace" : ""
      },
      "title" : "rangerRowFilterPolicyItem",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerPolicyItem"
        },
        {
          "properties" : {
            "rowFilterInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_rangerPolicyItemRowFilterInfo"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerPolicyDelta" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerPolicyDelta",
        "namespace" : ""
      },
      "title" : "rangerPolicyDelta",
      "allOf" : [
        {
          "properties" : {
            "changeType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "policiesVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "policy" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_rangerPolicy"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerRole" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerRole",
        "namespace" : ""
      },
      "title" : "rangerRole",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerBaseModelObject"
        },
        {
          "properties" : {
            "createdByUser" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_roleMember"
}
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "options" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "roles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_roleMember"
}
            },
            "users" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_roleMember"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_roleMember" : {
      "type" : "object",
      "xml" : {
        "name" : "roleMember",
        "namespace" : ""
      },
      "title" : "roleMember",
      "allOf" : [
        {
          "properties" : {
            "isAdmin" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerSecurityZone" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerSecurityZone",
        "namespace" : ""
      },
      "title" : "rangerSecurityZone",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerBaseModelObject"
        },
        {
          "properties" : {
            "adminUserGroups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "adminUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "auditUserGroups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "auditUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "services" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "tagServices" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerSecurityZoneService" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerSecurityZoneService",
        "namespace" : ""
      },
      "title" : "rangerSecurityZoneService",
      "allOf" : [
        {
          "properties" : {
            "resources" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerService" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerService",
        "namespace" : ""
      },
      "title" : "rangerService",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerBaseModelObject"
        },
        {
          "properties" : {
            "configs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "displayName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyUpdateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "tagService" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tagUpdateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tagVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerServiceDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerServiceDef",
        "namespace" : ""
      },
      "title" : "rangerServiceDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerBaseModelObject"
        },
        {
          "properties" : {
            "accessTypes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerAccessTypeDef"
}
            },
            "configs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerServiceConfigDef"
}
            },
            "contextEnrichers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerContextEnricherDef"
}
            },
            "dataMaskDef" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_rangerDataMaskDef"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "displayName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "enums" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerEnumDef"
}
            },
            "implClass" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "options" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "policyConditions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicyConditionDef"
}
            },
            "rbKeyDescription" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resources" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerResourceDef"
}
            },
            "rowFilterDef" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_rangerRowFilterDef"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerAccessTypeDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerAccessTypeDef",
        "namespace" : ""
      },
      "title" : "rangerAccessTypeDef",
      "allOf" : [
        {
          "properties" : {
            "impliedGrants" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerContextEnricherDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerContextEnricherDef",
        "namespace" : ""
      },
      "title" : "rangerContextEnricherDef",
      "allOf" : [
        {
          "properties" : {
            "enricher" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "enricherOptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerDataMaskDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerDataMaskDef",
        "namespace" : ""
      },
      "title" : "rangerDataMaskDef",
      "allOf" : [
        {
          "properties" : {
            "accessTypes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerAccessTypeDef"
}
            },
            "maskTypes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerDataMaskTypeDef"
}
            },
            "resources" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerResourceDef"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerDataMaskTypeDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerDataMaskTypeDef",
        "namespace" : ""
      },
      "title" : "rangerDataMaskTypeDef",
      "allOf" : [
        {
          "properties" : {
            "dataMaskOptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyDescription" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "transformer" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerEnumDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerEnumDef",
        "namespace" : ""
      },
      "title" : "rangerEnumDef",
      "allOf" : [
        {
          "properties" : {
            "defaultIndex" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "elements" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerEnumElementDef"
}
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerEnumElementDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerEnumElementDef",
        "namespace" : ""
      },
      "title" : "rangerEnumElementDef",
      "allOf" : [
        {
          "properties" : {
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerPolicyConditionDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerPolicyConditionDef",
        "namespace" : ""
      },
      "title" : "rangerPolicyConditionDef",
      "allOf" : [
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "evaluator" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "evaluatorOptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyDescription" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyValidationMessage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "uiHint" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validationMessage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validationRegEx" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerResourceDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerResourceDef",
        "namespace" : ""
      },
      "title" : "rangerResourceDef",
      "allOf" : [
        {
          "properties" : {
            "accessTypeRestrictions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "excludesSupported" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "isValidLeaf" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "level" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "lookupSupported" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "mandatory" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "matcher" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "matcherOptions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "parent" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyDescription" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyValidationMessage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "recursiveSupported" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "uiHint" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validationMessage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validationRegEx" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerRowFilterDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerRowFilterDef",
        "namespace" : ""
      },
      "title" : "rangerRowFilterDef",
      "allOf" : [
        {
          "properties" : {
            "accessTypes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerAccessTypeDef"
}
            },
            "resources" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerResourceDef"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerServiceConfigDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerServiceConfigDef",
        "namespace" : ""
      },
      "title" : "rangerServiceConfigDef",
      "allOf" : [
        {
          "properties" : {
            "defaultValue" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "itemId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "label" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "mandatory" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyDescription" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyLabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "rbKeyValidationMessage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "subType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "uiHint" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validationMessage" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validationRegEx" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerServiceResource" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerServiceResource",
        "namespace" : ""
      },
      "title" : "rangerServiceResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerBaseModelObject"
        },
        {
          "properties" : {
            "additionalInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "ownerUser" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resourceElements" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "resourceSignature" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerTag" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerTag",
        "namespace" : ""
      },
      "title" : "rangerTag",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerBaseModelObject"
        },
        {
          "properties" : {
            "attributes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "options" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "owner" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "validityPeriods" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerValiditySchedule"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerTagDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerTagDef",
        "namespace" : ""
      },
      "title" : "rangerTagDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerBaseModelObject"
        },
        {
          "properties" : {
            "attributeDefs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerTagAttributeDef"
}
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "source" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerTagAttributeDef" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerTagAttributeDef",
        "namespace" : ""
      },
      "title" : "rangerTagAttributeDef",
      "allOf" : [
        {
          "properties" : {
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "type" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerTagResourceMap" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerTagResourceMap",
        "namespace" : ""
      },
      "title" : "rangerTagResourceMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerBaseModelObject"
        },
        {
          "properties" : {
            "resourceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "tagId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerValidityRecurrence" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerValidityRecurrence",
        "namespace" : ""
      },
      "title" : "rangerValidityRecurrence",
      "allOf" : [
        {
          "properties" : {
            "interval" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_validityInterval"
            },
            "schedule" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_recurrenceSchedule"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_recurrenceSchedule" : {
      "type" : "object",
      "xml" : {
        "name" : "recurrenceSchedule",
        "namespace" : ""
      },
      "title" : "recurrenceSchedule",
      "allOf" : [
        {
          "properties" : {
            "dayOfMonth" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "dayOfWeek" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "hour" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "minute" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "month" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "year" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_validityInterval" : {
      "type" : "object",
      "xml" : {
        "name" : "validityInterval",
        "namespace" : ""
      },
      "title" : "validityInterval",
      "allOf" : [
        {
          "properties" : {
            "days" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "hours" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "minutes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerValiditySchedule" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerValiditySchedule",
        "namespace" : ""
      },
      "title" : "rangerValiditySchedule",
      "allOf" : [
        {
          "properties" : {
            "endTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "recurrences" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerValidityRecurrence"
}
            },
            "startTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "timeZone" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_serviceDeleteResponse" : {
      "type" : "object",
      "xml" : {
        "name" : "serviceDeleteResponse",
        "namespace" : ""
      },
      "title" : "serviceDeleteResponse",
      "allOf" : [
        {
          "properties" : {
            "errorMsg" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "isDeleted" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "serviceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "serviceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_userInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "userInfo",
        "namespace" : ""
      },
      "title" : "userInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerBaseModelObject"
        },
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "otherAttributes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerAccessResource" : {
      "type" : "object",
      "title" : "rangerAccessResource",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerAccessResourceImpl" : {
      "type" : "object",
      "title" : "rangerAccessResourceImpl",
      "allOf" : [
        {
          "properties" : {
            "ownerUser" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceDef" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_rangerServiceDef"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerAccessResourceReadOnly" : {
      "type" : "object",
      "title" : "rangerAccessResourceReadOnly",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerMutableResource" : {
      "type" : "object",
      "title" : "rangerMutableResource",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_accessResult" : {
      "type" : "object",
      "xml" : {
        "name" : "accessResult",
        "namespace" : ""
      },
      "title" : "accessResult",
      "allOf" : [
        {
          "properties" : {
            "isFinal" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "policy" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_rangerPolicy"
            },
            "result" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_dataMaskResult" : {
      "type" : "object",
      "xml" : {
        "name" : "dataMaskResult",
        "namespace" : ""
      },
      "title" : "dataMaskResult",
      "allOf" : [
        {
          "properties" : {
            "accessTypes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "groups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "isConditional" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "maskInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_rangerPolicyItemDataMaskInfo"
            },
            "roles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "users" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rowFilterResult" : {
      "type" : "object",
      "xml" : {
        "name" : "rowFilterResult",
        "namespace" : ""
      },
      "title" : "rowFilterResult",
      "allOf" : [
        {
          "properties" : {
            "accessTypes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "filterInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_rangerPolicyItemRowFilterInfo"
            },
            "groups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "isConditional" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "roles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "users" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerTagResource" : {
      "type" : "object",
      "title" : "rangerTagResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerAccessResourceImpl"
        },
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerAuditPolicy" : {
      "type" : "object",
      "title" : "rangerAuditPolicy",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerPolicy"
        },
        {
          "properties" : {
            "auditPolicyItems" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerAuditPolicyItem"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerAuditPolicyItem" : {
      "type" : "object",
      "title" : "rangerAuditPolicyItem",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerPolicyItem"
        },
        {
          "properties" : {
            "accessResult" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "accessTypes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "actions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "isAudited" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_matchType" : {
      "type" : "string",
      "title" : "matchType",
          "enum" : [
            "NONE",
            "SELF",
            "DESCENDANT",
            "ANCESTOR",
            "SELF_AND_ALL_DESCENDANTS"
          ],
      "description" : ""
    }
    ,
    "xml_ns0_resourceLookupContext" : {
      "type" : "object",
      "xml" : {
        "name" : "resourceLookupContext",
        "namespace" : ""
      },
      "title" : "resourceLookupContext",
      "allOf" : [
        {
          "properties" : {
            "resourceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resources" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "userInput" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_storedServiceResource" : {
      "type" : "object",
      "xml" : {
        "name" : "storedServiceResource",
        "namespace" : ""
      },
      "title" : "storedServiceResource",
      "allOf" : [
        {
          "properties" : {
            "additionalInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "ownerName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resourceElements" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_grantRevokeRequest" : {
      "type" : "object",
      "xml" : {
        "name" : "grantRevokeRequest",
        "namespace" : ""
      },
      "title" : "grantRevokeRequest",
      "allOf" : [
        {
          "properties" : {
            "accessTypes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "clientIPAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "clientType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "clusterName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "delegateAdmin" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "enableAudit" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "forwardedAddresses" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "grantor" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "grantorGroups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "groups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "isRecursive" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "ownerUser" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "remoteIPAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "replaceExistingPermissions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "requestData" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "roles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "sessionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "users" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "zoneName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_grantRevokeRoleRequest" : {
      "type" : "object",
      "xml" : {
        "name" : "grantRevokeRoleRequest",
        "namespace" : ""
      },
      "title" : "grantRevokeRoleRequest",
      "allOf" : [
        {
          "properties" : {
            "clientIPAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "clientType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "clusterName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "grantOption" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "grantor" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "grantorGroups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "groups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "requestData" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "roles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "sessionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "targetRoles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "users" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerRequestedResources" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerRequestedResources",
        "namespace" : ""
      },
      "title" : "rangerRequestedResources",
      "allOf" : [
        {
          "properties" : {
            "requestedResources" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerRoles" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerRoles",
        "namespace" : ""
      },
      "title" : "rangerRoles",
      "allOf" : [
        {
          "properties" : {
            "rangerRoles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerRole"
}
            },
            "roleUpdateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "roleVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "serviceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerUserStore" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerUserStore",
        "namespace" : ""
      },
      "title" : "rangerUserStore",
      "allOf" : [
        {
          "properties" : {
            "groupAttrMapping" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "groupCloudIdMapping" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "userAttrMapping" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "userCloudIdMapping" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "userGroupMapping" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "userStoreUpdateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "userStoreVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_servicePolicies" : {
      "type" : "object",
      "xml" : {
        "name" : "servicePolicies",
        "namespace" : ""
      },
      "title" : "servicePolicies",
      "allOf" : [
        {
          "properties" : {
            "auditMode" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicy"
}
            },
            "policyDeltas" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicyDelta"
}
            },
            "policyUpdateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "securityZones" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "serviceConfig" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "serviceDef" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_rangerServiceDef"
            },
            "serviceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "serviceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tagPolicies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_tagPolicies"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_securityZoneInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "securityZoneInfo",
        "namespace" : ""
      },
      "title" : "securityZoneInfo",
      "allOf" : [
        {
          "properties" : {
            "containsAssociatedTagService" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "policies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicy"
}
            },
            "policyDeltas" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicyDelta"
}
            },
            "resources" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "object"
}
            },
            "zoneName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_tagPolicies" : {
      "type" : "object",
      "xml" : {
        "name" : "tagPolicies",
        "namespace" : ""
      },
      "title" : "tagPolicies",
      "allOf" : [
        {
          "properties" : {
            "auditMode" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicy"
}
            },
            "policyUpdateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "serviceConfig" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "serviceDef" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_rangerServiceDef"
            },
            "serviceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "serviceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_serviceTags" : {
      "type" : "object",
      "xml" : {
        "name" : "serviceTags",
        "namespace" : ""
      },
      "title" : "serviceTags",
      "allOf" : [
        {
          "properties" : {
            "isDelta" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "op" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resourceToTagIds" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "serviceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "serviceResources" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerServiceResource"
}
            },
            "tagDefinitions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "tagUpdateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "tagVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "tags" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "tagsChangeExtent" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_tagsChangeExtent"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_tagsChangeExtent" : {
      "type" : "string",
      "title" : "tagsChangeExtent",
          "enum" : [
            "NONE",
            "TAGS",
            "SERVICE_RESOURCE",
            "ALL"
          ],
      "description" : ""
    }
    ,
    "xml_ns0_groupUserInfo" : {
      "type" : "object",
      "title" : "groupUserInfo",
      "allOf" : [
        {
          "properties" : {
            "addUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "delUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "groupName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_usersGroupRoleAssignments" : {
      "type" : "object",
      "xml" : {
        "name" : "usersGroupRoleAssignments",
        "namespace" : ""
      },
      "title" : "usersGroupRoleAssignments",
      "allOf" : [
        {
          "properties" : {
            "groupRoleAssignments" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "userRoleAssignments" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "users" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerExportPolicyList" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerExportPolicyList",
        "namespace" : ""
      },
      "title" : "rangerExportPolicyList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_rangerPolicyList"
        },
        {
          "properties" : {
            "metaDataInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerPluginInfoList" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerPluginInfoList",
        "namespace" : ""
      },
      "title" : "rangerPluginInfoList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "pluginInfoList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPluginInfo"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerPolicyList" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerPolicyList",
        "namespace" : ""
      },
      "title" : "rangerPolicyList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "policies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerPolicy"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerRoleList" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerRoleList",
        "namespace" : ""
      },
      "title" : "rangerRoleList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "roles" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerRole"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerSecurityZoneList" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerSecurityZoneList",
        "namespace" : ""
      },
      "title" : "rangerSecurityZoneList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "securityZones" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerSecurityZone"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerServiceDefList" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerServiceDefList",
        "namespace" : ""
      },
      "title" : "rangerServiceDefList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "serviceDefs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerServiceDef"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_rangerServiceList" : {
      "type" : "object",
      "xml" : {
        "name" : "rangerServiceList",
        "namespace" : ""
      },
      "title" : "rangerServiceList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "services" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_rangerService"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXAccessAudit" : {
      "type" : "object",
      "xml" : {
        "name" : "VXAccessAudit",
        "namespace" : ""
      },
      "title" : "VXAccessAudit",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "accessResult" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>accessResult<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "accessType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>accessType<\/b>",
"type" : "string"
            },
            "aclEnforcer" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>aclEnforcer<\/b>",
"type" : "string"
            },
            "action" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "agentHost" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "agentId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>agentId<\/b>",
"type" : "string"
            },
            "auditType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>auditType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "clientIP" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clientIP<\/b>",
"type" : "string"
            },
            "clientType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clientType<\/b>",
"type" : "string"
            },
            "clusterName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the clusterName",
"type" : "string"
            },
            "eventCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "eventDuration" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "eventId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "eventTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>eventTime<\/b>",
"type" : "string"
            },
            "policyId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "policyVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the policyVersion",
"type" : "integer",
"format" : "int64"
            },
            "repoDisplayName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repoDisplayName<\/b>",
"type" : "string"
            },
            "repoName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repoName<\/b>",
"type" : "string"
            },
            "repoType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repoType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "requestData" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestData<\/b>",
"type" : "string"
            },
            "requestUser" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestUser<\/b>",
"type" : "string"
            },
            "resourcePath" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourcePath<\/b>",
"type" : "string"
            },
            "resourceType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceType<\/b>",
"type" : "string"
            },
            "resultReason" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resultReason<\/b>",
"type" : "string"
            },
            "sequenceNumber" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "serviceType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the serviceType",
"type" : "string"
            },
            "serviceTypeDisplayName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the serviceTypeDisplayName",
"type" : "string"
            },
            "sessionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionId<\/b>",
"type" : "string"
            },
            "tags" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the tags",
"type" : "string"
            },
            "zoneName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the zoneName",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXAccessAuditList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXAccessAuditList",
        "namespace" : ""
      },
      "title" : "VXAccessAuditList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXAccessAudits" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXAccessAudit"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXAsset" : {
      "type" : "object",
      "xml" : {
        "name" : "VXAsset",
        "namespace" : ""
      },
      "title" : "VXAsset",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "activeStatus" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>activeStatus<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "assetType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "config" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>config<\/b>",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "supportNative" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>supportNative<\/b>",
"type" : "boolean"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXAssetList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXAssetList",
        "namespace" : ""
      },
      "title" : "VXAssetList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXAssets" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXAsset"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXAuditMap" : {
      "type" : "object",
      "xml" : {
        "name" : "VXAuditMap",
        "namespace" : ""
      },
      "title" : "VXAuditMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "auditType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>auditType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "resourceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXAuditMapList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXAuditMapList",
        "namespace" : ""
      },
      "title" : "VXAuditMapList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXAuditMaps" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXAuditMap"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXAuditRecord" : {
      "type" : "object",
      "xml" : {
        "name" : "VXAuditRecord",
        "namespace" : ""
      },
      "title" : "VXAuditRecord",
      "allOf" : [
        {
          "properties" : {
            "action" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "assetType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "date" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>date<\/b>",
"type" : "string"
            },
            "enforcer" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resource<\/b>",
"type" : "string"
            },
            "resourceType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "result" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>result<\/b>",
"type" : "string"
            },
            "user" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>user<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXAuditRecordList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXAuditRecordList",
        "namespace" : ""
      },
      "title" : "VXAuditRecordList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXAuditRecords" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXAuditRecord"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXAuthSession" : {
      "type" : "object",
      "xml" : {
        "name" : "VXAuthSession",
        "namespace" : ""
      },
      "title" : "VXAuthSession",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "authProvider" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authProvider<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "authStatus" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authStatus<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "authTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authTime<\/b>",
"type" : "string"
            },
            "authType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>authType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "cityName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>cityName<\/b>",
"type" : "string"
            },
            "countryName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>countryName<\/b>",
"type" : "string"
            },
            "deviceType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>deviceType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "emailAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>emailAddress<\/b>",
"type" : "string"
            },
            "familyScreenName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>familyScreenName<\/b>",
"type" : "string"
            },
            "firstName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>firstName<\/b>",
"type" : "string"
            },
            "isTestUser" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isTestUser<\/b>",
"type" : "boolean"
            },
            "lastName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lastName<\/b>",
"type" : "string"
            },
            "loginId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>loginId<\/b>",
"type" : "string"
            },
            "publicScreenName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>publicScreenName<\/b>",
"type" : "string"
            },
            "requestIP" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestIP<\/b>",
"type" : "string"
            },
            "requestUserAgent" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestUserAgent<\/b>",
"type" : "string"
            },
            "stateName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>stateName<\/b>",
"type" : "string"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXAuthSessionList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXAuthSessionList",
        "namespace" : ""
      },
      "title" : "VXAuthSessionList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXAuthSessions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXAuthSession"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXCredentialStore" : {
      "type" : "object",
      "xml" : {
        "name" : "VXCredentialStore",
        "namespace" : ""
      },
      "title" : "VXCredentialStore",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXCredentialStoreList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXCredentialStoreList",
        "namespace" : ""
      },
      "title" : "VXCredentialStoreList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXCredentialStores" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXCredentialStore"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXDataObject" : {
      "type" : "object",
      "xml" : {
        "name" : "VXDataObject",
        "namespace" : ""
      },
      "title" : "VXDataObject",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_viewBaseBean"
        },
        {
          "properties" : {
            "createDate" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>createDate<\/b>",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "owner" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>owner<\/b>",
"type" : "string"
            },
            "updateDate" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>updateDate<\/b>",
"type" : "string"
            },
            "updatedBy" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>updatedBy<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXFileSyncSourceInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "VXFileSyncSourceInfo",
        "namespace" : ""
      },
      "title" : "VXFileSyncSourceInfo",
      "allOf" : [
        {
          "properties" : {
            "fileName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "lastModified" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalGroupsDeleted" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalGroupsSynced" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalUsersDeleted" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalUsersSynced" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXGroup" : {
      "type" : "object",
      "xml" : {
        "name" : "VXGroup",
        "namespace" : ""
      },
      "title" : "VXGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "credStoreId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>credStoreId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "groupSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "groupType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "isVisible" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the isVisible",
"type" : "integer",
"format" : "int32"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "otherAttributes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "String - additional attributes.",
"type" : "string"
            },
            "syncSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "String sync source attribute",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXGroupGroup" : {
      "type" : "object",
      "xml" : {
        "name" : "VXGroupGroup",
        "namespace" : ""
      },
      "title" : "VXGroupGroup",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "parentGroupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentGroupId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXGroupGroupList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXGroupGroupList",
        "namespace" : ""
      },
      "title" : "VXGroupGroupList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXGroupGroups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXGroupGroup"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXGroupList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXGroupList",
        "namespace" : ""
      },
      "title" : "VXGroupList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXGroups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXGroup"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXGroupPermission" : {
      "type" : "object",
      "xml" : {
        "name" : "VXGroupPermission",
        "namespace" : ""
      },
      "title" : "VXGroupPermission",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the groupId",
"type" : "integer",
"format" : "int64"
            },
            "groupName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the groupName",
"type" : "string"
            },
            "isAllowed" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the isAllowed",
"type" : "integer",
"format" : "int32"
            },
            "moduleId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the moduleId",
"type" : "integer",
"format" : "int64"
            },
            "moduleName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXGroupPermissionList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXGroupPermissionList",
        "namespace" : ""
      },
      "title" : "VXGroupPermissionList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXGroupPermission" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXGroupPermission"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXGroupUser" : {
      "type" : "object",
      "xml" : {
        "name" : "VXGroupUser",
        "namespace" : ""
      },
      "title" : "VXGroupUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "parentGroupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentGroupId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXGroupUserInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "VXGroupUserInfo",
        "namespace" : ""
      },
      "title" : "VXGroupUserInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "xgroupInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_VXGroup"
            },
            "xuserInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXUser"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXGroupUserList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXGroupUserList",
        "namespace" : ""
      },
      "title" : "VXGroupUserList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXGroupUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXGroupUser"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXKmsKey" : {
      "type" : "object",
      "xml" : {
        "name" : "VXKmsKey",
        "namespace" : ""
      },
      "title" : "VXKmsKey",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "attributes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the attributes",
"type" : "object"
            },
            "cipher" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the cipher",
"type" : "string"
            },
            "created" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the created",
"type" : "integer",
"format" : "int64"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the description",
"type" : "string"
            },
            "length" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the length",
"type" : "integer",
"format" : "int32"
            },
            "material" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the material",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the name",
"type" : "string"
            },
            "versionName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the versionName",
"type" : "string"
            },
            "versions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the version",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXKmsKeyList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXKmsKeyList",
        "namespace" : ""
      },
      "title" : "VXKmsKeyList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXKeys" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXKmsKey"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXLdapSyncSourceInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "VXLdapSyncSourceInfo",
        "namespace" : ""
      },
      "title" : "VXLdapSyncSourceInfo",
      "allOf" : [
        {
          "properties" : {
            "groupHierarchyLevel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupSearchEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupSearchFilter" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "groupSearchFirstEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "ldapUrl" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalGroupsDeleted" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalGroupsSynced" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalUsersDeleted" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalUsersSynced" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "userSearchEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "userSearchFilter" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXLong" : {
      "type" : "object",
      "xml" : {
        "name" : "VXLong",
        "namespace" : ""
      },
      "title" : "VXLong",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_viewBaseBean"
        },
        {
          "properties" : {
            "value" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>value<\/b>",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXMessage" : {
      "type" : "object",
      "xml" : {
        "name" : "VXMessage",
        "namespace" : ""
      },
      "title" : "VXMessage",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_viewBaseBean"
        },
        {
          "properties" : {
            "fieldName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>fieldName<\/b>",
"type" : "string"
            },
            "message" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>message<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "objectId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "rbKey" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>rbKey<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXMetricAuditDetailsCount" : {
      "type" : "object",
      "xml" : {
        "name" : "VXMetricAuditDetailsCount",
        "namespace" : ""
      },
      "title" : "VXMetricAuditDetailsCount",
      "allOf" : [
        {
          "properties" : {
            "accessEventsCountTwoDays" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_VXMetricServiceCount"
            },
            "accessEventsCountWeek" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_VXMetricServiceCount"
            },
            "denialEventsCountTwoDays" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_VXMetricServiceCount"
            },
            "denialEventsCountWeek" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_VXMetricServiceCount"
            },
            "solrIndexCountTwoDays" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "solrIndexCountWeek" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXMetricPolicyCount" : {
      "type" : "object",
      "xml" : {
        "name" : "VXMetricPolicyCount",
        "namespace" : ""
      },
      "title" : "VXMetricPolicyCount",
      "allOf" : [
        {
          "properties" : {
            "policyCountList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "totalCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXMetricPolicyWithServiceNameCount" : {
      "type" : "object",
      "xml" : {
        "name" : "VXMetricPolicyWithServiceNameCount",
        "namespace" : ""
      },
      "title" : "VXMetricPolicyWithServiceNameCount",
      "allOf" : [
        {
          "properties" : {
            "policyCountList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "totalCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXMetricServiceCount" : {
      "type" : "object",
      "xml" : {
        "name" : "VXMetricServiceCount",
        "namespace" : ""
      },
      "title" : "VXMetricServiceCount",
      "allOf" : [
        {
          "properties" : {
            "serviceBasedCountList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "totalCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXMetricServiceNameCount" : {
      "type" : "object",
      "xml" : {
        "name" : "VXMetricServiceNameCount",
        "namespace" : ""
      },
      "title" : "VXMetricServiceNameCount",
      "allOf" : [
        {
          "properties" : {
            "serviceBasedCountList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "totalCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXMetricUserGroupCount" : {
      "type" : "object",
      "xml" : {
        "name" : "VXMetricUserGroupCount",
        "namespace" : ""
      },
      "title" : "VXMetricUserGroupCount",
      "allOf" : [
        {
          "properties" : {
            "groupCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "userCountOfKeyAdminRole" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "userCountOfKeyadminAuditorRole" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "userCountOfSysAdminAuditorRole" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "userCountOfSysAdminRole" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "userCountOfUserRole" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "userTotalCount" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXModuleDef" : {
      "type" : "object",
      "xml" : {
        "name" : "VXModuleDef",
        "namespace" : ""
      },
      "title" : "VXModuleDef",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "addedById" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the addedById",
"type" : "integer",
"format" : "int64"
            },
            "createTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the createTime",
"type" : "string"
            },
            "groupPermList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the groupPermList",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXGroupPermission"
}
            },
            "module" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the module",
"type" : "string"
            },
            "updateTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the updateTime",
"type" : "string"
            },
            "updatedById" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the updatedById",
"type" : "integer",
"format" : "int64"
            },
            "url" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the url",
"type" : "string"
            },
            "userPermList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the userPermList",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXUserPermission"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXModuleDefList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXModuleDefList",
        "namespace" : ""
      },
      "title" : "VXModuleDefList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXModuleDef" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXModuleDef"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPasswordChange" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPasswordChange",
        "namespace" : ""
      },
      "title" : "VXPasswordChange",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_viewBaseBean"
        },
        {
          "properties" : {
            "emailAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>emailAddress<\/b>",
"type" : "string"
            },
            "id" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>id<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "loginId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>loginId<\/b>",
"type" : "string"
            },
            "oldPassword" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>oldPassword<\/b>",
"type" : "string"
            },
            "resetCode" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resetCode<\/b>",
"type" : "string"
            },
            "updPassword" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>updPassword<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPermMap" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPermMap",
        "namespace" : ""
      },
      "title" : "VXPermMap",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "grantOrRevoke" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>grantOrRevoke<\/b>",
"type" : "boolean"
            },
            "groupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "groupName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupName<\/b>",
"type" : "string"
            },
            "ipAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "isRecursive" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isRecursive<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "isWildCard" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isWildCard<\/b>",
"type" : "boolean"
            },
            "permFor" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permFor<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "permGroup" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permGroup<\/b>",
"type" : "string"
            },
            "permType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "resourceId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "userName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userName<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPermMapList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPermMapList",
        "namespace" : ""
      },
      "title" : "VXPermMapList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXPermMaps" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXPermMap"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPermObj" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPermObj",
        "namespace" : ""
      },
      "title" : "VXPermObj",
      "allOf" : [
        {
          "properties" : {
            "groupList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the groupList",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "ipAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the ipAddress",
"type" : "string"
            },
            "permList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the permList",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "userList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the userList",
"type" : "array",
"items" : {
  "type" : "string"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPermObjList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPermObjList",
        "namespace" : ""
      },
      "title" : "VXPermObjList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXPermObjs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXPermObj"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPolicy" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPolicy",
        "namespace" : ""
      },
      "title" : "VXPolicy",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "columnFamilies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columnFamilies<\/b>",
"type" : "string"
            },
            "columnType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columnType<\/b>",
"type" : "string"
            },
            "columns" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columns<\/b>",
"type" : "string"
            },
            "databases" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>databases<\/b>",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "grantor" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "hiveServices" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>hiveservices<\/b>",
"type" : "string"
            },
            "isAuditEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isAuditEnabled<\/b>",
"type" : "boolean"
            },
            "isEnabled" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEnable<\/b>",
"type" : "boolean"
            },
            "isRecursive" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isRecursive<\/b>",
"type" : "boolean"
            },
            "permMapList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userPermList<\/b>",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXPermObj"
}
            },
            "policyLabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "policyName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>policyName<\/b>",
"type" : "string"
            },
            "replacePerm" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "boolean"
            },
            "repositoryName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repositoryName<\/b>",
"type" : "string"
            },
            "repositoryType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repositoryType<\/b>",
"type" : "string"
            },
            "resourceName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceName<\/b>",
"type" : "string"
            },
            "services" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>services<\/b>",
"type" : "string"
            },
            "tableType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tableType<\/b>",
"type" : "string"
            },
            "tables" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tables<\/b>",
"type" : "string"
            },
            "topologies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>topologies<\/b>",
"type" : "string"
            },
            "udfs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>udfs<\/b>",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>version<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPolicyExportAudit" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPolicyExportAudit",
        "namespace" : ""
      },
      "title" : "VXPolicyExportAudit",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "agentId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>agentId<\/b>",
"type" : "string"
            },
            "clientIP" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>clientIP<\/b>",
"type" : "string"
            },
            "clusterName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "exportedJson" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>exportedJson<\/b>",
"type" : "string"
            },
            "httpRetCode" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>httpRetCode<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "lastUpdated" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lastUpdated<\/b>",
"type" : "string"
            },
            "policyVersion" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "repositoryDisplayName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repositoryDisplayName<\/b>",
"type" : "string"
            },
            "repositoryName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repositoryName<\/b>",
"type" : "string"
            },
            "requestedEpoch" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestedEpoch<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "syncStatus" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "zoneName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPolicyExportAuditList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPolicyExportAuditList",
        "namespace" : ""
      },
      "title" : "VXPolicyExportAuditList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXPolicyExportAudits" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXPolicyExportAudit"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPolicyLabel" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPolicyLabel",
        "namespace" : ""
      },
      "title" : "VXPolicyLabel",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "policyLabel" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPolicyLabelList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPolicyLabelList",
        "namespace" : ""
      },
      "title" : "VXPolicyLabelList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vxPolicyLabels" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXPolicyLabel"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPolicyList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPolicyList",
        "namespace" : ""
      },
      "title" : "VXPolicyList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXPolicies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXPolicy"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPortalUser" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPortalUser",
        "namespace" : ""
      },
      "title" : "VXPortalUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "configProperties" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "emailAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>emailAddress<\/b>",
"type" : "string"
            },
            "firstName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>firstName<\/b>",
"type" : "string"
            },
            "groupIdList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "integer"
}
            },
            "groupPermissions" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXGroupPermission"
}
            },
            "lastName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lastName<\/b>",
"type" : "string"
            },
            "loginId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>loginId<\/b>",
"type" : "string"
            },
            "notes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>notes<\/b>",
"type" : "string"
            },
            "otherAttributes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "String - additional attributes.",
"type" : "string"
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>password<\/b>",
"type" : "string"
            },
            "publicScreenName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>publicScreenName<\/b>",
"type" : "string"
            },
            "status" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>status<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "syncSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "String - sync Source attribute.",
"type" : "string"
            },
            "userPermList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXUserPermission"
}
            },
            "userRoleList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userRoleList<\/b>",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "userSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userSource<\/b>",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXPortalUserList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXPortalUserList",
        "namespace" : ""
      },
      "title" : "VXPortalUserList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXPortalUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXPortalUser"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXRepository" : {
      "type" : "object",
      "xml" : {
        "name" : "VXRepository",
        "namespace" : ""
      },
      "title" : "VXRepository",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "config" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>config<\/b>",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "isActive" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isActive<\/b>",
"type" : "boolean"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "repositoryType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>repositoryType<\/b>",
"type" : "string"
            },
            "version" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>version<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXRepositoryList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXRepositoryList",
        "namespace" : ""
      },
      "title" : "VXRepositoryList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXRepositories" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXRepository"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXResource" : {
      "type" : "object",
      "xml" : {
        "name" : "VXResource",
        "namespace" : ""
      },
      "title" : "VXResource",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "assetId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "assetName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetName<\/b>",
"type" : "string"
            },
            "assetType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>assetType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "auditList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>auditList<\/b>",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXAuditMap"
}
            },
            "checkParentPermission" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>checkParentPermission<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "columnFamilies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columnFamilies<\/b>",
"type" : "string"
            },
            "columnType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columnType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "columns" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>columns<\/b>",
"type" : "string"
            },
            "databases" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>databases<\/b>",
"type" : "string"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "guid" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>guid<\/b>",
"type" : "string"
            },
            "hiveServices" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>hiveservices<\/b>",
"type" : "string"
            },
            "isEncrypt" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isEncrypt<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "isRecursive" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>isRecursive<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "parentId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "parentPath" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentPath<\/b>",
"type" : "string"
            },
            "permMapList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>permMapList<\/b>",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXPermMap"
}
            },
            "policyName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "resourceGroup" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceGroup<\/b>",
"type" : "string"
            },
            "resourceStatus" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceStatus<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "resourceType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>resourceType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "services" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>services<\/b>",
"type" : "string"
            },
            "tableType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tableType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "tables" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>tables<\/b>",
"type" : "string"
            },
            "topologies" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>topologies<\/b>",
"type" : "string"
            },
            "udfs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>udfs<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXResourceList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXResourceList",
        "namespace" : ""
      },
      "title" : "VXResourceList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXResources" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXResource"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXResponse" : {
      "type" : "object",
      "xml" : {
        "name" : "VXResponse",
        "namespace" : ""
      },
      "title" : "VXResponse",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_viewBaseBean"
        },
        {
          "properties" : {
            "messageList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>messageList<\/b>",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXMessage"
}
            },
            "msgDesc" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>msgDesc<\/b>",
"type" : "string"
            },
            "statusCode" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>statusCode<\/b>",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXString" : {
      "type" : "object",
      "xml" : {
        "name" : "VXString",
        "namespace" : ""
      },
      "title" : "VXString",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_viewBaseBean"
        },
        {
          "properties" : {
            "value" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>value<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXStringList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXStringList",
        "namespace" : ""
      },
      "title" : "VXStringList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXStrings" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXString"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXTrxLog" : {
      "type" : "object",
      "xml" : {
        "name" : "VXTrxLog",
        "namespace" : ""
      },
      "title" : "VXTrxLog",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "action" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>action<\/b>",
"type" : "string"
            },
            "attributeName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>attributeName<\/b>",
"type" : "string"
            },
            "newValue" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>newValue<\/b>",
"type" : "string"
            },
            "objectClassType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectClassType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "objectId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "objectName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>objectName<\/b>",
"type" : "string"
            },
            "parentObjectClassType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectClassType<\/b>",
"type" : "integer",
"format" : "int32"
            },
            "parentObjectId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "parentObjectName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>parentObjectName<\/b>",
"type" : "string"
            },
            "previousValue" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>previousValue<\/b>",
"type" : "string"
            },
            "requestId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>requestId<\/b>",
"type" : "string"
            },
            "sessionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionId<\/b>",
"type" : "string"
            },
            "sessionType" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>sessionType<\/b>",
"type" : "string"
            },
            "transactionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>transactionId<\/b>",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXTrxLogList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXTrxLogList",
        "namespace" : ""
      },
      "title" : "VXTrxLogList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXTrxLogs" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXTrxLog"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXUgsyncAuditInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "VXUgsyncAuditInfo",
        "namespace" : ""
      },
      "title" : "VXUgsyncAuditInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "eventTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "fileSyncSourceInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_VXFileSyncSourceInfo"
            },
            "ldapSyncSourceInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_VXLdapSyncSourceInfo"
            },
            "noOfModifiedGroups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "noOfModifiedUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "noOfNewGroups" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "noOfNewUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "sessionId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncSourceInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "object"
            },
            "unixSyncSourceInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_VXUnixSyncSourceInfo"
            },
            "userName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXUgsyncAuditInfoList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXUgsyncAuditInfoList",
        "namespace" : ""
      },
      "title" : "VXUgsyncAuditInfoList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vxUgsyncAuditInfoList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXUgsyncAuditInfo"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXUnixSyncSourceInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "VXUnixSyncSourceInfo",
        "namespace" : ""
      },
      "title" : "VXUnixSyncSourceInfo",
      "allOf" : [
        {
          "properties" : {
            "fileName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "lastModified" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "minGroupId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "minUserId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "syncTime" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "totalGroupsDeleted" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalGroupsSynced" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalUsersDeleted" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "totalUsersSynced" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int64"
            },
            "unixBackend" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXUser" : {
      "type" : "object",
      "xml" : {
        "name" : "VXUser",
        "namespace" : ""
      },
      "title" : "VXUser",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "credStoreId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>credStoreId<\/b>",
"type" : "integer",
"format" : "int64"
            },
            "description" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>description<\/b>",
"type" : "string"
            },
            "emailAddress" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>emailAddress<\/b>",
"type" : "string"
            },
            "firstName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>firstName<\/b>",
"type" : "string"
            },
            "groupIdList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>groupIdList<\/b>",
"type" : "array",
"items" : {
  "type" : "integer"
}
            },
            "groupNameList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "isVisible" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "lastName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>lastName<\/b>",
"type" : "string"
            },
            "name" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>name<\/b>",
"type" : "string"
            },
            "otherAttributes" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "String - additional attributes.",
"type" : "string"
            },
            "password" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>password<\/b>",
"type" : "string"
            },
            "syncSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "String - sync Source.",
"type" : "string"
            },
            "userRoleList" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "Returns the value for the member attribute <b>userRoleList<\/b>",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "userSource" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "integer",
"format" : "int32"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXUserGroupInfo" : {
      "type" : "object",
      "xml" : {
        "name" : "VXUserGroupInfo",
        "namespace" : ""
      },
      "title" : "VXUserGroupInfo",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "xgroupInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXGroup"
}
            },
            "xuserInfo" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"$ref" : "#/definitions/xml_ns0_VXUser"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXUserList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXUserList",
        "namespace" : ""
      },
      "title" : "VXUserList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXUsers" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXUser"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXUserPermission" : {
      "type" : "object",
      "xml" : {
        "name" : "VXUserPermission",
        "namespace" : ""
      },
      "title" : "VXUserPermission",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VXDataObject"
        },
        {
          "properties" : {
            "isAllowed" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the isAllowed",
"type" : "integer",
"format" : "int32"
            },
            "loginId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "moduleId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the moduleId",
"type" : "integer",
"format" : "int64"
            },
            "moduleName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "string"
            },
            "userId" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the userId",
"type" : "integer",
"format" : "int64"
            },
            "userName" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "the userName",
"type" : "string"
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_VXUserPermissionList" : {
      "type" : "object",
      "xml" : {
        "name" : "VXUserPermissionList",
        "namespace" : ""
      },
      "title" : "VXUserPermissionList",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_VList"
        },
        {
          "properties" : {
            "vXUserPermission" : {
              "xml" : {
                "namespace" : ""
              },
            "readOnly" : false,
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/xml_ns0_VXUserPermission"
}
            }
          }
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_httpEntity" : {
      "type" : "object",
      "title" : "httpEntity",
      "allOf" : [
        {
        }
      ],
      "description" : ""
    }
    ,
    "xml_ns0_responseEntity" : {
      "type" : "object",
      "title" : "responseEntity",
      "allOf" : [
        {
          "$ref" : "#/definitions/xml_ns0_httpEntity"
        },
        {
        }
      ],
      "description" : ""
    }
  },
  "paths": {
    "\/assets/accessAudit" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "getAccessLogs",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXAccessAuditList"
            },
            "example" : {
  "vXAccessAudits" : [ {
    "auditType" : 12345,
    "accessResult" : 12345,
    "accessType" : "...",
    "aclEnforcer" : "...",
    "agentId" : "...",
    "clientIP" : "...",
    "clientType" : "...",
    "policyId" : 12345,
    "repoName" : "...",
    "repoDisplayName" : "...",
    "repoType" : 12345,
    "serviceType" : "...",
    "serviceTypeDisplayName" : "...",
    "resultReason" : "...",
    "sessionId" : "...",
    "eventTime" : 12345,
    "requestUser" : "...",
    "action" : "...",
    "requestData" : "...",
    "resourcePath" : "...",
    "resourceType" : "...",
    "sequenceNumber" : 12345,
    "eventCount" : 12345,
    "eventDuration" : 12345,
    "tags" : "...",
    "clusterName" : "...",
    "myClassType" : 12345,
    "zoneName" : "...",
    "agentHost" : "...",
    "policyVersion" : 12345,
    "eventId" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "auditType" : 12345,
    "accessResult" : 12345,
    "accessType" : "...",
    "aclEnforcer" : "...",
    "agentId" : "...",
    "clientIP" : "...",
    "clientType" : "...",
    "policyId" : 12345,
    "repoName" : "...",
    "repoDisplayName" : "...",
    "repoType" : 12345,
    "serviceType" : "...",
    "serviceTypeDisplayName" : "...",
    "resultReason" : "...",
    "sessionId" : "...",
    "eventTime" : 12345,
    "requestUser" : "...",
    "action" : "...",
    "requestData" : "...",
    "resourcePath" : "...",
    "resourceType" : "...",
    "sequenceNumber" : 12345,
    "eventCount" : 12345,
    "eventDuration" : 12345,
    "tags" : "...",
    "clusterName" : "...",
    "myClassType" : 12345,
    "zoneName" : "...",
    "agentHost" : "...",
    "policyVersion" : 12345,
    "eventId" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/assets" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "searchXAssets",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXAssetList"
            },
            "example" : {
  "vXAssets" : [ {
    "name" : "...",
    "description" : "...",
    "activeStatus" : 12345,
    "assetType" : 12345,
    "config" : "...",
    "supportNative" : true,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "activeStatus" : 12345,
    "assetType" : 12345,
    "config" : "...",
    "supportNative" : true,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "createXAsset",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXAsset"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXAsset"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "activeStatus" : 12345,
  "assetType" : 12345,
  "config" : "...",
  "supportNative" : true,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/assets/count" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "countXAssets",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/assets/testConfig" : {
      "post" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "configTest",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXAsset"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXResponse"
            },
            "example" : {
  "statusCode" : 12345,
  "msgDesc" : "...",
  "messageList" : [ {
    "name" : "...",
    "rbKey" : "...",
    "message" : "...",
    "objectId" : 12345,
    "fieldName" : "...",
    "myClassType" : 12345
  }, {
    "name" : "...",
    "rbKey" : "...",
    "message" : "...",
    "objectId" : 12345,
    "fieldName" : "...",
    "myClassType" : 12345
  } ],
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/assets/{id}" : {
      "delete" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "deleteXAsset",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "getXAsset",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXAsset"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "activeStatus" : 12345,
  "assetType" : 12345,
  "config" : "...",
  "supportNative" : true,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "updateXAsset",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXAsset"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXAsset"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "activeStatus" : 12345,
  "assetType" : 12345,
  "config" : "...",
  "supportNative" : true,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/credstores" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "searchXCredentialStores",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXCredentialStoreList"
            },
            "example" : {
  "vXCredentialStores" : [ {
    "name" : "...",
    "description" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "createXCredentialStore",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXCredentialStore"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXCredentialStore"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "updateXCredentialStore",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXCredentialStore"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXCredentialStore"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/credstores/count" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "countXCredentialStores",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/credstores/{id}" : {
      "delete" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "deleteXCredentialStore",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "getXCredentialStore",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXCredentialStore"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/exportAudit" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "searchXPolicyExportAudits",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPolicyExportAuditList"
            },
            "example" : {
  "vXPolicyExportAudits" : [ {
    "clientIP" : "...",
    "agentId" : "...",
    "requestedEpoch" : 12345,
    "lastUpdated" : 12345,
    "repositoryName" : "...",
    "repositoryDisplayName" : "...",
    "exportedJson" : "...",
    "httpRetCode" : 12345,
    "syncStatus" : "...",
    "clusterName" : "...",
    "zoneName" : "...",
    "policyVersion" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "clientIP" : "...",
    "agentId" : "...",
    "requestedEpoch" : 12345,
    "lastUpdated" : 12345,
    "repositoryName" : "...",
    "repositoryDisplayName" : "...",
    "exportedJson" : "...",
    "httpRetCode" : 12345,
    "syncStatus" : "...",
    "clusterName" : "...",
    "zoneName" : "...",
    "policyVersion" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/policyList/{repository}" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "getResourceJSON",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "repository",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/report" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "getReportLogs",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXTrxLogList"
            },
            "example" : {
  "vXTrxLogs" : [ {
    "objectClassType" : 12345,
    "objectId" : 12345,
    "parentObjectId" : 12345,
    "parentObjectClassType" : 12345,
    "parentObjectName" : "...",
    "objectName" : "...",
    "attributeName" : "...",
    "previousValue" : "...",
    "newValue" : "...",
    "transactionId" : "...",
    "action" : "...",
    "sessionId" : "...",
    "requestId" : "...",
    "sessionType" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  }, {
    "objectClassType" : 12345,
    "objectId" : 12345,
    "parentObjectId" : 12345,
    "parentObjectClassType" : 12345,
    "parentObjectName" : "...",
    "objectName" : "...",
    "attributeName" : "...",
    "previousValue" : "...",
    "newValue" : "...",
    "transactionId" : "...",
    "action" : "...",
    "sessionId" : "...",
    "requestId" : "...",
    "sessionType" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/report/{transactionId}" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "getTransactionReport",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "transactionId",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXTrxLogList"
            },
            "example" : {
  "vXTrxLogs" : [ {
    "objectClassType" : 12345,
    "objectId" : 12345,
    "parentObjectId" : 12345,
    "parentObjectClassType" : 12345,
    "parentObjectName" : "...",
    "objectName" : "...",
    "attributeName" : "...",
    "previousValue" : "...",
    "newValue" : "...",
    "transactionId" : "...",
    "action" : "...",
    "sessionId" : "...",
    "requestId" : "...",
    "sessionType" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  }, {
    "objectClassType" : 12345,
    "objectId" : 12345,
    "parentObjectId" : 12345,
    "parentObjectClassType" : 12345,
    "parentObjectName" : "...",
    "objectName" : "...",
    "attributeName" : "...",
    "previousValue" : "...",
    "newValue" : "...",
    "transactionId" : "...",
    "action" : "...",
    "sessionId" : "...",
    "requestId" : "...",
    "sessionType" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/resource/{id}" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "getXResourceFile",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "file"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/resources" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "searchXResources",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXResourceList"
            },
            "example" : {
  "vXResources" : [ {
    "name" : "...",
    "policyName" : "...",
    "description" : "...",
    "resourceType" : 12345,
    "assetId" : 12345,
    "parentId" : 12345,
    "parentPath" : "...",
    "isEncrypt" : 12345,
    "permMapList" : [ {
      "permGroup" : "...",
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "permFor" : 12345,
      "permType" : 12345,
      "grantOrRevoke" : true,
      "groupName" : "...",
      "userName" : "...",
      "isRecursive" : 12345,
      "isWildCard" : true,
      "ipAddress" : "...",
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "permGroup" : "...",
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "permFor" : 12345,
      "permType" : 12345,
      "grantOrRevoke" : true,
      "groupName" : "...",
      "userName" : "...",
      "isRecursive" : 12345,
      "isWildCard" : true,
      "ipAddress" : "...",
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "auditList" : [ {
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "auditType" : 12345,
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "auditType" : 12345,
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "isRecursive" : 12345,
    "resourceGroup" : "...",
    "databases" : "...",
    "tables" : "...",
    "columnFamilies" : "...",
    "columns" : "...",
    "udfs" : "...",
    "assetName" : "...",
    "assetType" : 12345,
    "resourceStatus" : 12345,
    "tableType" : 12345,
    "columnType" : 12345,
    "topologies" : "...",
    "services" : "...",
    "hiveServices" : "...",
    "checkParentPermission" : 12345,
    "myClassType" : 12345,
    "guid" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "policyName" : "...",
    "description" : "...",
    "resourceType" : 12345,
    "assetId" : 12345,
    "parentId" : 12345,
    "parentPath" : "...",
    "isEncrypt" : 12345,
    "permMapList" : [ {
      "permGroup" : "...",
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "permFor" : 12345,
      "permType" : 12345,
      "grantOrRevoke" : true,
      "groupName" : "...",
      "userName" : "...",
      "isRecursive" : 12345,
      "isWildCard" : true,
      "ipAddress" : "...",
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "permGroup" : "...",
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "permFor" : 12345,
      "permType" : 12345,
      "grantOrRevoke" : true,
      "groupName" : "...",
      "userName" : "...",
      "isRecursive" : 12345,
      "isWildCard" : true,
      "ipAddress" : "...",
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "auditList" : [ {
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "auditType" : 12345,
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "resourceId" : 12345,
      "groupId" : 12345,
      "userId" : 12345,
      "auditType" : 12345,
      "myClassType" : 12345,
      "id" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "isRecursive" : 12345,
    "resourceGroup" : "...",
    "databases" : "...",
    "tables" : "...",
    "columnFamilies" : "...",
    "columns" : "...",
    "udfs" : "...",
    "assetName" : "...",
    "assetType" : 12345,
    "resourceStatus" : 12345,
    "tableType" : 12345,
    "columnType" : 12345,
    "topologies" : "...",
    "services" : "...",
    "hiveServices" : "...",
    "checkParentPermission" : 12345,
    "myClassType" : 12345,
    "guid" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "createXResource",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXResource"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXResource"
            },
            "example" : {
  "name" : "...",
  "policyName" : "...",
  "description" : "...",
  "resourceType" : 12345,
  "assetId" : 12345,
  "parentId" : 12345,
  "parentPath" : "...",
  "isEncrypt" : 12345,
  "permMapList" : [ {
    "permGroup" : "...",
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "permFor" : 12345,
    "permType" : 12345,
    "grantOrRevoke" : true,
    "groupName" : "...",
    "userName" : "...",
    "isRecursive" : 12345,
    "isWildCard" : true,
    "ipAddress" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "permGroup" : "...",
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "permFor" : 12345,
    "permType" : 12345,
    "grantOrRevoke" : true,
    "groupName" : "...",
    "userName" : "...",
    "isRecursive" : 12345,
    "isWildCard" : true,
    "ipAddress" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "auditList" : [ {
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "auditType" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "auditType" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "isRecursive" : 12345,
  "resourceGroup" : "...",
  "databases" : "...",
  "tables" : "...",
  "columnFamilies" : "...",
  "columns" : "...",
  "udfs" : "...",
  "assetName" : "...",
  "assetType" : 12345,
  "resourceStatus" : 12345,
  "tableType" : 12345,
  "columnType" : 12345,
  "topologies" : "...",
  "services" : "...",
  "hiveServices" : "...",
  "checkParentPermission" : 12345,
  "myClassType" : 12345,
  "guid" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/resources/count" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "countXResources",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/resources/grant" : {
      "post" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "grantPermission",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXPolicy"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPolicy"
            },
            "example" : {
  "policyName" : "...",
  "resourceName" : "...",
  "description" : "...",
  "repositoryName" : "...",
  "repositoryType" : "...",
  "permMapList" : [ {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  }, {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  } ],
  "tables" : "...",
  "columnFamilies" : "...",
  "columns" : "...",
  "databases" : "...",
  "udfs" : "...",
  "tableType" : "...",
  "columnType" : "...",
  "topologies" : "...",
  "services" : "...",
  "hiveServices" : "...",
  "isEnabled" : true,
  "isRecursive" : true,
  "isAuditEnabled" : true,
  "version" : "...",
  "grantor" : "...",
  "replacePerm" : true,
  "policyLabel" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/resources/revoke" : {
      "post" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "revokePermission",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXPolicy"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPolicy"
            },
            "example" : {
  "policyName" : "...",
  "resourceName" : "...",
  "description" : "...",
  "repositoryName" : "...",
  "repositoryType" : "...",
  "permMapList" : [ {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  }, {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  } ],
  "tables" : "...",
  "columnFamilies" : "...",
  "columns" : "...",
  "databases" : "...",
  "udfs" : "...",
  "tableType" : "...",
  "columnType" : "...",
  "topologies" : "...",
  "services" : "...",
  "hiveServices" : "...",
  "isEnabled" : true,
  "isRecursive" : true,
  "isAuditEnabled" : true,
  "version" : "...",
  "grantor" : "...",
  "replacePerm" : true,
  "policyLabel" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/resources/{id}" : {
      "delete" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "deleteXResource",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "getXResource",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXResource"
            },
            "example" : {
  "name" : "...",
  "policyName" : "...",
  "description" : "...",
  "resourceType" : 12345,
  "assetId" : 12345,
  "parentId" : 12345,
  "parentPath" : "...",
  "isEncrypt" : 12345,
  "permMapList" : [ {
    "permGroup" : "...",
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "permFor" : 12345,
    "permType" : 12345,
    "grantOrRevoke" : true,
    "groupName" : "...",
    "userName" : "...",
    "isRecursive" : 12345,
    "isWildCard" : true,
    "ipAddress" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "permGroup" : "...",
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "permFor" : 12345,
    "permType" : 12345,
    "grantOrRevoke" : true,
    "groupName" : "...",
    "userName" : "...",
    "isRecursive" : 12345,
    "isWildCard" : true,
    "ipAddress" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "auditList" : [ {
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "auditType" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "auditType" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "isRecursive" : 12345,
  "resourceGroup" : "...",
  "databases" : "...",
  "tables" : "...",
  "columnFamilies" : "...",
  "columns" : "...",
  "udfs" : "...",
  "assetName" : "...",
  "assetType" : 12345,
  "resourceStatus" : 12345,
  "tableType" : 12345,
  "columnType" : 12345,
  "topologies" : "...",
  "services" : "...",
  "hiveServices" : "...",
  "checkParentPermission" : 12345,
  "myClassType" : 12345,
  "guid" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "updateXResource",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXResource"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXResource"
            },
            "example" : {
  "name" : "...",
  "policyName" : "...",
  "description" : "...",
  "resourceType" : 12345,
  "assetId" : 12345,
  "parentId" : 12345,
  "parentPath" : "...",
  "isEncrypt" : 12345,
  "permMapList" : [ {
    "permGroup" : "...",
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "permFor" : 12345,
    "permType" : 12345,
    "grantOrRevoke" : true,
    "groupName" : "...",
    "userName" : "...",
    "isRecursive" : 12345,
    "isWildCard" : true,
    "ipAddress" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "permGroup" : "...",
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "permFor" : 12345,
    "permType" : 12345,
    "grantOrRevoke" : true,
    "groupName" : "...",
    "userName" : "...",
    "isRecursive" : 12345,
    "isWildCard" : true,
    "ipAddress" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "auditList" : [ {
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "auditType" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "auditType" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "isRecursive" : 12345,
  "resourceGroup" : "...",
  "databases" : "...",
  "tables" : "...",
  "columnFamilies" : "...",
  "columns" : "...",
  "udfs" : "...",
  "assetName" : "...",
  "assetType" : 12345,
  "resourceStatus" : 12345,
  "tableType" : 12345,
  "columnType" : 12345,
  "topologies" : "...",
  "services" : "...",
  "hiveServices" : "...",
  "checkParentPermission" : 12345,
  "myClassType" : 12345,
  "guid" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/ugsyncAudits" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "getUgsyncAudits",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUgsyncAuditInfoList"
            },
            "example" : {
  "vxUgsyncAuditInfoList" : [ {
    "eventTime" : 12345,
    "userName" : "...",
    "noOfNewUsers" : 12345,
    "noOfModifiedUsers" : 12345,
    "noOfNewGroups" : 12345,
    "noOfModifiedGroups" : 12345,
    "syncSource" : "...",
    "ldapSyncSourceInfo" : {
      "ldapUrl" : "...",
      "userSearchFilter" : "...",
      "groupSearchFilter" : "...",
      "groupHierarchyLevel" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "groupSearchFirstEnabled" : "...",
      "groupSearchEnabled" : "...",
      "userSearchEnabled" : "...",
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "fileSyncSourceInfo" : {
      "fileName" : "...",
      "syncTime" : "...",
      "lastModified" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "unixSyncSourceInfo" : {
      "fileName" : "...",
      "syncTime" : "...",
      "lastModified" : "...",
      "unixBackend" : "...",
      "minUserId" : "...",
      "minGroupId" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "sessionId" : "...",
    "syncSourceInfo" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  }, {
    "eventTime" : 12345,
    "userName" : "...",
    "noOfNewUsers" : 12345,
    "noOfModifiedUsers" : 12345,
    "noOfNewGroups" : 12345,
    "noOfModifiedGroups" : 12345,
    "syncSource" : "...",
    "ldapSyncSourceInfo" : {
      "ldapUrl" : "...",
      "userSearchFilter" : "...",
      "groupSearchFilter" : "...",
      "groupHierarchyLevel" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "groupSearchFirstEnabled" : "...",
      "groupSearchEnabled" : "...",
      "userSearchEnabled" : "...",
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "fileSyncSourceInfo" : {
      "fileName" : "...",
      "syncTime" : "...",
      "lastModified" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "unixSyncSourceInfo" : {
      "fileName" : "...",
      "syncTime" : "...",
      "lastModified" : "...",
      "unixBackend" : "...",
      "minUserId" : "...",
      "minGroupId" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "sessionId" : "...",
    "syncSourceInfo" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/assets/ugsyncAudits/{syncSource}" : {
      "get" : {
        "tags" : [ "AssetREST" ],
        "description" : "",
        "operationId" : "getUgsyncAuditsBySyncSource",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "syncSource",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUgsyncAuditInfoList"
            },
            "example" : {
  "vxUgsyncAuditInfoList" : [ {
    "eventTime" : 12345,
    "userName" : "...",
    "noOfNewUsers" : 12345,
    "noOfModifiedUsers" : 12345,
    "noOfNewGroups" : 12345,
    "noOfModifiedGroups" : 12345,
    "syncSource" : "...",
    "ldapSyncSourceInfo" : {
      "ldapUrl" : "...",
      "userSearchFilter" : "...",
      "groupSearchFilter" : "...",
      "groupHierarchyLevel" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "groupSearchFirstEnabled" : "...",
      "groupSearchEnabled" : "...",
      "userSearchEnabled" : "...",
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "fileSyncSourceInfo" : {
      "fileName" : "...",
      "syncTime" : "...",
      "lastModified" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "unixSyncSourceInfo" : {
      "fileName" : "...",
      "syncTime" : "...",
      "lastModified" : "...",
      "unixBackend" : "...",
      "minUserId" : "...",
      "minGroupId" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "sessionId" : "...",
    "syncSourceInfo" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  }, {
    "eventTime" : 12345,
    "userName" : "...",
    "noOfNewUsers" : 12345,
    "noOfModifiedUsers" : 12345,
    "noOfNewGroups" : 12345,
    "noOfModifiedGroups" : 12345,
    "syncSource" : "...",
    "ldapSyncSourceInfo" : {
      "ldapUrl" : "...",
      "userSearchFilter" : "...",
      "groupSearchFilter" : "...",
      "groupHierarchyLevel" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "groupSearchFirstEnabled" : "...",
      "groupSearchEnabled" : "...",
      "userSearchEnabled" : "...",
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "fileSyncSourceInfo" : {
      "fileName" : "...",
      "syncTime" : "...",
      "lastModified" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "unixSyncSourceInfo" : {
      "fileName" : "...",
      "syncTime" : "...",
      "lastModified" : "...",
      "unixBackend" : "...",
      "minUserId" : "...",
      "minGroupId" : "...",
      "totalUsersSynced" : 12345,
      "totalGroupsSynced" : 12345,
      "totalUsersDeleted" : 12345,
      "totalGroupsDeleted" : 12345
    },
    "sessionId" : "...",
    "syncSourceInfo" : {
      "property1" : "...",
      "property2" : "..."
    },
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/keys/key" : {
      "post" : {
        "tags" : [ "XKeyREST" ],
        "summary" : "Implements the create key functionality.",
        "description" : "Implements the create key functionality",
        "operationId" : "createKey",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "provider",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXKmsKey"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXKmsKey"
            },
            "example" : {
  "name" : "...",
  "cipher" : "...",
  "length" : 12345,
  "description" : "...",
  "versions" : 12345,
  "material" : "...",
  "versionName" : "...",
  "created" : 12345,
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XKeyREST" ],
        "summary" : "Implements the Rollover key functionality.",
        "description" : "Implements the Rollover key functionality",
        "operationId" : "rolloverKey",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "provider",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXKmsKey"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXKmsKey"
            },
            "example" : {
  "name" : "...",
  "cipher" : "...",
  "length" : 12345,
  "description" : "...",
  "versions" : 12345,
  "material" : "...",
  "versionName" : "...",
  "created" : 12345,
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/keys/key/{alias}" : {
      "delete" : {
        "tags" : [ "XKeyREST" ],
        "summary" : "Implements the delete key functionality.",
        "description" : "Implements the delete key functionality",
        "operationId" : "deleteKey",
        "parameters" : [
          {
            "name" : "alias",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "provider",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XKeyREST" ],
        "description" : "",
        "operationId" : "getKey",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "alias",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "provider",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXKmsKey"
            },
            "example" : {
  "name" : "...",
  "cipher" : "...",
  "length" : 12345,
  "description" : "...",
  "versions" : 12345,
  "material" : "...",
  "versionName" : "...",
  "created" : 12345,
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/keys/keys" : {
      "get" : {
        "tags" : [ "XKeyREST" ],
        "summary" : "Implements the traditional search functionalities for Keys.",
        "description" : "Implements the traditional search functionalities for Keys",
        "operationId" : "searchKeys",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "provider",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXKmsKeyList"
            },
            "example" : {
  "vXKeys" : [ {
    "name" : "...",
    "cipher" : "...",
    "length" : 12345,
    "description" : "...",
    "versions" : 12345,
    "material" : "...",
    "versionName" : "...",
    "created" : 12345,
    "attributes" : {
      "property1" : "...",
      "property2" : "..."
    },
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "cipher" : "...",
    "length" : 12345,
    "description" : "...",
    "versions" : 12345,
    "material" : "...",
    "versionName" : "...",
    "created" : 12345,
    "attributes" : {
      "property1" : "...",
      "property2" : "..."
    },
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/metrics/status" : {
      "get" : {
        "tags" : [ "MetricsREST" ],
        "description" : "",
        "operationId" : "getStatus",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerMetrics"
            },
            "example" : {
  "data" : {
    "property1" : { },
    "property2" : { }
  }
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/checksso" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "checkSSO",
        "produces" : [ "text/plain" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/cluster-services/{clusterName}" : {
      "delete" : {
        "tags" : [ "ServiceREST" ],
        "summary" : "Delete services/ repos associated with cluster.",
        "description" : "Delete services/ repos associated with cluster.\nOnly users with Ranger UserAdmin OR KeyAdmin are allowed to access this API.",
        "operationId" : "deleteClusterServices",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "clusterName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_ResponseEntityOfList"
            },
            "example" : {
  "statusCodeValue" : 12345,
  "statusCode" : "UNAUTHORIZED",
  "headers" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  },
  "body" : { }
},
            "description" : "List of serviceDeleteResponse."
          }
        }
      }
    }
    ,
    "\/plugins/csrfconf" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getCSRFProperties",
        "produces" : [ "application/json" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "object"
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/definitions" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getServiceDefs",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDefList"
            },
            "example" : {
  "serviceDefs" : [ {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "label" : "...",
    "rbKeyLabel" : "...",
    "dataMaskDef" : {
      "maskTypes" : [ { }, { } ],
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ],
    "options" : {
      "property1" : "...",
      "property2" : "..."
    },
    "rowFilterDef" : {
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "description" : "...",
    "policyConditions" : [ {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    }, {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    } ],
    "implClass" : "...",
    "displayName" : "...",
    "name" : "...",
    "contextEnrichers" : [ {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    }, {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    } ],
    "enums" : [ {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    }, {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    } ],
    "rbKeyDescription" : "...",
    "configs" : [ {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    }, {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "label" : "...",
    "rbKeyLabel" : "...",
    "dataMaskDef" : {
      "maskTypes" : [ { }, { } ],
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ],
    "options" : {
      "property1" : "...",
      "property2" : "..."
    },
    "rowFilterDef" : {
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "description" : "...",
    "policyConditions" : [ {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    }, {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    } ],
    "implClass" : "...",
    "displayName" : "...",
    "name" : "...",
    "contextEnrichers" : [ {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    }, {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    } ],
    "enums" : [ {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    }, {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    } ],
    "rbKeyDescription" : "...",
    "configs" : [ {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    }, {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "createServiceDef",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "example" : {
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "label" : "...",
  "rbKeyLabel" : "...",
  "dataMaskDef" : {
    "maskTypes" : [ {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    }, {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    } ],
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ],
  "options" : {
    "property1" : "...",
    "property2" : "..."
  },
  "rowFilterDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "description" : "...",
  "policyConditions" : [ {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  }, {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  } ],
  "implClass" : "...",
  "displayName" : "...",
  "name" : "...",
  "contextEnrichers" : [ {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  }, {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  } ],
  "enums" : [ {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  }, {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  } ],
  "rbKeyDescription" : "...",
  "configs" : [ {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  }, {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/definitions/name/{name}" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getServiceDefByName",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "example" : {
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "label" : "...",
  "rbKeyLabel" : "...",
  "dataMaskDef" : {
    "maskTypes" : [ {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    }, {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    } ],
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ],
  "options" : {
    "property1" : "...",
    "property2" : "..."
  },
  "rowFilterDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "description" : "...",
  "policyConditions" : [ {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  }, {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  } ],
  "implClass" : "...",
  "displayName" : "...",
  "name" : "...",
  "contextEnrichers" : [ {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  }, {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  } ],
  "enums" : [ {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  }, {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  } ],
  "rbKeyDescription" : "...",
  "configs" : [ {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  }, {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/definitions/{id}" : {
      "delete" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "deleteServiceDef",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getServiceDef",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "example" : {
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "label" : "...",
  "rbKeyLabel" : "...",
  "dataMaskDef" : {
    "maskTypes" : [ {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    }, {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    } ],
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ],
  "options" : {
    "property1" : "...",
    "property2" : "..."
  },
  "rowFilterDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "description" : "...",
  "policyConditions" : [ {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  }, {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  } ],
  "implClass" : "...",
  "displayName" : "...",
  "name" : "...",
  "contextEnrichers" : [ {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  }, {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  } ],
  "enums" : [ {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  }, {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  } ],
  "rbKeyDescription" : "...",
  "configs" : [ {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  }, {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "updateServiceDef",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "example" : {
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "label" : "...",
  "rbKeyLabel" : "...",
  "dataMaskDef" : {
    "maskTypes" : [ {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    }, {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    } ],
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ],
  "options" : {
    "property1" : "...",
    "property2" : "..."
  },
  "rowFilterDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "description" : "...",
  "policyConditions" : [ {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  }, {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  } ],
  "implClass" : "...",
  "displayName" : "...",
  "name" : "...",
  "contextEnrichers" : [ {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  }, {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  } ],
  "enums" : [ {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  }, {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  } ],
  "rbKeyDescription" : "...",
  "configs" : [ {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  }, {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/metrics/type/{type}" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getMetricByType",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "type",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/plugins/info" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getPluginsInfo",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPluginInfoList"
            },
            "example" : {
  "pluginInfoList" : [ {
    "info" : {
      "property1" : "...",
      "property2" : "..."
    },
    "serviceDisplayName" : "...",
    "id" : 12345,
    "serviceTypeDisplayName" : "...",
    "appType" : "...",
    "hostName" : "...",
    "updateTime" : 12345,
    "serviceName" : "...",
    "ipAddress" : "...",
    "serviceType" : "...",
    "createTime" : 12345
  }, {
    "info" : {
      "property1" : "...",
      "property2" : "..."
    },
    "serviceDisplayName" : "...",
    "id" : 12345,
    "serviceTypeDisplayName" : "...",
    "appType" : "...",
    "hostName" : "...",
    "updateTime" : 12345,
    "serviceName" : "...",
    "ipAddress" : "...",
    "serviceType" : "...",
    "createTime" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/policies" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getPolicies",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicyList"
            },
            "example" : {
  "policies" : [ {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "createPolicy",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/policies/apply" : {
      "post" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "applyPolicy",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/policies/count" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "countPolicies",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "number"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/policies/csv" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getPoliciesInCsv",
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/plugins/policies/download/{serviceName}" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getServicePoliciesIfUpdated",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "clusterName",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "lastActivationTime",
            "in" : "query",
            "required" : false,
            "default" : "0",
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "lastKnownVersion",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "pluginCapabilities",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "pluginId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "supportsPolicyDeltas",
            "in" : "query",
            "required" : false,
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "zoneName",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ServicePolicies"
            },
            "example" : {
  "serviceDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "label" : "...",
    "rbKeyLabel" : "...",
    "dataMaskDef" : {
      "maskTypes" : [ { }, { } ],
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ],
    "options" : {
      "property1" : "...",
      "property2" : "..."
    },
    "rowFilterDef" : {
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "description" : "...",
    "policyConditions" : [ {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    }, {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    } ],
    "implClass" : "...",
    "displayName" : "...",
    "name" : "...",
    "contextEnrichers" : [ {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    }, {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    } ],
    "enums" : [ {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    }, {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    } ],
    "rbKeyDescription" : "...",
    "configs" : [ {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    }, {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  },
  "policyUpdateTime" : 12345,
  "serviceId" : 12345,
  "policyDeltas" : [ {
    "policy" : {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "changeType" : 12345,
    "policiesVersion" : 12345,
    "id" : 12345
  }, {
    "policy" : {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "changeType" : 12345,
    "policiesVersion" : 12345,
    "id" : 12345
  } ],
  "auditMode" : "...",
  "policyVersion" : 12345,
  "tagPolicies" : {
    "policyUpdateTime" : 12345,
    "serviceConfig" : {
      "property1" : "...",
      "property2" : "..."
    },
    "policyVersion" : 12345,
    "auditMode" : "...",
    "serviceId" : 12345,
    "serviceName" : "...",
    "serviceDef" : {
      "accessTypes" : [ { }, { } ],
      "label" : "...",
      "rbKeyLabel" : "...",
      "dataMaskDef" : { },
      "resources" : [ { }, { } ],
      "options" : {
        "property1" : "...",
        "property2" : "..."
      },
      "rowFilterDef" : { },
      "description" : "...",
      "policyConditions" : [ { }, { } ],
      "implClass" : "...",
      "displayName" : "...",
      "name" : "...",
      "contextEnrichers" : [ { }, { } ],
      "enums" : [ { }, { } ],
      "rbKeyDescription" : "...",
      "configs" : [ { }, { } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "policies" : [ {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    }, {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    } ]
  },
  "serviceConfig" : {
    "property1" : "...",
    "property2" : "..."
  },
  "policies" : [ {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "securityZones" : {
    "property1" : {
      "containsAssociatedTagService" : true,
      "policies" : [ {
        "denyExceptions" : [ { }, { } ],
        "allowExceptions" : [ { }, { } ],
        "validitySchedules" : [ { }, { } ],
        "policyPriority" : 12345,
        "policyType" : 12345,
        "isAuditEnabled" : true,
        "zoneName" : "...",
        "denyPolicyItems" : [ { }, { } ],
        "service" : "...",
        "resources" : {
          "property1" : { },
          "property2" : { }
        },
        "dataMaskPolicyItems" : [ { }, { } ],
        "rowFilterPolicyItems" : [ { }, { } ],
        "policyItems" : [ { }, { } ],
        "policyLabels" : [ "...", "..." ],
        "resourceSignature" : "...",
        "isDenyAllElse" : true,
        "name" : "...",
        "serviceType" : "...",
        "description" : "...",
        "conditions" : [ { }, { } ],
        "options" : {
          "property1" : { },
          "property2" : { }
        },
        "createTime" : 12345,
        "id" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "updateTime" : 12345,
        "isEnabled" : true
      }, {
        "denyExceptions" : [ { }, { } ],
        "allowExceptions" : [ { }, { } ],
        "validitySchedules" : [ { }, { } ],
        "policyPriority" : 12345,
        "policyType" : 12345,
        "isAuditEnabled" : true,
        "zoneName" : "...",
        "denyPolicyItems" : [ { }, { } ],
        "service" : "...",
        "resources" : {
          "property1" : { },
          "property2" : { }
        },
        "dataMaskPolicyItems" : [ { }, { } ],
        "rowFilterPolicyItems" : [ { }, { } ],
        "policyItems" : [ { }, { } ],
        "policyLabels" : [ "...", "..." ],
        "resourceSignature" : "...",
        "isDenyAllElse" : true,
        "name" : "...",
        "serviceType" : "...",
        "description" : "...",
        "conditions" : [ { }, { } ],
        "options" : {
          "property1" : { },
          "property2" : { }
        },
        "createTime" : 12345,
        "id" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "updateTime" : 12345,
        "isEnabled" : true
      } ],
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ],
      "policyDeltas" : [ {
        "policy" : { },
        "changeType" : 12345,
        "policiesVersion" : 12345,
        "id" : 12345
      }, {
        "policy" : { },
        "changeType" : 12345,
        "policiesVersion" : 12345,
        "id" : 12345
      } ],
      "zoneName" : "..."
    },
    "property2" : {
      "containsAssociatedTagService" : true,
      "policies" : [ {
        "denyExceptions" : [ { }, { } ],
        "allowExceptions" : [ { }, { } ],
        "validitySchedules" : [ { }, { } ],
        "policyPriority" : 12345,
        "policyType" : 12345,
        "isAuditEnabled" : true,
        "zoneName" : "...",
        "denyPolicyItems" : [ { }, { } ],
        "service" : "...",
        "resources" : {
          "property1" : { },
          "property2" : { }
        },
        "dataMaskPolicyItems" : [ { }, { } ],
        "rowFilterPolicyItems" : [ { }, { } ],
        "policyItems" : [ { }, { } ],
        "policyLabels" : [ "...", "..." ],
        "resourceSignature" : "...",
        "isDenyAllElse" : true,
        "name" : "...",
        "serviceType" : "...",
        "description" : "...",
        "conditions" : [ { }, { } ],
        "options" : {
          "property1" : { },
          "property2" : { }
        },
        "createTime" : 12345,
        "id" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "updateTime" : 12345,
        "isEnabled" : true
      }, {
        "denyExceptions" : [ { }, { } ],
        "allowExceptions" : [ { }, { } ],
        "validitySchedules" : [ { }, { } ],
        "policyPriority" : 12345,
        "policyType" : 12345,
        "isAuditEnabled" : true,
        "zoneName" : "...",
        "denyPolicyItems" : [ { }, { } ],
        "service" : "...",
        "resources" : {
          "property1" : { },
          "property2" : { }
        },
        "dataMaskPolicyItems" : [ { }, { } ],
        "rowFilterPolicyItems" : [ { }, { } ],
        "policyItems" : [ { }, { } ],
        "policyLabels" : [ "...", "..." ],
        "resourceSignature" : "...",
        "isDenyAllElse" : true,
        "name" : "...",
        "serviceType" : "...",
        "description" : "...",
        "conditions" : [ { }, { } ],
        "options" : {
          "property1" : { },
          "property2" : { }
        },
        "createTime" : 12345,
        "id" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "updateTime" : 12345,
        "isEnabled" : true
      } ],
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ],
      "policyDeltas" : [ {
        "policy" : { },
        "changeType" : 12345,
        "policiesVersion" : 12345,
        "id" : 12345
      }, {
        "policy" : { },
        "changeType" : 12345,
        "policiesVersion" : 12345,
        "id" : 12345
      } ],
      "zoneName" : "..."
    }
  },
  "serviceName" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/policies/downloadExcel" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getPoliciesInExcel",
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/plugins/policies/eventTime" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getPolicyFromEventTime",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/policies/exportJson" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getPoliciesInJson",
        "parameters" : [
          {
            "name" : "checkPoliciesExists",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/plugins/policies/importPoliciesFromFile" : {
      "post" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "importPoliciesFromFile",
        "consumes" : [ "application/json", "multipart/form-data" ],
        "parameters" : [
          {
            "name" : "fileDetail",
            "in" : "formData",
            "required" : false,
            "type" : "file",
            "description" : ""
          },
          {
            "name" : "serviceMapStream",
            "in" : "formData",
            "required" : false,
            "type" : "file",
            "description" : ""
          },
          {
            "name" : "uploadedInputStream",
            "in" : "formData",
            "required" : false,
            "type" : "file",
            "description" : ""
          },
          {
            "name" : "zoneMapStream",
            "in" : "formData",
            "required" : false,
            "type" : "file",
            "description" : ""
          },
          {
            "name" : "importType",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "isOverride",
            "in" : "query",
            "required" : false,
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/plugins/policies/service/name/{name}" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getServicePoliciesByName",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicyList"
            },
            "example" : {
  "policies" : [ {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/policies/service/{id}" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getServicePolicies",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicyList"
            },
            "example" : {
  "policies" : [ {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/policies/{id}" : {
      "delete" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "deletePolicy",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getPolicy",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "updatePolicy",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/policies/{serviceDefName}/for-resource" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getPoliciesForResource",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceDefName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "serviceName",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicy"
}
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/policy/{policyId}/version/{versionNo}" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getPolicyForVersionNumber",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "policyId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "versionNo",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int32",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/policy/{policyId}/versionList" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getPolicyVersionList",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "policyId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXString"
            },
            "example" : {
  "value" : "...",
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/policyLabels" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getPolicyLabels",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/secure/policies/download/{serviceName}" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getSecureServicePoliciesIfUpdated",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "clusterName",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "lastActivationTime",
            "in" : "query",
            "required" : false,
            "default" : "0",
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "lastKnownVersion",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "pluginCapabilities",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "pluginId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "supportsPolicyDeltas",
            "in" : "query",
            "required" : false,
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "zoneName",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ServicePolicies"
            },
            "example" : {
  "serviceDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "label" : "...",
    "rbKeyLabel" : "...",
    "dataMaskDef" : {
      "maskTypes" : [ { }, { } ],
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ],
    "options" : {
      "property1" : "...",
      "property2" : "..."
    },
    "rowFilterDef" : {
      "accessTypes" : [ { }, { } ],
      "resources" : [ { }, { } ]
    },
    "description" : "...",
    "policyConditions" : [ {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    }, {
      "uiHint" : "...",
      "description" : "...",
      "itemId" : 12345,
      "name" : "...",
      "validationRegEx" : "...",
      "label" : "...",
      "rbKeyLabel" : "...",
      "evaluatorOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "validationMessage" : "...",
      "evaluator" : "...",
      "rbKeyValidationMessage" : "...",
      "rbKeyDescription" : "..."
    } ],
    "implClass" : "...",
    "displayName" : "...",
    "name" : "...",
    "contextEnrichers" : [ {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    }, {
      "name" : "...",
      "itemId" : 12345,
      "enricherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "enricher" : "..."
    } ],
    "enums" : [ {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    }, {
      "name" : "...",
      "defaultIndex" : 12345,
      "elements" : [ { }, { } ],
      "itemId" : 12345
    } ],
    "rbKeyDescription" : "...",
    "configs" : [ {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    }, {
      "rbKeyDescription" : "...",
      "subType" : "...",
      "rbKeyLabel" : "...",
      "defaultValue" : "...",
      "rbKeyValidationMessage" : "...",
      "label" : "...",
      "name" : "...",
      "description" : "...",
      "itemId" : 12345,
      "mandatory" : true,
      "validationRegEx" : "...",
      "validationMessage" : "...",
      "type" : "...",
      "uiHint" : "..."
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  },
  "policyUpdateTime" : 12345,
  "serviceId" : 12345,
  "policyDeltas" : [ {
    "policy" : {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "changeType" : 12345,
    "policiesVersion" : 12345,
    "id" : 12345
  }, {
    "policy" : {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "changeType" : 12345,
    "policiesVersion" : 12345,
    "id" : 12345
  } ],
  "auditMode" : "...",
  "policyVersion" : 12345,
  "tagPolicies" : {
    "policyUpdateTime" : 12345,
    "serviceConfig" : {
      "property1" : "...",
      "property2" : "..."
    },
    "policyVersion" : 12345,
    "auditMode" : "...",
    "serviceId" : 12345,
    "serviceName" : "...",
    "serviceDef" : {
      "accessTypes" : [ { }, { } ],
      "label" : "...",
      "rbKeyLabel" : "...",
      "dataMaskDef" : { },
      "resources" : [ { }, { } ],
      "options" : {
        "property1" : "...",
        "property2" : "..."
      },
      "rowFilterDef" : { },
      "description" : "...",
      "policyConditions" : [ { }, { } ],
      "implClass" : "...",
      "displayName" : "...",
      "name" : "...",
      "contextEnrichers" : [ { }, { } ],
      "enums" : [ { }, { } ],
      "rbKeyDescription" : "...",
      "configs" : [ { }, { } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "policies" : [ {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    }, {
      "denyExceptions" : [ { }, { } ],
      "allowExceptions" : [ { }, { } ],
      "validitySchedules" : [ { }, { } ],
      "policyPriority" : 12345,
      "policyType" : 12345,
      "isAuditEnabled" : true,
      "zoneName" : "...",
      "denyPolicyItems" : [ { }, { } ],
      "service" : "...",
      "resources" : {
        "property1" : { },
        "property2" : { }
      },
      "dataMaskPolicyItems" : [ { }, { } ],
      "rowFilterPolicyItems" : [ { }, { } ],
      "policyItems" : [ { }, { } ],
      "policyLabels" : [ "...", "..." ],
      "resourceSignature" : "...",
      "isDenyAllElse" : true,
      "name" : "...",
      "serviceType" : "...",
      "description" : "...",
      "conditions" : [ { }, { } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    } ]
  },
  "serviceConfig" : {
    "property1" : "...",
    "property2" : "..."
  },
  "policies" : [ {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "denyExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "allowExceptions" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "validitySchedules" : [ {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    }, {
      "recurrences" : [ { }, { } ],
      "startTime" : "...",
      "timeZone" : "...",
      "endTime" : "..."
    } ],
    "policyPriority" : 12345,
    "policyType" : 12345,
    "isAuditEnabled" : true,
    "zoneName" : "...",
    "denyPolicyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "service" : "...",
    "resources" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "dataMaskPolicyItems" : [ {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "dataMaskInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "rowFilterPolicyItems" : [ {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "rowFilterInfo" : { },
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyItems" : [ {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    }, {
      "groups" : [ "...", "..." ],
      "accesses" : [ { }, { } ],
      "delegateAdmin" : true,
      "users" : [ "...", "..." ],
      "conditions" : [ { }, { } ],
      "roles" : [ "...", "..." ]
    } ],
    "policyLabels" : [ "...", "..." ],
    "resourceSignature" : "...",
    "isDenyAllElse" : true,
    "name" : "...",
    "serviceType" : "...",
    "description" : "...",
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "securityZones" : {
    "property1" : {
      "containsAssociatedTagService" : true,
      "policies" : [ {
        "denyExceptions" : [ { }, { } ],
        "allowExceptions" : [ { }, { } ],
        "validitySchedules" : [ { }, { } ],
        "policyPriority" : 12345,
        "policyType" : 12345,
        "isAuditEnabled" : true,
        "zoneName" : "...",
        "denyPolicyItems" : [ { }, { } ],
        "service" : "...",
        "resources" : {
          "property1" : { },
          "property2" : { }
        },
        "dataMaskPolicyItems" : [ { }, { } ],
        "rowFilterPolicyItems" : [ { }, { } ],
        "policyItems" : [ { }, { } ],
        "policyLabels" : [ "...", "..." ],
        "resourceSignature" : "...",
        "isDenyAllElse" : true,
        "name" : "...",
        "serviceType" : "...",
        "description" : "...",
        "conditions" : [ { }, { } ],
        "options" : {
          "property1" : { },
          "property2" : { }
        },
        "createTime" : 12345,
        "id" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "updateTime" : 12345,
        "isEnabled" : true
      }, {
        "denyExceptions" : [ { }, { } ],
        "allowExceptions" : [ { }, { } ],
        "validitySchedules" : [ { }, { } ],
        "policyPriority" : 12345,
        "policyType" : 12345,
        "isAuditEnabled" : true,
        "zoneName" : "...",
        "denyPolicyItems" : [ { }, { } ],
        "service" : "...",
        "resources" : {
          "property1" : { },
          "property2" : { }
        },
        "dataMaskPolicyItems" : [ { }, { } ],
        "rowFilterPolicyItems" : [ { }, { } ],
        "policyItems" : [ { }, { } ],
        "policyLabels" : [ "...", "..." ],
        "resourceSignature" : "...",
        "isDenyAllElse" : true,
        "name" : "...",
        "serviceType" : "...",
        "description" : "...",
        "conditions" : [ { }, { } ],
        "options" : {
          "property1" : { },
          "property2" : { }
        },
        "createTime" : 12345,
        "id" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "updateTime" : 12345,
        "isEnabled" : true
      } ],
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ],
      "policyDeltas" : [ {
        "policy" : { },
        "changeType" : 12345,
        "policiesVersion" : 12345,
        "id" : 12345
      }, {
        "policy" : { },
        "changeType" : 12345,
        "policiesVersion" : 12345,
        "id" : 12345
      } ],
      "zoneName" : "..."
    },
    "property2" : {
      "containsAssociatedTagService" : true,
      "policies" : [ {
        "denyExceptions" : [ { }, { } ],
        "allowExceptions" : [ { }, { } ],
        "validitySchedules" : [ { }, { } ],
        "policyPriority" : 12345,
        "policyType" : 12345,
        "isAuditEnabled" : true,
        "zoneName" : "...",
        "denyPolicyItems" : [ { }, { } ],
        "service" : "...",
        "resources" : {
          "property1" : { },
          "property2" : { }
        },
        "dataMaskPolicyItems" : [ { }, { } ],
        "rowFilterPolicyItems" : [ { }, { } ],
        "policyItems" : [ { }, { } ],
        "policyLabels" : [ "...", "..." ],
        "resourceSignature" : "...",
        "isDenyAllElse" : true,
        "name" : "...",
        "serviceType" : "...",
        "description" : "...",
        "conditions" : [ { }, { } ],
        "options" : {
          "property1" : { },
          "property2" : { }
        },
        "createTime" : 12345,
        "id" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "updateTime" : 12345,
        "isEnabled" : true
      }, {
        "denyExceptions" : [ { }, { } ],
        "allowExceptions" : [ { }, { } ],
        "validitySchedules" : [ { }, { } ],
        "policyPriority" : 12345,
        "policyType" : 12345,
        "isAuditEnabled" : true,
        "zoneName" : "...",
        "denyPolicyItems" : [ { }, { } ],
        "service" : "...",
        "resources" : {
          "property1" : { },
          "property2" : { }
        },
        "dataMaskPolicyItems" : [ { }, { } ],
        "rowFilterPolicyItems" : [ { }, { } ],
        "policyItems" : [ { }, { } ],
        "policyLabels" : [ "...", "..." ],
        "resourceSignature" : "...",
        "isDenyAllElse" : true,
        "name" : "...",
        "serviceType" : "...",
        "description" : "...",
        "conditions" : [ { }, { } ],
        "options" : {
          "property1" : { },
          "property2" : { }
        },
        "createTime" : 12345,
        "id" : 12345,
        "updatedBy" : "...",
        "version" : 12345,
        "createdBy" : "...",
        "guid" : "...",
        "updateTime" : 12345,
        "isEnabled" : true
      } ],
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ],
      "policyDeltas" : [ {
        "policy" : { },
        "changeType" : 12345,
        "policiesVersion" : 12345,
        "id" : 12345
      }, {
        "policy" : { },
        "changeType" : 12345,
        "policiesVersion" : 12345,
        "id" : 12345
      } ],
      "zoneName" : "..."
    }
  },
  "serviceName" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/secure/services/grant/{serviceName}" : {
      "post" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "secureGrantAccess",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_GrantRevokeRequest"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RESTResponse"
            },
            "example" : {
  "message" : "...",
  "msgDesc" : "...",
  "httpStatusCode" : 12345,
  "messageList" : [ {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  }, {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  } ],
  "statusCode" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/secure/services/revoke/{serviceName}" : {
      "post" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "secureRevokeAccess",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_GrantRevokeRequest"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RESTResponse"
            },
            "example" : {
  "message" : "...",
  "msgDesc" : "...",
  "httpStatusCode" : 12345,
  "messageList" : [ {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  }, {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  } ],
  "statusCode" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/server/policydeltas" : {
      "delete" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "deletePolicyDeltas",
        "parameters" : [
          {
            "name" : "days",
            "in" : "query",
            "required" : false,
            "default" : "7",
            "type" : "integer",
            "format" : "int32",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/plugins/server/purgepolicies/{serviceName}" : {
      "delete" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "purgeEmptyPolicies",
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/plugins/services" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getServices",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceList"
            },
            "example" : {
  "services" : [ {
    "policyUpdateTime" : 12345,
    "description" : "...",
    "name" : "...",
    "type" : "...",
    "configs" : {
      "property1" : "...",
      "property2" : "..."
    },
    "tagVersion" : 12345,
    "tagUpdateTime" : 12345,
    "displayName" : "...",
    "policyVersion" : 12345,
    "tagService" : "...",
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "policyUpdateTime" : 12345,
    "description" : "...",
    "name" : "...",
    "type" : "...",
    "configs" : {
      "property1" : "...",
      "property2" : "..."
    },
    "tagVersion" : 12345,
    "tagUpdateTime" : 12345,
    "displayName" : "...",
    "policyVersion" : 12345,
    "tagService" : "...",
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "createService",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "example" : {
  "policyUpdateTime" : 12345,
  "description" : "...",
  "name" : "...",
  "type" : "...",
  "configs" : {
    "property1" : "...",
    "property2" : "..."
  },
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "displayName" : "...",
  "policyVersion" : 12345,
  "tagService" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/services/count" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "countServices",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "number"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/services/grant/{serviceName}" : {
      "post" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "grantAccess",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_GrantRevokeRequest"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RESTResponse"
            },
            "example" : {
  "message" : "...",
  "msgDesc" : "...",
  "httpStatusCode" : 12345,
  "messageList" : [ {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  }, {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  } ],
  "statusCode" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/services/lookupResource/{serviceName}" : {
      "post" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "lookupResource",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ResourceLookupContext"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/services/name/{name}" : {
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getServiceByName",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "example" : {
  "policyUpdateTime" : 12345,
  "description" : "...",
  "name" : "...",
  "type" : "...",
  "configs" : {
    "property1" : "...",
    "property2" : "..."
  },
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "displayName" : "...",
  "policyVersion" : 12345,
  "tagService" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/services/revoke/{serviceName}" : {
      "post" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "revokeAccess",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_GrantRevokeRequest"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RESTResponse"
            },
            "example" : {
  "message" : "...",
  "msgDesc" : "...",
  "httpStatusCode" : 12345,
  "messageList" : [ {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  }, {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  } ],
  "statusCode" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/services/validateConfig" : {
      "post" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "validateConfig",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXResponse"
            },
            "example" : {
  "statusCode" : 12345,
  "msgDesc" : "...",
  "messageList" : [ {
    "name" : "...",
    "rbKey" : "...",
    "message" : "...",
    "objectId" : 12345,
    "fieldName" : "...",
    "myClassType" : 12345
  }, {
    "name" : "...",
    "rbKey" : "...",
    "message" : "...",
    "objectId" : 12345,
    "fieldName" : "...",
    "myClassType" : 12345
  } ],
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/plugins/services/{id}" : {
      "delete" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "deleteService",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "getService",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "example" : {
  "policyUpdateTime" : 12345,
  "description" : "...",
  "name" : "...",
  "type" : "...",
  "configs" : {
    "property1" : "...",
    "property2" : "..."
  },
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "displayName" : "...",
  "policyVersion" : 12345,
  "tagService" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "ServiceREST" ],
        "description" : "",
        "operationId" : "updateService",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "example" : {
  "policyUpdateTime" : 12345,
  "description" : "...",
  "name" : "...",
  "type" : "...",
  "configs" : {
    "property1" : "...",
    "property2" : "..."
  },
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "displayName" : "...",
  "policyVersion" : 12345,
  "tagService" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/api/policy" : {
      "get" : {
        "tags" : [ "PublicAPIs" ],
        "description" : "",
        "operationId" : "searchPolicies",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPolicyList"
            },
            "example" : {
  "vXPolicies" : [ {
    "policyName" : "...",
    "resourceName" : "...",
    "description" : "...",
    "repositoryName" : "...",
    "repositoryType" : "...",
    "permMapList" : [ {
      "userList" : [ "...", "..." ],
      "groupList" : [ "...", "..." ],
      "permList" : [ "...", "..." ],
      "ipAddress" : "..."
    }, {
      "userList" : [ "...", "..." ],
      "groupList" : [ "...", "..." ],
      "permList" : [ "...", "..." ],
      "ipAddress" : "..."
    } ],
    "tables" : "...",
    "columnFamilies" : "...",
    "columns" : "...",
    "databases" : "...",
    "udfs" : "...",
    "tableType" : "...",
    "columnType" : "...",
    "topologies" : "...",
    "services" : "...",
    "hiveServices" : "...",
    "isEnabled" : true,
    "isRecursive" : true,
    "isAuditEnabled" : true,
    "version" : "...",
    "grantor" : "...",
    "replacePerm" : true,
    "policyLabel" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "policyName" : "...",
    "resourceName" : "...",
    "description" : "...",
    "repositoryName" : "...",
    "repositoryType" : "...",
    "permMapList" : [ {
      "userList" : [ "...", "..." ],
      "groupList" : [ "...", "..." ],
      "permList" : [ "...", "..." ],
      "ipAddress" : "..."
    }, {
      "userList" : [ "...", "..." ],
      "groupList" : [ "...", "..." ],
      "permList" : [ "...", "..." ],
      "ipAddress" : "..."
    } ],
    "tables" : "...",
    "columnFamilies" : "...",
    "columns" : "...",
    "databases" : "...",
    "udfs" : "...",
    "tableType" : "...",
    "columnType" : "...",
    "topologies" : "...",
    "services" : "...",
    "hiveServices" : "...",
    "isEnabled" : true,
    "isRecursive" : true,
    "isAuditEnabled" : true,
    "version" : "...",
    "grantor" : "...",
    "replacePerm" : true,
    "policyLabel" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "PublicAPIs" ],
        "description" : "",
        "operationId" : "createPolicy2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXPolicy"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPolicy"
            },
            "example" : {
  "policyName" : "...",
  "resourceName" : "...",
  "description" : "...",
  "repositoryName" : "...",
  "repositoryType" : "...",
  "permMapList" : [ {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  }, {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  } ],
  "tables" : "...",
  "columnFamilies" : "...",
  "columns" : "...",
  "databases" : "...",
  "udfs" : "...",
  "tableType" : "...",
  "columnType" : "...",
  "topologies" : "...",
  "services" : "...",
  "hiveServices" : "...",
  "isEnabled" : true,
  "isRecursive" : true,
  "isAuditEnabled" : true,
  "version" : "...",
  "grantor" : "...",
  "replacePerm" : true,
  "policyLabel" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/api/policy/count" : {
      "get" : {
        "tags" : [ "PublicAPIs" ],
        "description" : "",
        "operationId" : "countPolicies2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/api/policy/{id}" : {
      "delete" : {
        "tags" : [ "PublicAPIs" ],
        "description" : "",
        "operationId" : "deletePolicy2",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "PublicAPIs" ],
        "description" : "",
        "operationId" : "getPolicy2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPolicy"
            },
            "example" : {
  "policyName" : "...",
  "resourceName" : "...",
  "description" : "...",
  "repositoryName" : "...",
  "repositoryType" : "...",
  "permMapList" : [ {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  }, {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  } ],
  "tables" : "...",
  "columnFamilies" : "...",
  "columns" : "...",
  "databases" : "...",
  "udfs" : "...",
  "tableType" : "...",
  "columnType" : "...",
  "topologies" : "...",
  "services" : "...",
  "hiveServices" : "...",
  "isEnabled" : true,
  "isRecursive" : true,
  "isAuditEnabled" : true,
  "version" : "...",
  "grantor" : "...",
  "replacePerm" : true,
  "policyLabel" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "PublicAPIs" ],
        "description" : "",
        "operationId" : "updatePolicy2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXPolicy"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPolicy"
            },
            "example" : {
  "policyName" : "...",
  "resourceName" : "...",
  "description" : "...",
  "repositoryName" : "...",
  "repositoryType" : "...",
  "permMapList" : [ {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  }, {
    "userList" : [ "...", "..." ],
    "groupList" : [ "...", "..." ],
    "permList" : [ "...", "..." ],
    "ipAddress" : "..."
  } ],
  "tables" : "...",
  "columnFamilies" : "...",
  "columns" : "...",
  "databases" : "...",
  "udfs" : "...",
  "tableType" : "...",
  "columnType" : "...",
  "topologies" : "...",
  "services" : "...",
  "hiveServices" : "...",
  "isEnabled" : true,
  "isRecursive" : true,
  "isAuditEnabled" : true,
  "version" : "...",
  "grantor" : "...",
  "replacePerm" : true,
  "policyLabel" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/api/repository" : {
      "get" : {
        "tags" : [ "PublicAPIs" ],
        "description" : "",
        "operationId" : "searchRepositories",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXRepositoryList"
            },
            "example" : {
  "vXRepositories" : [ {
    "name" : "...",
    "description" : "...",
    "repositoryType" : "...",
    "config" : "...",
    "isActive" : true,
    "version" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "repositoryType" : "...",
    "config" : "...",
    "isActive" : true,
    "version" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "PublicAPIs" ],
        "description" : "",
        "operationId" : "createRepository",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXRepository"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXRepository"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "repositoryType" : "...",
  "config" : "...",
  "isActive" : true,
  "version" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/api/repository/count" : {
      "get" : {
        "tags" : [ "PublicAPIs" ],
        "description" : "",
        "operationId" : "countRepositories",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/api/repository/{id}" : {
      "delete" : {
        "tags" : [ "PublicAPIs" ],
        "description" : "",
        "operationId" : "deleteRepository",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "PublicAPIs" ],
        "description" : "",
        "operationId" : "getRepository",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXRepository"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "repositoryType" : "...",
  "config" : "...",
  "isActive" : true,
  "version" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "PublicAPIs" ],
        "description" : "",
        "operationId" : "updateRepository",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXRepository"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXRepository"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "repositoryType" : "...",
  "config" : "...",
  "isActive" : true,
  "version" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/plugins/info" : {
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getPluginsInfo2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPluginInfo"
}
            },
            "example" : {
  "info" : {
    "property1" : "...",
    "property2" : "..."
  },
  "serviceDisplayName" : "...",
  "id" : 12345,
  "serviceTypeDisplayName" : "...",
  "appType" : "...",
  "hostName" : "...",
  "updateTime" : 12345,
  "serviceName" : "...",
  "ipAddress" : "...",
  "serviceType" : "...",
  "createTime" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/policies/{serviceDefName}/for-resource" : {
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getPoliciesForResource2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceDefName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "serviceName",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicy"
}
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/policy" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "deletePolicyByName",
        "parameters" : [
          {
            "name" : "policyname",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "servicename",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getPolicies2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicy"
}
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "createPolicy3",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/policy/apply" : {
      "post" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "applyPolicy2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/policy/{id}" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "deletePolicy3",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getPolicy3",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "updatePolicy3",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/roles" : {
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getAllRoles",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerRole"
}
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "createRole",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "createNonExistUserGroup",
            "in" : "query",
            "required" : false,
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "serviceName",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/roles/grant/{serviceName}" : {
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "grantRole",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_GrantRevokeRoleRequest"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RESTResponse"
            },
            "example" : {
  "message" : "...",
  "msgDesc" : "...",
  "httpStatusCode" : 12345,
  "messageList" : [ {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  }, {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  } ],
  "statusCode" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/roles/name/{name}" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "deleteRole",
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "execUser",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "serviceName",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getRole",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "execUser",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "serviceName",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/roles/names" : {
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getAllRoleNames",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "execUser",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "serviceName",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/roles/revoke/{serviceName}" : {
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "revokeRoleUsersAndRoles",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_GrantRevokeRoleRequest"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RESTResponse"
            },
            "example" : {
  "message" : "...",
  "msgDesc" : "...",
  "httpStatusCode" : 12345,
  "messageList" : [ {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  }, {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  } ],
  "statusCode" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/roles/user/{user}" : {
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getUserRoles",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "user",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/roles/{id}" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "deleteRole",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getRole",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "updateRole",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "createNonExistUserGroup",
            "in" : "query",
            "required" : false,
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/roles/{id}/addUsersAndGroups" : {
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "addUsersAndGroups",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/roles/{id}/removeAdminFromUsersAndGroups" : {
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "removeAdminFromUsersAndGroups",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/roles/{id}/removeUsersAndGroups" : {
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "removeUsersAndGroups",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/server/policydeltas" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "deletePolicyDeltas2",
        "parameters" : [
          {
            "name" : "days",
            "in" : "query",
            "required" : false,
            "default" : "7",
            "type" : "integer",
            "format" : "int32",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/public/v2/api/server/purgepolicies/{serviceName}" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "purgeEmptyPolicies2",
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/public/v2/api/server/tagdeltas" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "deleteTagDeltas",
        "parameters" : [
          {
            "name" : "days",
            "in" : "query",
            "required" : false,
            "default" : "7",
            "type" : "integer",
            "format" : "int32",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/public/v2/api/service" : {
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "searchServices",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerService"
}
            },
            "example" : {
  "policyUpdateTime" : 12345,
  "description" : "...",
  "name" : "...",
  "type" : "...",
  "configs" : {
    "property1" : "...",
    "property2" : "..."
  },
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "displayName" : "...",
  "policyVersion" : 12345,
  "tagService" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "createService2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "example" : {
  "policyUpdateTime" : 12345,
  "description" : "...",
  "name" : "...",
  "type" : "...",
  "configs" : {
    "property1" : "...",
    "property2" : "..."
  },
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "displayName" : "...",
  "policyVersion" : 12345,
  "tagService" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/service/name/{name}" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "deleteServiceByName",
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getServiceByName2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "example" : {
  "policyUpdateTime" : 12345,
  "description" : "...",
  "name" : "...",
  "type" : "...",
  "configs" : {
    "property1" : "...",
    "property2" : "..."
  },
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "displayName" : "...",
  "policyVersion" : 12345,
  "tagService" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "updateServiceByName",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "example" : {
  "policyUpdateTime" : 12345,
  "description" : "...",
  "name" : "...",
  "type" : "...",
  "configs" : {
    "property1" : "...",
    "property2" : "..."
  },
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "displayName" : "...",
  "policyVersion" : 12345,
  "tagService" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/service/{id}" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "deleteService2",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getService2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "example" : {
  "policyUpdateTime" : 12345,
  "description" : "...",
  "name" : "...",
  "type" : "...",
  "configs" : {
    "property1" : "...",
    "property2" : "..."
  },
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "displayName" : "...",
  "policyVersion" : 12345,
  "tagService" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "updateService2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerService"
            },
            "example" : {
  "policyUpdateTime" : 12345,
  "description" : "...",
  "name" : "...",
  "type" : "...",
  "configs" : {
    "property1" : "...",
    "property2" : "..."
  },
  "tagVersion" : 12345,
  "tagUpdateTime" : 12345,
  "displayName" : "...",
  "policyVersion" : 12345,
  "tagService" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/service/{servicename}/policy" : {
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "searchPolicies2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "servicename",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerPolicy"
}
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/service/{servicename}/policy/{policyname}" : {
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getPolicyByName",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "policyname",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "servicename",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "updatePolicyByName",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "policyname",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "servicename",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerPolicy"
            },
            "example" : {
  "denyExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "allowExceptions" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "validitySchedules" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "policyPriority" : 12345,
  "policyType" : 12345,
  "isAuditEnabled" : true,
  "zoneName" : "...",
  "denyPolicyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "service" : "...",
  "resources" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "dataMaskPolicyItems" : [ {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "dataMaskInfo" : {
      "dataMaskType" : "...",
      "valueExpr" : "...",
      "conditionExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "rowFilterPolicyItems" : [ {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "rowFilterInfo" : {
      "filterExpr" : "..."
    },
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyItems" : [ {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  }, {
    "groups" : [ "...", "..." ],
    "accesses" : [ {
      "type" : "...",
      "isAllowed" : true
    }, {
      "type" : "...",
      "isAllowed" : true
    } ],
    "delegateAdmin" : true,
    "users" : [ "...", "..." ],
    "conditions" : [ {
      "values" : [ "...", "..." ],
      "type" : "..."
    }, {
      "values" : [ "...", "..." ],
      "type" : "..."
    } ],
    "roles" : [ "...", "..." ]
  } ],
  "policyLabels" : [ "...", "..." ],
  "resourceSignature" : "...",
  "isDenyAllElse" : true,
  "name" : "...",
  "serviceType" : "...",
  "description" : "...",
  "conditions" : [ {
    "values" : [ "...", "..." ],
    "type" : "..."
  }, {
    "values" : [ "...", "..." ],
    "type" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/servicedef" : {
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "searchServiceDefs",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerServiceDef"
}
            },
            "example" : {
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "label" : "...",
  "rbKeyLabel" : "...",
  "dataMaskDef" : {
    "maskTypes" : [ {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    }, {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    } ],
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ],
  "options" : {
    "property1" : "...",
    "property2" : "..."
  },
  "rowFilterDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "description" : "...",
  "policyConditions" : [ {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  }, {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  } ],
  "implClass" : "...",
  "displayName" : "...",
  "name" : "...",
  "contextEnrichers" : [ {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  }, {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  } ],
  "enums" : [ {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  }, {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  } ],
  "rbKeyDescription" : "...",
  "configs" : [ {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  }, {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "createServiceDef2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "example" : {
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "label" : "...",
  "rbKeyLabel" : "...",
  "dataMaskDef" : {
    "maskTypes" : [ {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    }, {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    } ],
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ],
  "options" : {
    "property1" : "...",
    "property2" : "..."
  },
  "rowFilterDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "description" : "...",
  "policyConditions" : [ {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  }, {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  } ],
  "implClass" : "...",
  "displayName" : "...",
  "name" : "...",
  "contextEnrichers" : [ {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  }, {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  } ],
  "enums" : [ {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  }, {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  } ],
  "rbKeyDescription" : "...",
  "configs" : [ {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  }, {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/servicedef/name/{name}" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "deleteServiceDefByName",
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getServiceDefByName2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "example" : {
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "label" : "...",
  "rbKeyLabel" : "...",
  "dataMaskDef" : {
    "maskTypes" : [ {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    }, {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    } ],
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ],
  "options" : {
    "property1" : "...",
    "property2" : "..."
  },
  "rowFilterDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "description" : "...",
  "policyConditions" : [ {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  }, {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  } ],
  "implClass" : "...",
  "displayName" : "...",
  "name" : "...",
  "contextEnrichers" : [ {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  }, {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  } ],
  "enums" : [ {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  }, {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  } ],
  "rbKeyDescription" : "...",
  "configs" : [ {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  }, {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "updateServiceDefByName",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "example" : {
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "label" : "...",
  "rbKeyLabel" : "...",
  "dataMaskDef" : {
    "maskTypes" : [ {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    }, {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    } ],
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ],
  "options" : {
    "property1" : "...",
    "property2" : "..."
  },
  "rowFilterDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "description" : "...",
  "policyConditions" : [ {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  }, {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  } ],
  "implClass" : "...",
  "displayName" : "...",
  "name" : "...",
  "contextEnrichers" : [ {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  }, {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  } ],
  "enums" : [ {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  }, {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  } ],
  "rbKeyDescription" : "...",
  "configs" : [ {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  }, {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/servicedef/{id}" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "deleteServiceDef2",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getServiceDef2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "example" : {
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "label" : "...",
  "rbKeyLabel" : "...",
  "dataMaskDef" : {
    "maskTypes" : [ {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    }, {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    } ],
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ],
  "options" : {
    "property1" : "...",
    "property2" : "..."
  },
  "rowFilterDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "description" : "...",
  "policyConditions" : [ {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  }, {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  } ],
  "implClass" : "...",
  "displayName" : "...",
  "name" : "...",
  "contextEnrichers" : [ {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  }, {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  } ],
  "enums" : [ {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  }, {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  } ],
  "rbKeyDescription" : "...",
  "configs" : [ {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  }, {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "updateServiceDef2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceDef"
            },
            "example" : {
  "accessTypes" : [ {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  }, {
    "impliedGrants" : [ "...", "..." ],
    "name" : "...",
    "label" : "...",
    "itemId" : 12345,
    "rbKeyLabel" : "..."
  } ],
  "label" : "...",
  "rbKeyLabel" : "...",
  "dataMaskDef" : {
    "maskTypes" : [ {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    }, {
      "itemId" : 12345,
      "rbKeyDescription" : "...",
      "rbKeyLabel" : "...",
      "dataMaskOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "description" : "...",
      "transformer" : "...",
      "name" : "...",
      "label" : "..."
    } ],
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "resources" : [ {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  }, {
    "recursiveSupported" : true,
    "label" : "...",
    "excludesSupported" : true,
    "parent" : "...",
    "matcher" : "...",
    "type" : "...",
    "accessTypeRestrictions" : [ "...", "..." ],
    "lookupSupported" : true,
    "isValidLeaf" : true,
    "matcherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "name" : "...",
    "rbKeyLabel" : "...",
    "mandatory" : true,
    "validationMessage" : "...",
    "level" : 12345,
    "itemId" : 12345,
    "uiHint" : "...",
    "rbKeyValidationMessage" : "...",
    "description" : "...",
    "validationRegEx" : "...",
    "rbKeyDescription" : "..."
  } ],
  "options" : {
    "property1" : "...",
    "property2" : "..."
  },
  "rowFilterDef" : {
    "accessTypes" : [ {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    }, {
      "impliedGrants" : [ "...", "..." ],
      "name" : "...",
      "label" : "...",
      "itemId" : 12345,
      "rbKeyLabel" : "..."
    } ],
    "resources" : [ {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    }, {
      "recursiveSupported" : true,
      "label" : "...",
      "excludesSupported" : true,
      "parent" : "...",
      "matcher" : "...",
      "type" : "...",
      "accessTypeRestrictions" : [ "...", "..." ],
      "lookupSupported" : true,
      "isValidLeaf" : true,
      "matcherOptions" : {
        "property1" : "...",
        "property2" : "..."
      },
      "name" : "...",
      "rbKeyLabel" : "...",
      "mandatory" : true,
      "validationMessage" : "...",
      "level" : 12345,
      "itemId" : 12345,
      "uiHint" : "...",
      "rbKeyValidationMessage" : "...",
      "description" : "...",
      "validationRegEx" : "...",
      "rbKeyDescription" : "..."
    } ]
  },
  "description" : "...",
  "policyConditions" : [ {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  }, {
    "uiHint" : "...",
    "description" : "...",
    "itemId" : 12345,
    "name" : "...",
    "validationRegEx" : "...",
    "label" : "...",
    "rbKeyLabel" : "...",
    "evaluatorOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "validationMessage" : "...",
    "evaluator" : "...",
    "rbKeyValidationMessage" : "...",
    "rbKeyDescription" : "..."
  } ],
  "implClass" : "...",
  "displayName" : "...",
  "name" : "...",
  "contextEnrichers" : [ {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  }, {
    "name" : "...",
    "itemId" : 12345,
    "enricherOptions" : {
      "property1" : "...",
      "property2" : "..."
    },
    "enricher" : "..."
  } ],
  "enums" : [ {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  }, {
    "name" : "...",
    "defaultIndex" : 12345,
    "elements" : [ {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    }, {
      "itemId" : 12345,
      "label" : "...",
      "rbKeyLabel" : "...",
      "name" : "..."
    } ],
    "itemId" : 12345
  } ],
  "rbKeyDescription" : "...",
  "configs" : [ {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  }, {
    "rbKeyDescription" : "...",
    "subType" : "...",
    "rbKeyLabel" : "...",
    "defaultValue" : "...",
    "rbKeyValidationMessage" : "...",
    "label" : "...",
    "name" : "...",
    "description" : "...",
    "itemId" : 12345,
    "mandatory" : true,
    "validationRegEx" : "...",
    "validationMessage" : "...",
    "type" : "...",
    "uiHint" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/zones" : {
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getAllZones",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerSecurityZone"
}
            },
            "example" : {
  "tagServices" : [ "...", "..." ],
  "description" : "...",
  "auditUsers" : [ "...", "..." ],
  "adminUserGroups" : [ "...", "..." ],
  "adminUsers" : [ "...", "..." ],
  "name" : "...",
  "services" : {
    "property1" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    },
    "property2" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    }
  },
  "auditUserGroups" : [ "...", "..." ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "createSecurityZone",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZone"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZone"
            },
            "example" : {
  "tagServices" : [ "...", "..." ],
  "description" : "...",
  "auditUsers" : [ "...", "..." ],
  "adminUserGroups" : [ "...", "..." ],
  "adminUsers" : [ "...", "..." ],
  "name" : "...",
  "services" : {
    "property1" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    },
    "property2" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    }
  },
  "auditUserGroups" : [ "...", "..." ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/zones/name/{name}" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "deleteSecurityZone",
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getSecurityZone",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZone"
            },
            "example" : {
  "tagServices" : [ "...", "..." ],
  "description" : "...",
  "auditUsers" : [ "...", "..." ],
  "adminUserGroups" : [ "...", "..." ],
  "adminUsers" : [ "...", "..." ],
  "name" : "...",
  "services" : {
    "property1" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    },
    "property2" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    }
  },
  "auditUserGroups" : [ "...", "..." ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/public/v2/api/zones/{id}" : {
      "delete" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "deleteSecurityZone",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "getSecurityZone",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZone"
            },
            "example" : {
  "tagServices" : [ "...", "..." ],
  "description" : "...",
  "auditUsers" : [ "...", "..." ],
  "adminUserGroups" : [ "...", "..." ],
  "adminUsers" : [ "...", "..." ],
  "name" : "...",
  "services" : {
    "property1" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    },
    "property2" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    }
  },
  "auditUserGroups" : [ "...", "..." ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "PublicAPIsv2" ],
        "description" : "",
        "operationId" : "updateSecurityZone",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZone"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZone"
            },
            "example" : {
  "tagServices" : [ "...", "..." ],
  "description" : "...",
  "auditUsers" : [ "...", "..." ],
  "adminUserGroups" : [ "...", "..." ],
  "adminUsers" : [ "...", "..." ],
  "name" : "...",
  "services" : {
    "property1" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    },
    "property2" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    }
  },
  "auditUserGroups" : [ "...", "..." ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/download/{serviceName}" : {
      "get" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "getRangerRolesIfUpdated",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "clusterName",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "lastActivationTime",
            "in" : "query",
            "required" : false,
            "default" : "0",
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "lastKnownRoleVersion",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "pluginCapabilities",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "pluginId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRoles"
            },
            "example" : {
  "roleVersion" : 12345,
  "serviceName" : "...",
  "roleUpdateTime" : 12345,
  "rangerRoles" : [ {
    "createdByUser" : "...",
    "groups" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "users" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "name" : "...",
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "description" : "...",
    "roles" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "createdByUser" : "...",
    "groups" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "users" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "name" : "...",
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "description" : "...",
    "roles" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ]
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/lookup/roles" : {
      "get" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "getAllRolesForUser",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRoleList"
            },
            "example" : {
  "roles" : [ {
    "createdByUser" : "...",
    "groups" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "users" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "name" : "...",
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "description" : "...",
    "roles" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "createdByUser" : "...",
    "groups" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "users" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "name" : "...",
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "description" : "...",
    "roles" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/roles" : {
      "get" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "getAllRoles2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRoleList"
            },
            "example" : {
  "roles" : [ {
    "createdByUser" : "...",
    "groups" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "users" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "name" : "...",
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "description" : "...",
    "roles" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "createdByUser" : "...",
    "groups" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "users" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "name" : "...",
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "description" : "...",
    "roles" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "createRole2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "createNonExistUserGroup",
            "in" : "query",
            "required" : false,
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "serviceName",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/roles/grant/{serviceName}" : {
      "put" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "grantRole2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_GrantRevokeRoleRequest"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RESTResponse"
            },
            "example" : {
  "message" : "...",
  "msgDesc" : "...",
  "httpStatusCode" : 12345,
  "messageList" : [ {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  }, {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  } ],
  "statusCode" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/roles/name/{name}" : {
      "delete" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "deleteRole2",
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "execUser",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "serviceName",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "getRole2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "execUser",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "serviceName",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/roles/names" : {
      "get" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "getAllRoleNames2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "execUser",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "serviceName",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/roles/revoke/{serviceName}" : {
      "put" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "revokeRole",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_GrantRevokeRoleRequest"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RESTResponse"
            },
            "example" : {
  "message" : "...",
  "msgDesc" : "...",
  "httpStatusCode" : 12345,
  "messageList" : [ {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  }, {
    "fieldName" : "...",
    "objectId" : 12345,
    "rbKey" : "...",
    "message" : "...",
    "name" : "..."
  } ],
  "statusCode" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/roles/user/{user}" : {
      "get" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "getUserRoles2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "user",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/roles/{id}" : {
      "delete" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "deleteRole2",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "getRole2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "updateRole2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "createNonExistUserGroup",
            "in" : "query",
            "required" : false,
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/roles/{id}/addUsersAndGroups" : {
      "put" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "addUsersAndGroups2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "boolean"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/roles/{id}/removeAdminFromUsersAndGroups" : {
      "put" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "removeAdminFromUsersAndGroups2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/roles/{id}/removeUsersAndGroups" : {
      "put" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "removeUsersAndGroups2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRole"
            },
            "example" : {
  "createdByUser" : "...",
  "groups" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "users" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "name" : "...",
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "description" : "...",
  "roles" : [ {
    "name" : "...",
    "isAdmin" : true
  }, {
    "name" : "...",
    "isAdmin" : true
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/roles/secure/download/{serviceName}" : {
      "get" : {
        "tags" : [ "RoleREST" ],
        "description" : "",
        "operationId" : "getSecureRangerRolesIfUpdated",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "clusterName",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "lastActivationTime",
            "in" : "query",
            "required" : false,
            "default" : "0",
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "lastKnownRoleVersion",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "pluginCapabilities",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "pluginId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerRoles"
            },
            "example" : {
  "roleVersion" : 12345,
  "serviceName" : "...",
  "roleUpdateTime" : 12345,
  "rangerRoles" : [ {
    "createdByUser" : "...",
    "groups" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "users" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "name" : "...",
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "description" : "...",
    "roles" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "createdByUser" : "...",
    "groups" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "users" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "name" : "...",
    "options" : {
      "property1" : { },
      "property2" : { }
    },
    "description" : "...",
    "roles" : [ {
      "name" : "...",
      "isAdmin" : true
    }, {
      "name" : "...",
      "isAdmin" : true
    } ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ]
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/download/{serviceName}" : {
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getServiceTagsIfUpdated",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "lastActivationTime",
            "in" : "query",
            "required" : false,
            "default" : "0",
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "lastKnownVersion",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "pluginCapabilities",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "pluginId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "supportsTagDeltas",
            "in" : "query",
            "required" : false,
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ServiceTags"
            },
            "example" : {
  "serviceName" : "...",
  "tagUpdateTime" : 12345,
  "resourceToTagIds" : {
    "property1" : [ 12345, 12345 ],
    "property2" : [ 12345, 12345 ]
  },
  "tagDefinitions" : {
    "property1" : {
      "name" : "...",
      "source" : "...",
      "attributeDefs" : [ {
        "name" : "...",
        "type" : "..."
      }, {
        "name" : "...",
        "type" : "..."
      } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "property2" : {
      "name" : "...",
      "source" : "...",
      "attributeDefs" : [ {
        "name" : "...",
        "type" : "..."
      }, {
        "name" : "...",
        "type" : "..."
      } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    }
  },
  "isDelta" : true,
  "tags" : {
    "property1" : {
      "validityPeriods" : [ {
        "recurrences" : [ { }, { } ],
        "startTime" : "...",
        "timeZone" : "...",
        "endTime" : "..."
      }, {
        "recurrences" : [ { }, { } ],
        "startTime" : "...",
        "timeZone" : "...",
        "endTime" : "..."
      } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "type" : "...",
      "attributes" : {
        "property1" : "...",
        "property2" : "..."
      },
      "owner" : 12345,
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "property2" : {
      "validityPeriods" : [ {
        "recurrences" : [ { }, { } ],
        "startTime" : "...",
        "timeZone" : "...",
        "endTime" : "..."
      }, {
        "recurrences" : [ { }, { } ],
        "startTime" : "...",
        "timeZone" : "...",
        "endTime" : "..."
      } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "type" : "...",
      "attributes" : {
        "property1" : "...",
        "property2" : "..."
      },
      "owner" : 12345,
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    }
  },
  "tagsChangeExtent" : "NONE",
  "serviceResources" : [ {
    "resourceElements" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "additionalInfo" : {
      "property1" : "...",
      "property2" : "..."
    },
    "ownerUser" : "...",
    "serviceName" : "...",
    "resourceSignature" : "...",
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "resourceElements" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "additionalInfo" : {
      "property1" : "...",
      "property2" : "..."
    },
    "ownerUser" : "...",
    "serviceName" : "...",
    "resourceSignature" : "...",
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "op" : "...",
  "tagVersion" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/importservicetags" : {
      "put" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "importServiceTags",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_ServiceTags"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/tags/resource/guid/{guid}" : {
      "delete" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "deleteServiceResourceByGuid",
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "deleteReferences",
            "in" : "query",
            "required" : false,
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getServiceResourceByGuid",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceResource"
            },
            "example" : {
  "resourceElements" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "additionalInfo" : {
    "property1" : "...",
    "property2" : "..."
  },
  "ownerUser" : "...",
  "serviceName" : "...",
  "resourceSignature" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "updateServiceResourceByGuid",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceResource"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceResource"
            },
            "example" : {
  "resourceElements" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "additionalInfo" : {
    "property1" : "...",
    "property2" : "..."
  },
  "ownerUser" : "...",
  "serviceName" : "...",
  "resourceSignature" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/resource/service/{serviceName}/signature/{resourceSignature}" : {
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getServiceResourceByServiceAndResourceSignature",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "resourceSignature",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceResource"
            },
            "example" : {
  "resourceElements" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "additionalInfo" : {
    "property1" : "...",
    "property2" : "..."
  },
  "ownerUser" : "...",
  "serviceName" : "...",
  "resourceSignature" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/resource/{id}" : {
      "delete" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "deleteServiceResource",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getServiceResource",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceResource"
            },
            "example" : {
  "resourceElements" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "additionalInfo" : {
    "property1" : "...",
    "property2" : "..."
  },
  "ownerUser" : "...",
  "serviceName" : "...",
  "resourceSignature" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "updateServiceResource",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceResource"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceResource"
            },
            "example" : {
  "resourceElements" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "additionalInfo" : {
    "property1" : "...",
    "property2" : "..."
  },
  "ownerUser" : "...",
  "serviceName" : "...",
  "resourceSignature" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/resources" : {
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getAllServiceResources",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerServiceResource"
}
            },
            "example" : {
  "resourceElements" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "additionalInfo" : {
    "property1" : "...",
    "property2" : "..."
  },
  "ownerUser" : "...",
  "serviceName" : "...",
  "resourceSignature" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "createServiceResource",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "updateIfExists",
            "in" : "query",
            "required" : false,
            "default" : "true",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceResource"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerServiceResource"
            },
            "example" : {
  "resourceElements" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "additionalInfo" : {
    "property1" : "...",
    "property2" : "..."
  },
  "ownerUser" : "...",
  "serviceName" : "...",
  "resourceSignature" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/resources/service/{serviceName}" : {
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getServiceResourcesByService",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerServiceResource"
}
            },
            "example" : {
  "resourceElements" : {
    "property1" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    },
    "property2" : {
      "values" : [ "...", "..." ],
      "isRecursive" : true,
      "isExcludes" : true
    }
  },
  "additionalInfo" : {
    "property1" : "...",
    "property2" : "..."
  },
  "ownerUser" : "...",
  "serviceName" : "...",
  "resourceSignature" : "...",
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/secure/download/{serviceName}" : {
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getSecureServiceTagsIfUpdated",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "lastActivationTime",
            "in" : "query",
            "required" : false,
            "default" : "0",
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "lastKnownVersion",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "pluginCapabilities",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "pluginId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "supportsTagDeltas",
            "in" : "query",
            "required" : false,
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_ServiceTags"
            },
            "example" : {
  "serviceName" : "...",
  "tagUpdateTime" : 12345,
  "resourceToTagIds" : {
    "property1" : [ 12345, 12345 ],
    "property2" : [ 12345, 12345 ]
  },
  "tagDefinitions" : {
    "property1" : {
      "name" : "...",
      "source" : "...",
      "attributeDefs" : [ {
        "name" : "...",
        "type" : "..."
      }, {
        "name" : "...",
        "type" : "..."
      } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "property2" : {
      "name" : "...",
      "source" : "...",
      "attributeDefs" : [ {
        "name" : "...",
        "type" : "..."
      }, {
        "name" : "...",
        "type" : "..."
      } ],
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    }
  },
  "isDelta" : true,
  "tags" : {
    "property1" : {
      "validityPeriods" : [ {
        "recurrences" : [ { }, { } ],
        "startTime" : "...",
        "timeZone" : "...",
        "endTime" : "..."
      }, {
        "recurrences" : [ { }, { } ],
        "startTime" : "...",
        "timeZone" : "...",
        "endTime" : "..."
      } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "type" : "...",
      "attributes" : {
        "property1" : "...",
        "property2" : "..."
      },
      "owner" : 12345,
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    },
    "property2" : {
      "validityPeriods" : [ {
        "recurrences" : [ { }, { } ],
        "startTime" : "...",
        "timeZone" : "...",
        "endTime" : "..."
      }, {
        "recurrences" : [ { }, { } ],
        "startTime" : "...",
        "timeZone" : "...",
        "endTime" : "..."
      } ],
      "options" : {
        "property1" : { },
        "property2" : { }
      },
      "type" : "...",
      "attributes" : {
        "property1" : "...",
        "property2" : "..."
      },
      "owner" : 12345,
      "createTime" : 12345,
      "id" : 12345,
      "updatedBy" : "...",
      "version" : 12345,
      "createdBy" : "...",
      "guid" : "...",
      "updateTime" : 12345,
      "isEnabled" : true
    }
  },
  "tagsChangeExtent" : "TAGS",
  "serviceResources" : [ {
    "resourceElements" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "additionalInfo" : {
      "property1" : "...",
      "property2" : "..."
    },
    "ownerUser" : "...",
    "serviceName" : "...",
    "resourceSignature" : "...",
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "resourceElements" : {
      "property1" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      },
      "property2" : {
        "values" : [ "...", "..." ],
        "isRecursive" : true,
        "isExcludes" : true
      }
    },
    "additionalInfo" : {
      "property1" : "...",
      "property2" : "..."
    },
    "ownerUser" : "...",
    "serviceName" : "...",
    "resourceSignature" : "...",
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "op" : "...",
  "tagVersion" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/server/tagdeltas" : {
      "delete" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "deleteTagDeltas2",
        "parameters" : [
          {
            "name" : "days",
            "in" : "query",
            "required" : false,
            "default" : "3",
            "type" : "integer",
            "format" : "int32",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/tags/tag/guid/{guid}" : {
      "delete" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "deleteTagByGuid",
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getTagByGuid",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTag"
            },
            "example" : {
  "validityPeriods" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "type" : "...",
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "owner" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "updateTagByGuid",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerTag"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTag"
            },
            "example" : {
  "validityPeriods" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "type" : "...",
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "owner" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/tag/{id}" : {
      "delete" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "deleteTag",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getTag",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTag"
            },
            "example" : {
  "validityPeriods" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "type" : "...",
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "owner" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "updateTag",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerTag"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTag"
            },
            "example" : {
  "validityPeriods" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "type" : "...",
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "owner" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/tagdef/guid/{guid}" : {
      "delete" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "deleteTagDefByGuid",
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getTagDefByGuid",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTagDef"
            },
            "example" : {
  "name" : "...",
  "source" : "...",
  "attributeDefs" : [ {
    "name" : "...",
    "type" : "..."
  }, {
    "name" : "...",
    "type" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/tagdef/name/{name}" : {
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getTagDefByName",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTagDef"
            },
            "example" : {
  "name" : "...",
  "source" : "...",
  "attributeDefs" : [ {
    "name" : "...",
    "type" : "..."
  }, {
    "name" : "...",
    "type" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/tagdef/{id}" : {
      "delete" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "deleteTagDef",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getTagDef",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTagDef"
            },
            "example" : {
  "name" : "...",
  "source" : "...",
  "attributeDefs" : [ {
    "name" : "...",
    "type" : "..."
  }, {
    "name" : "...",
    "type" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "updateTagDef",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerTagDef"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTagDef"
            },
            "example" : {
  "name" : "...",
  "source" : "...",
  "attributeDefs" : [ {
    "name" : "...",
    "type" : "..."
  }, {
    "name" : "...",
    "type" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/tagdefs" : {
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getAllTagDefs",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerTagDef"
}
            },
            "example" : {
  "name" : "...",
  "source" : "...",
  "attributeDefs" : [ {
    "name" : "...",
    "type" : "..."
  }, {
    "name" : "...",
    "type" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "createTagDef",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "updateIfExists",
            "in" : "query",
            "required" : false,
            "default" : "true",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerTagDef"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTagDef"
            },
            "example" : {
  "name" : "...",
  "source" : "...",
  "attributeDefs" : [ {
    "name" : "...",
    "type" : "..."
  }, {
    "name" : "...",
    "type" : "..."
  } ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/tagresourcemap/guid/{guid}" : {
      "delete" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "deleteTagResourceMapByGuid",
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getTagResourceMapByGuid",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "guid",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTagResourceMap"
            },
            "example" : {
  "tagId" : 12345,
  "resourceId" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/tagresourcemap/tag-resource-guid" : {
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getTagResourceMap",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "resourceGuid",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "tagGuid",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTagResourceMap"
            },
            "example" : {
  "tagId" : 12345,
  "resourceId" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/tagresourcemap/{id}" : {
      "delete" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "deleteTagResourceMap",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getTagResourceMap",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTagResourceMap"
            },
            "example" : {
  "tagId" : 12345,
  "resourceId" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/tagresourcemaps" : {
      "delete" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "deleteTagResourceMap",
        "parameters" : [
          {
            "name" : "resource-guid",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "tag-guid",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getAllTagResourceMaps",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerTagResourceMap"
}
            },
            "example" : {
  "tagId" : 12345,
  "resourceId" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "createTagResourceMap",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "lenient",
            "in" : "query",
            "required" : false,
            "default" : "false",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "resource-guid",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "tag-guid",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTagResourceMap"
            },
            "example" : {
  "tagId" : 12345,
  "resourceId" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/tags" : {
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getAllTags",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerTag"
}
            },
            "example" : {
  "validityPeriods" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "type" : "...",
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "owner" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "createTag",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "updateIfExists",
            "in" : "query",
            "required" : false,
            "default" : "true",
            "type" : "boolean",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerTag"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerTag"
            },
            "example" : {
  "validityPeriods" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "type" : "...",
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "owner" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/tags/type/{type}" : {
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getTagsByType",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "type",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_RangerTag"
}
            },
            "example" : {
  "validityPeriods" : [ {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  }, {
    "recurrences" : [ {
      "interval" : { },
      "schedule" : { }
    }, {
      "interval" : { },
      "schedule" : { }
    } ],
    "startTime" : "...",
    "timeZone" : "...",
    "endTime" : "..."
  } ],
  "options" : {
    "property1" : { },
    "property2" : { }
  },
  "type" : "...",
  "attributes" : {
    "property1" : "...",
    "property2" : "..."
  },
  "owner" : 12345,
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/tags/types" : {
      "get" : {
        "tags" : [ "TagREST" ],
        "description" : "",
        "operationId" : "getTagTypes",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users" : {
      "get" : {
        "tags" : [ "UserREST" ],
        "summary" : "Implements the traditional search functionalities for UserProfile.",
        "description" : "Implements the traditional search functionalities for UserProfile",
        "operationId" : "searchUsers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPortalUserList"
            },
            "example" : {
  "vXPortalUsers" : [ {
    "loginId" : "...",
    "password" : "...",
    "status" : 12345,
    "emailAddress" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "publicScreenName" : "...",
    "userSource" : 12345,
    "notes" : "...",
    "userRoleList" : [ "...", "..." ],
    "myClassType" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "userPermList" : [ {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "groupPermissions" : [ {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "otherAttributes" : "...",
    "configProperties" : {
      "property1" : "...",
      "property2" : "..."
    },
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "loginId" : "...",
    "password" : "...",
    "status" : 12345,
    "emailAddress" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "publicScreenName" : "...",
    "userSource" : 12345,
    "notes" : "...",
    "userRoleList" : [ "...", "..." ],
    "myClassType" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "userPermList" : [ {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "groupPermissions" : [ {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "otherAttributes" : "...",
    "configProperties" : {
      "property1" : "...",
      "property2" : "..."
    },
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "UserREST" ],
        "description" : "",
        "operationId" : "create",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXPortalUser"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPortalUser"
            },
            "example" : {
  "loginId" : "...",
  "password" : "...",
  "status" : 12345,
  "emailAddress" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "publicScreenName" : "...",
  "userSource" : 12345,
  "notes" : "...",
  "userRoleList" : [ "...", "..." ],
  "myClassType" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "userPermList" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "groupPermissions" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "otherAttributes" : "...",
  "configProperties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "UserREST" ],
        "description" : "",
        "operationId" : "update",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXPortalUser"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPortalUser"
            },
            "example" : {
  "loginId" : "...",
  "password" : "...",
  "status" : 12345,
  "emailAddress" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "publicScreenName" : "...",
  "userSource" : 12345,
  "notes" : "...",
  "userRoleList" : [ "...", "..." ],
  "myClassType" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "userPermList" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "groupPermissions" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "otherAttributes" : "...",
  "configProperties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/default" : {
      "post" : {
        "tags" : [ "UserREST" ],
        "description" : "",
        "operationId" : "createDefaultAccountUser",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXPortalUser"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPortalUser"
            },
            "example" : {
  "loginId" : "...",
  "password" : "...",
  "status" : 12345,
  "emailAddress" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "publicScreenName" : "...",
  "userSource" : 12345,
  "notes" : "...",
  "userRoleList" : [ "...", "..." ],
  "myClassType" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "userPermList" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "groupPermissions" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "otherAttributes" : "...",
  "configProperties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/firstnames" : {
      "get" : {
        "tags" : [ "UserREST" ],
        "description" : "",
        "operationId" : "suggestUserFirstName",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "letters",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/profile" : {
      "get" : {
        "tags" : [ "UserREST" ],
        "summary" : "This method returns the VUserProfile for the current session.",
        "description" : "This method returns the VUserProfile for the current session",
        "operationId" : "getUserProfile",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPortalUser"
            },
            "example" : {
  "loginId" : "...",
  "password" : "...",
  "status" : 12345,
  "emailAddress" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "publicScreenName" : "...",
  "userSource" : 12345,
  "notes" : "...",
  "userRoleList" : [ "...", "..." ],
  "myClassType" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "userPermList" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "groupPermissions" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "otherAttributes" : "...",
  "configProperties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/{userId}" : {
      "get" : {
        "tags" : [ "UserREST" ],
        "summary" : "Return the VUserProfile for the given userId.",
        "description" : "Return the VUserProfile for the given userId",
        "operationId" : "getUserProfileForUser",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "userId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPortalUser"
            },
            "example" : {
  "loginId" : "...",
  "password" : "...",
  "status" : 12345,
  "emailAddress" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "publicScreenName" : "...",
  "userSource" : 12345,
  "notes" : "...",
  "userRoleList" : [ "...", "..." ],
  "myClassType" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "userPermList" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "groupPermissions" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "otherAttributes" : "...",
  "configProperties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/{userId}/deactivate" : {
      "post" : {
        "tags" : [ "UserREST" ],
        "summary" : "Deactivate the user.",
        "description" : "Deactivate the user",
        "operationId" : "deactivateUser",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "userId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPortalUser"
            },
            "example" : {
  "loginId" : "...",
  "password" : "...",
  "status" : 12345,
  "emailAddress" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "publicScreenName" : "...",
  "userSource" : 12345,
  "notes" : "...",
  "userRoleList" : [ "...", "..." ],
  "myClassType" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "userPermList" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "groupPermissions" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "otherAttributes" : "...",
  "configProperties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/{userId}/emailchange" : {
      "post" : {
        "tags" : [ "UserREST" ],
        "description" : "",
        "operationId" : "changeEmailAddress",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "userId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXPasswordChange"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPortalUser"
            },
            "example" : {
  "loginId" : "...",
  "password" : "...",
  "status" : 12345,
  "emailAddress" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "publicScreenName" : "...",
  "userSource" : 12345,
  "notes" : "...",
  "userRoleList" : [ "...", "..." ],
  "myClassType" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "userPermList" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "groupPermissions" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "otherAttributes" : "...",
  "configProperties" : {
    "property1" : "...",
    "property2" : "..."
  },
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/{userId}/passwordchange" : {
      "post" : {
        "tags" : [ "UserREST" ],
        "description" : "",
        "operationId" : "changePassword",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "userId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXPasswordChange"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXResponse"
            },
            "example" : {
  "statusCode" : 12345,
  "msgDesc" : "...",
  "messageList" : [ {
    "name" : "...",
    "rbKey" : "...",
    "message" : "...",
    "objectId" : 12345,
    "fieldName" : "...",
    "myClassType" : 12345
  }, {
    "name" : "...",
    "rbKey" : "...",
    "message" : "...",
    "objectId" : 12345,
    "fieldName" : "...",
    "myClassType" : 12345
  } ],
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/users/{userId}/roles" : {
      "put" : {
        "tags" : [ "UserREST" ],
        "description" : "",
        "operationId" : "setUserRoles",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "userId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXStringList"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXResponse"
            },
            "example" : {
  "statusCode" : 12345,
  "msgDesc" : "...",
  "messageList" : [ {
    "name" : "...",
    "rbKey" : "...",
    "message" : "...",
    "objectId" : 12345,
    "fieldName" : "...",
    "myClassType" : 12345
  }, {
    "name" : "...",
    "rbKey" : "...",
    "message" : "...",
    "objectId" : 12345,
    "fieldName" : "...",
    "myClassType" : 12345
  } ],
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xaudit/access_audit" : {
      "get" : {
        "tags" : [ "XAuditREST" ],
        "summary" : "Implements the traditional search functionalities for XAccessAudits.",
        "description" : "Implements the traditional search functionalities for XAccessAudits",
        "operationId" : "searchXAccessAudits",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXAccessAuditList"
            },
            "example" : {
  "vXAccessAudits" : [ {
    "auditType" : 12345,
    "accessResult" : 12345,
    "accessType" : "...",
    "aclEnforcer" : "...",
    "agentId" : "...",
    "clientIP" : "...",
    "clientType" : "...",
    "policyId" : 12345,
    "repoName" : "...",
    "repoDisplayName" : "...",
    "repoType" : 12345,
    "serviceType" : "...",
    "serviceTypeDisplayName" : "...",
    "resultReason" : "...",
    "sessionId" : "...",
    "eventTime" : 12345,
    "requestUser" : "...",
    "action" : "...",
    "requestData" : "...",
    "resourcePath" : "...",
    "resourceType" : "...",
    "sequenceNumber" : 12345,
    "eventCount" : 12345,
    "eventDuration" : 12345,
    "tags" : "...",
    "clusterName" : "...",
    "myClassType" : 12345,
    "zoneName" : "...",
    "agentHost" : "...",
    "policyVersion" : 12345,
    "eventId" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "auditType" : 12345,
    "accessResult" : 12345,
    "accessType" : "...",
    "aclEnforcer" : "...",
    "agentId" : "...",
    "clientIP" : "...",
    "clientType" : "...",
    "policyId" : 12345,
    "repoName" : "...",
    "repoDisplayName" : "...",
    "repoType" : 12345,
    "serviceType" : "...",
    "serviceTypeDisplayName" : "...",
    "resultReason" : "...",
    "sessionId" : "...",
    "eventTime" : 12345,
    "requestUser" : "...",
    "action" : "...",
    "requestData" : "...",
    "resourcePath" : "...",
    "resourceType" : "...",
    "sequenceNumber" : 12345,
    "eventCount" : 12345,
    "eventDuration" : 12345,
    "tags" : "...",
    "clusterName" : "...",
    "myClassType" : 12345,
    "zoneName" : "...",
    "agentHost" : "...",
    "policyVersion" : 12345,
    "eventId" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xaudit/access_audit/count" : {
      "get" : {
        "tags" : [ "XAuditREST" ],
        "description" : "",
        "operationId" : "countXAccessAudits",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xaudit/trx_log" : {
      "get" : {
        "tags" : [ "XAuditREST" ],
        "summary" : "Implements the traditional search functionalities for XTrxLogs.",
        "description" : "Implements the traditional search functionalities for XTrxLogs",
        "operationId" : "searchXTrxLogs",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXTrxLogList"
            },
            "example" : {
  "vXTrxLogs" : [ {
    "objectClassType" : 12345,
    "objectId" : 12345,
    "parentObjectId" : 12345,
    "parentObjectClassType" : 12345,
    "parentObjectName" : "...",
    "objectName" : "...",
    "attributeName" : "...",
    "previousValue" : "...",
    "newValue" : "...",
    "transactionId" : "...",
    "action" : "...",
    "sessionId" : "...",
    "requestId" : "...",
    "sessionType" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  }, {
    "objectClassType" : 12345,
    "objectId" : 12345,
    "parentObjectId" : 12345,
    "parentObjectClassType" : 12345,
    "parentObjectName" : "...",
    "objectName" : "...",
    "attributeName" : "...",
    "previousValue" : "...",
    "newValue" : "...",
    "transactionId" : "...",
    "action" : "...",
    "sessionId" : "...",
    "requestId" : "...",
    "sessionType" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "XAuditREST" ],
        "description" : "",
        "operationId" : "createXTrxLog",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXTrxLog"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXTrxLog"
            },
            "example" : {
  "objectClassType" : 12345,
  "objectId" : 12345,
  "parentObjectId" : 12345,
  "parentObjectClassType" : 12345,
  "parentObjectName" : "...",
  "objectName" : "...",
  "attributeName" : "...",
  "previousValue" : "...",
  "newValue" : "...",
  "transactionId" : "...",
  "action" : "...",
  "sessionId" : "...",
  "requestId" : "...",
  "sessionType" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XAuditREST" ],
        "description" : "",
        "operationId" : "updateXTrxLog",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXTrxLog"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXTrxLog"
            },
            "example" : {
  "objectClassType" : 12345,
  "objectId" : 12345,
  "parentObjectId" : 12345,
  "parentObjectClassType" : 12345,
  "parentObjectName" : "...",
  "objectName" : "...",
  "attributeName" : "...",
  "previousValue" : "...",
  "newValue" : "...",
  "transactionId" : "...",
  "action" : "...",
  "sessionId" : "...",
  "requestId" : "...",
  "sessionType" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xaudit/trx_log/count" : {
      "get" : {
        "tags" : [ "XAuditREST" ],
        "description" : "",
        "operationId" : "countXTrxLogs",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xaudit/trx_log/{id}" : {
      "delete" : {
        "tags" : [ "XAuditREST" ],
        "description" : "",
        "operationId" : "deleteXTrxLog",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XAuditREST" ],
        "description" : "",
        "operationId" : "getXTrxLog",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXTrxLog"
            },
            "example" : {
  "objectClassType" : 12345,
  "objectId" : 12345,
  "parentObjectId" : 12345,
  "parentObjectClassType" : 12345,
  "parentObjectName" : "...",
  "objectName" : "...",
  "attributeName" : "...",
  "previousValue" : "...",
  "newValue" : "...",
  "transactionId" : "...",
  "action" : "...",
  "sessionId" : "...",
  "requestId" : "...",
  "sessionType" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/auditmaps" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "summary" : "Implements the traditional search functionalities for XAuditMaps.",
        "description" : "Implements the traditional search functionalities for XAuditMaps",
        "operationId" : "searchXAuditMaps",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXAuditMapList"
            },
            "example" : {
  "vXAuditMaps" : [ {
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "auditType" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "auditType" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "createXAuditMap",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXAuditMap"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXAuditMap"
            },
            "example" : {
  "resourceId" : 12345,
  "groupId" : 12345,
  "userId" : 12345,
  "auditType" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "updateXAuditMap",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXAuditMap"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXAuditMap"
            },
            "example" : {
  "resourceId" : 12345,
  "groupId" : 12345,
  "userId" : 12345,
  "auditType" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/auditmaps/count" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "countXAuditMaps",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/auditmaps/{id}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteXAuditMap",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXAuditMap",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXAuditMap"
            },
            "example" : {
  "resourceId" : 12345,
  "groupId" : 12345,
  "userId" : 12345,
  "auditType" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/authSessions" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getAuthSessions",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXAuthSessionList"
            },
            "example" : {
  "vXAuthSessions" : [ {
    "loginId" : "...",
    "userId" : 12345,
    "emailAddress" : "...",
    "isTestUser" : true,
    "firstName" : "...",
    "lastName" : "...",
    "publicScreenName" : "...",
    "familyScreenName" : "...",
    "authTime" : 12345,
    "authStatus" : 12345,
    "authType" : 12345,
    "authProvider" : 12345,
    "deviceType" : 12345,
    "requestIP" : "...",
    "cityName" : "...",
    "stateName" : "...",
    "countryName" : "...",
    "requestUserAgent" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "loginId" : "...",
    "userId" : 12345,
    "emailAddress" : "...",
    "isTestUser" : true,
    "firstName" : "...",
    "lastName" : "...",
    "publicScreenName" : "...",
    "familyScreenName" : "...",
    "authTime" : 12345,
    "authStatus" : 12345,
    "authType" : 12345,
    "authProvider" : 12345,
    "deviceType" : 12345,
    "requestIP" : "...",
    "cityName" : "...",
    "stateName" : "...",
    "countryName" : "...",
    "requestUserAgent" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/authSessions/info" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getAuthSession",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXAuthSession"
            },
            "example" : {
  "loginId" : "...",
  "userId" : 12345,
  "emailAddress" : "...",
  "isTestUser" : true,
  "firstName" : "...",
  "lastName" : "...",
  "publicScreenName" : "...",
  "familyScreenName" : "...",
  "authTime" : 12345,
  "authStatus" : 12345,
  "authType" : 12345,
  "authProvider" : 12345,
  "deviceType" : 12345,
  "requestIP" : "...",
  "cityName" : "...",
  "stateName" : "...",
  "countryName" : "...",
  "requestUserAgent" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/group/{groupName}/user/{userName}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteXGroupAndXUser",
        "parameters" : [
          {
            "name" : "groupName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "userName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/xusers/groupgroups" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "summary" : "Implements the traditional search functionalities for XGroupGroups.",
        "description" : "Implements the traditional search functionalities for XGroupGroups",
        "operationId" : "searchXGroupGroups",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupGroupList"
            },
            "example" : {
  "vXGroupGroups" : [ {
    "name" : "...",
    "parentGroupId" : 12345,
    "groupId" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "parentGroupId" : 12345,
    "groupId" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "createXGroupGroup",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXGroupGroup"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupGroup"
            },
            "example" : {
  "name" : "...",
  "parentGroupId" : 12345,
  "groupId" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "updateXGroupGroup",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXGroupGroup"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupGroup"
            },
            "example" : {
  "name" : "...",
  "parentGroupId" : 12345,
  "groupId" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/groupgroups/count" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "countXGroupGroups",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/groupgroups/{id}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteXGroupGroup",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXGroupGroup",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupGroup"
            },
            "example" : {
  "name" : "...",
  "parentGroupId" : 12345,
  "groupId" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/groups" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "summary" : "Implements the traditional search functionalities for XGroups.",
        "description" : "Implements the traditional search functionalities for XGroups",
        "operationId" : "searchXGroups",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupList"
            },
            "example" : {
  "vXGroups" : [ {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "createXGroup",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXGroup"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroup"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "groupType" : 12345,
  "credStoreId" : 12345,
  "isVisible" : 12345,
  "myClassType" : 12345,
  "groupSource" : 12345,
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "updateXGroup",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXGroup"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroup"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "groupType" : 12345,
  "credStoreId" : 12345,
  "isVisible" : 12345,
  "myClassType" : 12345,
  "groupSource" : 12345,
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/groups/count" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "countXGroups",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/groups/groupName/{groupName}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteXGroupByGroupName",
        "parameters" : [
          {
            "name" : "groupName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXGroupByGroupName",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "groupName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroup"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "groupType" : 12345,
  "credStoreId" : 12345,
  "isVisible" : 12345,
  "myClassType" : 12345,
  "groupSource" : 12345,
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/groups/groupinfo" : {
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "createXGroupUserFromMap",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXGroupUserInfo"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupUserInfo"
            },
            "example" : {
  "xgroupInfo" : {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  },
  "xuserInfo" : [ {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/groups/{id}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteXGroup",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXGroup",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroup"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "groupType" : 12345,
  "credStoreId" : 12345,
  "isVisible" : 12345,
  "myClassType" : 12345,
  "groupSource" : 12345,
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/groupusers" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "summary" : "Implements the traditional search functionalities for XGroupUsers.",
        "description" : "Implements the traditional search functionalities for XGroupUsers",
        "operationId" : "searchXGroupUsers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupUserList"
            },
            "example" : {
  "vXGroupUsers" : [ {
    "name" : "...",
    "parentGroupId" : 12345,
    "userId" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "parentGroupId" : 12345,
    "userId" : 12345,
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "createXGroupUser",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXGroupUser"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupUser"
            },
            "example" : {
  "name" : "...",
  "parentGroupId" : 12345,
  "userId" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "updateXGroupUser",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXGroupUser"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupUser"
            },
            "example" : {
  "name" : "...",
  "parentGroupId" : 12345,
  "userId" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/groupusers/count" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "countXGroupUsers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/groupusers/groupName/{groupName}" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "summary" : "Implements the traditional search functionalities for XGroupUsers by Group name.",
        "description" : "Implements the traditional search functionalities for XGroupUsers by Group name",
        "operationId" : "getXGroupUsersByGroupName",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "groupName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupUserInfo"
            },
            "example" : {
  "xgroupInfo" : {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  },
  "xuserInfo" : [ {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/groupusers/{id}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteXGroupUser",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXGroupUser",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupUser"
            },
            "example" : {
  "name" : "...",
  "parentGroupId" : 12345,
  "userId" : 12345,
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/lookup/groups" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getGroupsLookup",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXStringList"
            },
            "example" : {
  "vXStrings" : [ {
    "value" : "...",
    "myClassType" : 12345
  }, {
    "value" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/lookup/users" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getUsersLookup",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXStringList"
            },
            "example" : {
  "vXStrings" : [ {
    "value" : "...",
    "myClassType" : 12345
  }, {
    "value" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/permission" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "searchXModuleDef",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXModuleDefList"
            },
            "example" : {
  "vXModuleDef" : [ {
    "userPermList" : [ {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "groupPermList" : [ {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "id" : 12345,
    "createTime" : 12345,
    "updateTime" : 12345,
    "addedById" : 12345,
    "updatedById" : 12345,
    "module" : "...",
    "url" : "...",
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  }, {
    "userPermList" : [ {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "userId" : 12345,
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "userName" : "...",
      "moduleName" : "...",
      "loginId" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "groupPermList" : [ {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    }, {
      "id" : 12345,
      "groupId" : 12345,
      "groupName" : "...",
      "moduleId" : 12345,
      "isAllowed" : 12345,
      "moduleName" : "...",
      "myClassType" : 12345,
      "createDate" : 12345,
      "updateDate" : 12345,
      "owner" : "...",
      "updatedBy" : "..."
    } ],
    "id" : 12345,
    "createTime" : 12345,
    "updateTime" : 12345,
    "addedById" : 12345,
    "updatedById" : 12345,
    "module" : "...",
    "url" : "...",
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "createXModuleDefPermission",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXModuleDef"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXModuleDef"
            },
            "example" : {
  "userPermList" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "groupPermList" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedById" : 12345,
  "updatedById" : 12345,
  "module" : "...",
  "url" : "...",
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/permission/count" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "countXModuleDef",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/permission/group" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "searchXGroupPermission",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupPermissionList"
            },
            "example" : {
  "vXGroupPermission" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "createXGroupPermission",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXGroupPermission"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupPermission"
            },
            "example" : {
  "id" : 12345,
  "groupId" : 12345,
  "groupName" : "...",
  "moduleId" : 12345,
  "isAllowed" : 12345,
  "moduleName" : "...",
  "myClassType" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/permission/group/count" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "countXGroupPermission",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/permission/group/{id}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteXGroupPermission",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXGroupPermission",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupPermission"
            },
            "example" : {
  "id" : 12345,
  "groupId" : 12345,
  "groupName" : "...",
  "moduleId" : 12345,
  "isAllowed" : 12345,
  "moduleName" : "...",
  "myClassType" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "updateXGroupPermission",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXGroupPermission"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupPermission"
            },
            "example" : {
  "id" : 12345,
  "groupId" : 12345,
  "groupName" : "...",
  "moduleId" : 12345,
  "isAllowed" : 12345,
  "moduleName" : "...",
  "myClassType" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/permission/user" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "searchXUserPermission",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUserPermissionList"
            },
            "example" : {
  "vXUserPermission" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "createXUserPermission",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXUserPermission"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUserPermission"
            },
            "example" : {
  "id" : 12345,
  "userId" : 12345,
  "moduleId" : 12345,
  "isAllowed" : 12345,
  "userName" : "...",
  "moduleName" : "...",
  "loginId" : "...",
  "myClassType" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/permission/user/count" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "countXUserPermission",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/permission/user/{id}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteXUserPermission",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXUserPermission",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUserPermission"
            },
            "example" : {
  "id" : 12345,
  "userId" : 12345,
  "moduleId" : 12345,
  "isAllowed" : 12345,
  "userName" : "...",
  "moduleName" : "...",
  "loginId" : "...",
  "myClassType" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "updateXUserPermission",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXUserPermission"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUserPermission"
            },
            "example" : {
  "id" : 12345,
  "userId" : 12345,
  "moduleId" : 12345,
  "isAllowed" : 12345,
  "userName" : "...",
  "moduleName" : "...",
  "loginId" : "...",
  "myClassType" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/permission/{id}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteXModuleDefPermission",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXModuleDefPermission",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXModuleDef"
            },
            "example" : {
  "userPermList" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "groupPermList" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedById" : 12345,
  "updatedById" : 12345,
  "module" : "...",
  "url" : "...",
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "updateXModuleDefPermission",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXModuleDef"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXModuleDef"
            },
            "example" : {
  "userPermList" : [ {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "userId" : 12345,
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "userName" : "...",
    "moduleName" : "...",
    "loginId" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "groupPermList" : [ {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "id" : 12345,
    "groupId" : 12345,
    "groupName" : "...",
    "moduleId" : 12345,
    "isAllowed" : 12345,
    "moduleName" : "...",
    "myClassType" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "id" : 12345,
  "createTime" : 12345,
  "updateTime" : 12345,
  "addedById" : 12345,
  "updatedById" : 12345,
  "module" : "...",
  "url" : "...",
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/permmaps" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "summary" : "Implements the traditional search functionalities for XPermMaps.",
        "description" : "Implements the traditional search functionalities for XPermMaps",
        "operationId" : "searchXPermMaps",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPermMapList"
            },
            "example" : {
  "vXPermMaps" : [ {
    "permGroup" : "...",
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "permFor" : 12345,
    "permType" : 12345,
    "grantOrRevoke" : true,
    "groupName" : "...",
    "userName" : "...",
    "isRecursive" : 12345,
    "isWildCard" : true,
    "ipAddress" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "permGroup" : "...",
    "resourceId" : 12345,
    "groupId" : 12345,
    "userId" : 12345,
    "permFor" : 12345,
    "permType" : 12345,
    "grantOrRevoke" : true,
    "groupName" : "...",
    "userName" : "...",
    "isRecursive" : 12345,
    "isWildCard" : true,
    "ipAddress" : "...",
    "myClassType" : 12345,
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "createXPermMap",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXPermMap"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPermMap"
            },
            "example" : {
  "permGroup" : "...",
  "resourceId" : 12345,
  "groupId" : 12345,
  "userId" : 12345,
  "permFor" : 12345,
  "permType" : 12345,
  "grantOrRevoke" : true,
  "groupName" : "...",
  "userName" : "...",
  "isRecursive" : 12345,
  "isWildCard" : true,
  "ipAddress" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "updateXPermMap",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXPermMap"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPermMap"
            },
            "example" : {
  "permGroup" : "...",
  "resourceId" : 12345,
  "groupId" : 12345,
  "userId" : 12345,
  "permFor" : 12345,
  "permType" : 12345,
  "grantOrRevoke" : true,
  "groupName" : "...",
  "userName" : "...",
  "isRecursive" : 12345,
  "isWildCard" : true,
  "ipAddress" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/permmaps/count" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "countXPermMaps",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/permmaps/{id}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteXPermMap",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXPermMap",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXPermMap"
            },
            "example" : {
  "permGroup" : "...",
  "resourceId" : 12345,
  "groupId" : 12345,
  "userId" : 12345,
  "permFor" : 12345,
  "permType" : 12345,
  "grantOrRevoke" : true,
  "groupName" : "...",
  "userName" : "...",
  "isRecursive" : 12345,
  "isWildCard" : true,
  "ipAddress" : "...",
  "myClassType" : 12345,
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/secure/download/{serviceName}" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getSecureRangerUserStoreIfUpdated",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "serviceName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "clusterName",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "lastActivationTime",
            "in" : "query",
            "required" : false,
            "default" : "0",
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "lastKnownUserStoreVersion",
            "in" : "query",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "pluginCapabilities",
            "in" : "query",
            "required" : false,
            "default" : "",
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "pluginId",
            "in" : "query",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerUserStore"
            },
            "example" : {
  "groupCloudIdMapping" : {
    "property1" : "...",
    "property2" : "..."
  },
  "userAttrMapping" : {
    "property1" : { },
    "property2" : { }
  },
  "userCloudIdMapping" : {
    "property1" : "...",
    "property2" : "..."
  },
  "userStoreUpdateTime" : 12345,
  "userGroupMapping" : {
    "property1" : [ "...", "..." ],
    "property2" : [ "...", "..." ]
  },
  "groupAttrMapping" : {
    "property1" : { },
    "property2" : { }
  },
  "userStoreVersion" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/secure/groups" : {
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "secureCreateXGroup",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXGroup"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroup"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "groupType" : 12345,
  "credStoreId" : 12345,
  "isVisible" : 12345,
  "myClassType" : 12345,
  "groupSource" : 12345,
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/secure/groups/delete" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteGroupsByGroupName",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXStringList"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/xusers/secure/groups/id/{groupId}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteSingleGroupByGroupId",
        "parameters" : [
          {
            "name" : "groupId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/xusers/secure/groups/visibility" : {
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "modifyGroupsVisibility",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "number"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/xusers/secure/groups/{groupName}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteSingleGroupByGroupName",
        "parameters" : [
          {
            "name" : "groupName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/xusers/secure/groups/{id}" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "secureGetXGroup",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroup"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "groupType" : 12345,
  "credStoreId" : 12345,
  "isVisible" : 12345,
  "myClassType" : 12345,
  "groupSource" : 12345,
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "secureUpdateXGroup",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXGroup"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroup"
            },
            "example" : {
  "name" : "...",
  "description" : "...",
  "groupType" : 12345,
  "credStoreId" : 12345,
  "isVisible" : 12345,
  "myClassType" : 12345,
  "groupSource" : 12345,
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/secure/users" : {
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "secureCreateXUser",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "example" : {
  "name" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "emailAddress" : "...",
  "password" : "...",
  "description" : "...",
  "credStoreId" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "myClassType" : 12345,
  "status" : 12345,
  "isVisible" : 12345,
  "userSource" : 12345,
  "userRoleList" : [ "...", "..." ],
  "groupNameList" : [ "...", "..." ],
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/secure/users/activestatus" : {
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "modifyUserActiveStatus",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "number"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/xusers/secure/users/delete" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteUsersByUserName",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXStringList"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/xusers/secure/users/external/{userId}" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getUserRolesByExternalID",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "userId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXStringList"
            },
            "example" : {
  "vXStrings" : [ {
    "value" : "...",
    "myClassType" : 12345
  }, {
    "value" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/secure/users/id/{userId}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteSingleUserByUserId",
        "parameters" : [
          {
            "name" : "userId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/xusers/secure/users/roles/userName/{userName}" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getUserRolesByName",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "userName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXStringList"
            },
            "example" : {
  "vXStrings" : [ {
    "value" : "...",
    "myClassType" : 12345
  }, {
    "value" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "setUserRolesByName",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "userName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXStringList"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXStringList"
            },
            "example" : {
  "vXStrings" : [ {
    "value" : "...",
    "myClassType" : 12345
  }, {
    "value" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/secure/users/roles/{userId}" : {
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "setUserRolesByExternalID",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "userId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXStringList"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXStringList"
            },
            "example" : {
  "vXStrings" : [ {
    "value" : "...",
    "myClassType" : 12345
  }, {
    "value" : "...",
    "myClassType" : 12345
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/secure/users/visibility" : {
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "modifyUserVisibility",
        "consumes" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "object",
"additionalProperties" : {
  "type" : "number"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/xusers/secure/users/{id}" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "secureGetXUser",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "example" : {
  "name" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "emailAddress" : "...",
  "password" : "...",
  "description" : "...",
  "credStoreId" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "myClassType" : 12345,
  "status" : 12345,
  "isVisible" : 12345,
  "userSource" : 12345,
  "userRoleList" : [ "...", "..." ],
  "groupNameList" : [ "...", "..." ],
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "secureUpdateXUser",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "example" : {
  "name" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "emailAddress" : "...",
  "password" : "...",
  "description" : "...",
  "credStoreId" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "myClassType" : 12345,
  "status" : 12345,
  "isVisible" : 12345,
  "userSource" : 12345,
  "userRoleList" : [ "...", "..." ],
  "groupNameList" : [ "...", "..." ],
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/secure/users/{userName}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteSingleUserByUserName",
        "parameters" : [
          {
            "name" : "userName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
    }
    ,
    "\/xusers/ugsync/auditinfo" : {
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "postUserGroupAuditInfo",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXUgsyncAuditInfo"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUgsyncAuditInfo"
            },
            "example" : {
  "eventTime" : 12345,
  "userName" : "...",
  "noOfNewUsers" : 12345,
  "noOfModifiedUsers" : 12345,
  "noOfNewGroups" : 12345,
  "noOfModifiedGroups" : 12345,
  "syncSource" : "...",
  "ldapSyncSourceInfo" : {
    "ldapUrl" : "...",
    "userSearchFilter" : "...",
    "groupSearchFilter" : "...",
    "groupHierarchyLevel" : "...",
    "totalUsersSynced" : 12345,
    "totalGroupsSynced" : 12345,
    "groupSearchFirstEnabled" : "...",
    "groupSearchEnabled" : "...",
    "userSearchEnabled" : "...",
    "totalUsersDeleted" : 12345,
    "totalGroupsDeleted" : 12345
  },
  "fileSyncSourceInfo" : {
    "fileName" : "...",
    "syncTime" : "...",
    "lastModified" : "...",
    "totalUsersSynced" : 12345,
    "totalGroupsSynced" : 12345,
    "totalUsersDeleted" : 12345,
    "totalGroupsDeleted" : 12345
  },
  "unixSyncSourceInfo" : {
    "fileName" : "...",
    "syncTime" : "...",
    "lastModified" : "...",
    "unixBackend" : "...",
    "minUserId" : "...",
    "minGroupId" : "...",
    "totalUsersSynced" : 12345,
    "totalGroupsSynced" : 12345,
    "totalUsersDeleted" : 12345,
    "totalGroupsDeleted" : 12345
  },
  "sessionId" : "...",
  "syncSourceInfo" : {
    "property1" : "...",
    "property2" : "..."
  },
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/ugsync/groups" : {
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "addOrUpdateGroups",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXGroupList"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/ugsync/groups/visibility" : {
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "updateDeletedGroups",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/ugsync/groupusers" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getAllGroupUsers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"description" : "",
"type" : "object",
"additionalProperties" : {
"type" : "array",
"items" : {
  "type" : "string"
}
}
            },
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "addOrUpdateGroupUsersList",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "$ref" : "#/definitions/json_GroupUserInfo"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/ugsync/users" : {
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "addOrUpdateUsers",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXUserList"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "string"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/ugsync/users/visibility" : {
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "updateDeletedUsers",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "integer",
"format" : "int32"
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/users" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "summary" : "Implements the traditional search functionalities for XUsers.",
        "description" : "Implements the traditional search functionalities for XUsers",
        "operationId" : "searchXUsers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUserList"
            },
            "example" : {
  "vXUsers" : [ {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "createXUser",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "example" : {
  "name" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "emailAddress" : "...",
  "password" : "...",
  "description" : "...",
  "credStoreId" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "myClassType" : 12345,
  "status" : 12345,
  "isVisible" : 12345,
  "userSource" : 12345,
  "userRoleList" : [ "...", "..." ],
  "groupNameList" : [ "...", "..." ],
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "updateXUser",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "example" : {
  "name" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "emailAddress" : "...",
  "password" : "...",
  "description" : "...",
  "credStoreId" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "myClassType" : 12345,
  "status" : 12345,
  "isVisible" : 12345,
  "userSource" : 12345,
  "userRoleList" : [ "...", "..." ],
  "groupNameList" : [ "...", "..." ],
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/users/count" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "countXUsers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXLong"
            },
            "example" : {
  "value" : 12345,
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/users/external" : {
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "createExternalUser",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "example" : {
  "name" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "emailAddress" : "...",
  "password" : "...",
  "description" : "...",
  "credStoreId" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "myClassType" : 12345,
  "status" : 12345,
  "isVisible" : 12345,
  "userSource" : 12345,
  "userRoleList" : [ "...", "..." ],
  "groupNameList" : [ "...", "..." ],
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/users/roleassignments" : {
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "setXUserRolesByName",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_UsersGroupRoleAssignments"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"description" : "",
"type" : "array",
"items" : {
  "type" : "string"
}
            },
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/users/userName/{userName}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteXUserByUserName",
        "parameters" : [
          {
            "name" : "userName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXUserByUserName",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "userName",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "example" : {
  "name" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "emailAddress" : "...",
  "password" : "...",
  "description" : "...",
  "credStoreId" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "myClassType" : 12345,
  "status" : 12345,
  "isVisible" : 12345,
  "userSource" : 12345,
  "userRoleList" : [ "...", "..." ],
  "groupNameList" : [ "...", "..." ],
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/users/userinfo" : {
      "post" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "createXUserGroupFromMap",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_VXUserGroupInfo"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUserGroupInfo"
            },
            "example" : {
  "xuserInfo" : {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  },
  "xgroupInfo" : [ {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "...",
  "myClassType" : 12345
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/users/{id}" : {
      "delete" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "deleteXUser",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXUser",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUser"
            },
            "example" : {
  "name" : "...",
  "firstName" : "...",
  "lastName" : "...",
  "emailAddress" : "...",
  "password" : "...",
  "description" : "...",
  "credStoreId" : 12345,
  "groupIdList" : [ 12345, 12345 ],
  "myClassType" : 12345,
  "status" : 12345,
  "isVisible" : 12345,
  "userSource" : 12345,
  "userRoleList" : [ "...", "..." ],
  "groupNameList" : [ "...", "..." ],
  "otherAttributes" : "...",
  "syncSource" : "...",
  "id" : 12345,
  "createDate" : 12345,
  "updateDate" : 12345,
  "owner" : "...",
  "updatedBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/{groupId}/users" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXGroupUsers",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "groupId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXUserList"
            },
            "example" : {
  "vXUsers" : [ {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "firstName" : "...",
    "lastName" : "...",
    "emailAddress" : "...",
    "password" : "...",
    "description" : "...",
    "credStoreId" : 12345,
    "groupIdList" : [ 12345, 12345 ],
    "myClassType" : 12345,
    "status" : 12345,
    "isVisible" : 12345,
    "userSource" : 12345,
    "userRoleList" : [ "...", "..." ],
    "groupNameList" : [ "...", "..." ],
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/xusers/{userId}/groups" : {
      "get" : {
        "tags" : [ "XUserREST" ],
        "description" : "",
        "operationId" : "getXUserGroups",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "userId",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_VXGroupList"
            },
            "example" : {
  "vXGroups" : [ {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  }, {
    "name" : "...",
    "description" : "...",
    "groupType" : 12345,
    "credStoreId" : 12345,
    "isVisible" : 12345,
    "myClassType" : 12345,
    "groupSource" : 12345,
    "otherAttributes" : "...",
    "syncSource" : "...",
    "id" : 12345,
    "createDate" : 12345,
    "updateDate" : 12345,
    "owner" : "...",
    "updatedBy" : "..."
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/zones/zones" : {
      "get" : {
        "tags" : [ "SecurityZoneREST" ],
        "description" : "",
        "operationId" : "getAllZones2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZoneList"
            },
            "example" : {
  "securityZones" : [ {
    "tagServices" : [ "...", "..." ],
    "description" : "...",
    "auditUsers" : [ "...", "..." ],
    "adminUserGroups" : [ "...", "..." ],
    "adminUsers" : [ "...", "..." ],
    "name" : "...",
    "services" : {
      "property1" : {
        "resources" : [ {
          "property1" : [ ],
          "property2" : [ ]
        }, {
          "property1" : [ ],
          "property2" : [ ]
        } ]
      },
      "property2" : {
        "resources" : [ {
          "property1" : [ ],
          "property2" : [ ]
        }, {
          "property1" : [ ],
          "property2" : [ ]
        } ]
      }
    },
    "auditUserGroups" : [ "...", "..." ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  }, {
    "tagServices" : [ "...", "..." ],
    "description" : "...",
    "auditUsers" : [ "...", "..." ],
    "adminUserGroups" : [ "...", "..." ],
    "adminUsers" : [ "...", "..." ],
    "name" : "...",
    "services" : {
      "property1" : {
        "resources" : [ {
          "property1" : [ ],
          "property2" : [ ]
        }, {
          "property1" : [ ],
          "property2" : [ ]
        } ]
      },
      "property2" : {
        "resources" : [ {
          "property1" : [ ],
          "property2" : [ ]
        }, {
          "property1" : [ ],
          "property2" : [ ]
        } ]
      }
    },
    "auditUserGroups" : [ "...", "..." ],
    "createTime" : 12345,
    "id" : 12345,
    "updatedBy" : "...",
    "version" : 12345,
    "createdBy" : "...",
    "guid" : "...",
    "updateTime" : 12345,
    "isEnabled" : true
  } ],
  "listSize" : 12345,
  "list" : [ { }, { } ],
  "startIndex" : 12345,
  "pageSize" : 12345,
  "totalCount" : 12345,
  "resultSize" : 12345,
  "sortType" : "...",
  "sortBy" : "..."
},
            "description" : ""
          }
        }
      }
      ,
      "post" : {
        "tags" : [ "SecurityZoneREST" ],
        "description" : "",
        "operationId" : "createSecurityZone2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZone"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "201" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZone"
            },
            "example" : {
  "tagServices" : [ "...", "..." ],
  "description" : "...",
  "auditUsers" : [ "...", "..." ],
  "adminUserGroups" : [ "...", "..." ],
  "adminUsers" : [ "...", "..." ],
  "name" : "...",
  "services" : {
    "property1" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    },
    "property2" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    }
  },
  "auditUserGroups" : [ "...", "..." ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/zones/zones/name/{name}" : {
      "delete" : {
        "tags" : [ "SecurityZoneREST" ],
        "description" : "",
        "operationId" : "deleteSecurityZone2",
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "SecurityZoneREST" ],
        "description" : "",
        "operationId" : "getSecurityZone2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "name",
            "in" : "path",
            "required" : false,
            "type" : "string",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZone"
            },
            "example" : {
  "tagServices" : [ "...", "..." ],
  "description" : "...",
  "auditUsers" : [ "...", "..." ],
  "adminUserGroups" : [ "...", "..." ],
  "adminUsers" : [ "...", "..." ],
  "name" : "...",
  "services" : {
    "property1" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    },
    "property2" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    }
  },
  "auditUserGroups" : [ "...", "..." ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
    ,
    "\/zones/zones/{id}" : {
      "delete" : {
        "tags" : [ "SecurityZoneREST" ],
        "description" : "",
        "operationId" : "deleteSecurityZone2",
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "description" : "Success"
          }
        }
      }
      ,
      "get" : {
        "tags" : [ "SecurityZoneREST" ],
        "description" : "",
        "operationId" : "getSecurityZone2",
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          }
        ],
        "responses" : {
          "200" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZone"
            },
            "example" : {
  "tagServices" : [ "...", "..." ],
  "description" : "...",
  "auditUsers" : [ "...", "..." ],
  "adminUserGroups" : [ "...", "..." ],
  "adminUsers" : [ "...", "..." ],
  "name" : "...",
  "services" : {
    "property1" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    },
    "property2" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    }
  },
  "auditUserGroups" : [ "...", "..." ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
      ,
      "put" : {
        "tags" : [ "SecurityZoneREST" ],
        "description" : "",
        "operationId" : "updateSecurityZone2",
        "consumes" : [ "application/json", "application/xml" ],
        "produces" : [ "application/json", "application/xml" ],
        "parameters" : [
          {
            "name" : "id",
            "in" : "path",
            "required" : false,
            "type" : "integer",
            "format" : "int64",
            "description" : ""
          },
          {
            "name" : "body",
            "in" : "body",
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZone"
            },
            "description" : ""
          }
        ],
        "responses" : {
          "204" : {
            "schema" : {
"$ref" : "#/definitions/json_RangerSecurityZone"
            },
            "example" : {
  "tagServices" : [ "...", "..." ],
  "description" : "...",
  "auditUsers" : [ "...", "..." ],
  "adminUserGroups" : [ "...", "..." ],
  "adminUsers" : [ "...", "..." ],
  "name" : "...",
  "services" : {
    "property1" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    },
    "property2" : {
      "resources" : [ {
        "property1" : [ ],
        "property2" : [ ]
      }, {
        "property1" : [ ],
        "property2" : [ ]
      } ]
    }
  },
  "auditUserGroups" : [ "...", "..." ],
  "createTime" : 12345,
  "id" : 12345,
  "updatedBy" : "...",
  "version" : 12345,
  "createdBy" : "...",
  "guid" : "...",
  "updateTime" : 12345,
  "isEnabled" : true
},
            "description" : ""
          }
        }
      }
    }
  }
}
